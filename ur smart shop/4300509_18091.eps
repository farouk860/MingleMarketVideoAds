%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1702.i301.023.P.m008.c15.kitchen appliances isometric set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: AKSANA
%%CreationDate: 2/27/2017
%%BoundingBox: 0 0 400 394
%%HiResBoundingBox: 0 0 399.0762 393.5132
%%CropBox: 0 0 399.0762 393.5132
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">isometric</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2017-02-27T12:30:07+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2017-02-27T12:30:07+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2017-02-27T12:30:07+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>252</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA/AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq4kAVJoB1JxV&#xA;BzX4G0Qr/lHFVKK9lU/H8a/jiqOinjlHwnfuD1xVfirsVdirsVdirsVdirsVUru7tbO1luruZILa&#xA;BDJNPIwVERRUszHYADFWL235ufllcWct5H5lsBBC3BzJMsbcvZH4u30DDwlHEEqm/wCcgfydhlET&#xA;+ZYCxPGqRXDrWtN2WMrT3rjwlHEE/wDL35j+RPMUgi0XXbO8nb7NusoWY/KJ+Ln7saTYZHgS7FXY&#xA;q7FXYq7FWmdUFWIA8TiqXap5i0vTYec8vJ2+xCgq7fIdvmcVYfqGv63q5Kxt9Rsj0VSeTDtVtifo&#xA;oPniqRHy1JBJ9Z07ULi1vgeSyhhxr1oQADT6cVT3SfzGvtPkSz802/pgnjHqcIrE3+uB0+j7sVZ7&#xA;aXlreW6XFrKk8EgqkiEMp+kYqq4q7FXYqh5ryOPZfib26YqgZZpJTVzt2HbFVmKuxVsEg1BoR0Ix&#xA;VEJqQjA9cjj0Dd6+HviqPV0cVUgjxGKt4q7FXYq7FXYq7FXzD/zkx+bP166fyPos1bS2cfpueM/3&#xA;kwPw2ykdlP2v8rb9nLIhrkXgMsEtq9HT0CduQ+KNvY9vvydMLaDJsHAibsf2D9PbFXNEUcGnFxur&#xA;DY/MEYq98/Iv8/dUtdStfK/m67a70+6YQ6fqkxrLBIdkjmc7tGx2DHdfl0hKLOMn1DlbY7FXYq7p&#xA;iqFmvkXaP4j49sVQUkjyNVzU4q8+85audK8yRyXlsZbKeJfSmG/FlJ5AA7GmxxVG2OoWd9CJrWVZ&#xA;U706j2I6jFUTiqyaKGWJo5lV42FGVgCCPeuKpRBp+p6PcNd+Wrv0qmsthIeUL+3t/nuMVZd5Z/MG&#xA;11O6XTNRt207VzsIX+xIf8hsVZVLcRxD4jv2UdcVSPVPMASOVYB9Ymi+1axMC4r3Yfap8h9GKscs&#xA;POn7wrqEQRamkkYPw+zKSent23+SrKI5EljWRDyRwGVvEHcYquxV2KoWS7ZkLW6h1H+7W2T/AGO4&#xA;5fRt74qxnzN5+8veXoRLdzmS8dQYrdQJLluX2QkY2QN0qaA/PCBaDIBlPkTVpNX8uQalJC1u9yzO&#xA;YWPIr0FCaL4eGApZBirsVdirsVdiry78+fzWTyV5d+o6dIP8SaqrJZKD8UEZqGuCPbole/yOSiLY&#xA;yNPkLToHkf65KxdnLFJG+KrH7cj13+WXgNEij2RSnBlHAj7Lbjif4thYpVeWkMEoWIlVNTLA26rX&#xA;pQ5EhmChVYr8CGoO4hkBAIO9Vr4+2BK7ikvwpUP/AL7b7X+xPfFX3H+Svm6bzT+XGlajdP6l/CrW&#xA;d8x6ma3PDk3u68WPzymQ3bonZnOBLsVQGvTyQaRczRmjxryX5gjFUgsdft56JPSGTx/YP09vpxVN&#xA;euKqF7Y2d9btbXkKTwP1RxUfMeB98VYDrH5c39hMb7y1cMGG5tHajU8FY7MPZvvOKoLTvOJjmNnr&#xA;ULWl0h4s5UqK/wCUp3XFU01FJ7kwzW7erbcSfgNQSa77dcVSdLPUY9WhuQWt4E4+o7bVAJJXj3qM&#xA;VZNpKzanrVkYLfklrMkrTEVKKpqTXtUbYqmMGvrMjQX3IBwVM0ZKnf8A1SCPmMVSy48qXayxz6XO&#xA;JY2Pwvy4Mm9a1X9Y3B7YqyC00WBfTmvVS5vUG8/ALU9qqNiR/MRXFUyxVRkuVDGONTLKOqr0X/WP&#xA;Rf1+GKpJ5i8y6Jodi9/rl7FDbp0Dn93X+VVHxSt7AH5DEBSXimuf85DatrGsHTvK9oiQ8JgtxeEi&#xA;R2ELlSqrURgEchWtdq03yfCw4kbpt9cXLeWLjT9LTXvN2r2NtdX0lyV4RQJGscktOUahuP8AM3Uq&#xA;BXlsq91/L/VH1XyzBfunBp2clacfsnjXjVuNaV41NOlTkCzDI8VdirsVdiry7z//AM5D+RvKczWV&#xA;u51vVENJbazZfTipsRJMaoD7Cp8aZIRYmT5Z/Mbzl/jXzhfa+0clut4ESC2kcOY440VQisAF7dhl&#xA;gDWSlsF8h+GUcCKDkuymg2UjsMmC10rzzLDEX2PInj3V27n6MJUBLreE3M557xKay9uRPRB/n0yI&#xA;ZEpjPbw3C8JUEhG1OjBqdAR2XJEMQUqurIwlfjE0LtRWO0i07n2yJDIF9Lf84h3GpnRvMdtM7Np0&#xA;VxbSWtQKCWRHE2/UnhHF+GVTbYPoHIM3YqlvmX/jg3v/ABjP6xirwTyNrnmq982+a7DVZYrnTbG6&#xA;I06WIxH00Z34wt6e/JUA5B9wcJQHo9jq13aEKDzi/wB9t0+g9sCWQ2Oq2l2KI3GTvG3X6PHFUZiq&#xA;V695f0bV7fhqMIJUUjnX4ZE/1W/h0xV5pqukah5anWO21BjaXJb0Nypqu55Luvfriqd+WLP69c2M&#xA;N5N6zTv8fxEkru/2u3wjFXrFraW1rCIbeNYol6KooMVeYnqcVVrW9ubV+ULlfFeoPzGKp9Z+YLeV&#xA;G9dTG6DkaAsDTwpviqrd3qRwvNdSi2t0Us4DhSFG5LyVog+R+nFXjnnr/nIXTrNZNO8pwrfzqSpv&#xA;CCtpG3itKGU/cvffJiDAzeOa3fatq1yt9rd1JqGqz7RrIfgiB7IgoqgeAFMsAaybQvl9YY/N8UEe&#xA;5iSUSP4sbdq/dgkmL1bSr2by5pflTVNNuOWpazpEGnvaxwyXEyRyLH+/SOIM9E9GuwP7Xwt2rZvf&#xA;vy5ewfynaGwVktFqkYYhm+Cikll2arAnkNj1yJZhk2KuxVjPn78w/LfkbRxqetysBIxjtbWIcppn&#xA;ArxRSR07kmg+kYQLQTT5Y/ML8+/O/nVprCwJ0fQ2PF7W3Yh2U/8ALROACfdVoMsjFrlJgFvpcUZV&#xA;pf3svVR+zXxQdG/2WWANZK+50+CYM60jf9pgPhJ/4sTt9GJCAUulSe2dUkAPIVQg1qP8lv4HIsnB&#xA;+akIdwDsexPiMVTKyltxCsSngwH2XNQSR8T18ckGJRLsigl9kUVKnqq+x8T3wod5e0HVPNXmC30u&#xA;xXlPcNTkR8Mca7s706Ko3P3dcgS2APtr8v8Aydp/lTy9BplkhRFUFi323bqXf/KYkk/d2ykm24Cm&#xA;S4EuxVLfMv8Axwb3/jGf1jFXzV+WB0r/AJWN56FstxBc/W29W3lIaNv30nOVSAp+N91B6A9Tkpcg&#xA;xHNnXnPX5PL/AJW1LWY4fXls4S8cXYuSFXl0+EE1b2wAJLwX8p/zF1r/ABTH+kb6WVbiRRcF3J5I&#xA;541Yvy/u2INetO+XEWGq6L6stdWvRbqC/I7/ABMKnr45Q3Kmo6h6EJmkPNz8MaeLHtirzzzZqlxe&#xA;yWiygUjaQqVWi7gAgEmp6eGKsg8jf8dXS/n/AMymxV61irx+DV7Ka6ktufCeN2Tg+3LiSKqeh6Yq&#xA;jMVXp/dz/wDGJsVeaf8AOQssx0ry5aes8drczzfWI1YhGCBCpZQaHjXauTgwm8kgWFibkqEtLfaF&#xA;KUqfH55a1LTLIoNywrc3HwwJ/KvSuKFPSvQ07zLHJLyPpxSyXDKrOafV3qaKCSFA3yMmcXuX5d6T&#xA;5ltk8va5p2nLqYm0GK0s+cgRYJHWI8jWp4/u2L07H4a75WWwPcPJmgyaD5ettMkf1HiBLv4s27H2&#xA;q1aDIsk7xV2KvJ/+cgfKNh5k03R7e6u1sJFnljs7p6FTPIgYQlWK8uaxsaAg/Dt3GEGmMhb5Lu7G&#xA;60y6mRXVvq8rRSTRVKc0YrRgwBXcbcwK9q5cC1EL4L+NhxlAjJ6mhKHvuOtckCxIU7jUuIHp/CBs&#xA;JGNSPZfEYkqAox2l1cMWasSmpLsOUm/fh1APjgpNqs+lAgNC9GFAA5qD8pB0PthIQJIItJG5jmQq&#xA;43II3+ZHf5jIskQstxOqQoTLyYcFHxEsdgNtyfAYbRT61/Ij8qk8s6R+kNQiB1e9Ctc139MDdYAf&#xA;8nq/i3iAMpkbboxp69kWTsVdirFfzP8AMdv5e8m3mp3Kk2ivDFcSCp9NJpVjLkAHpywgWgmniv5d&#xA;2Ouf4m8y6xLd2+oaFq0yz6VfwyJKzJyYrFVfjAiRgnFuh6YZKGc39ja39jcWN2gltbqN4Z4z0ZJF&#xA;KsNvY5FLyI/845abH5jjuLTUpYtCIrPatvcEgj92sgoOLdeR3Hv1yfGx4XuNqqrboqgBQKADYAA5&#xA;BklPnS7nhuLcKxWMQTOu3VxQVr/k1BxVi001tfrErt6EkNeFd1oRSldvDFWQ6L9agltjayhJ4KES&#xA;UqBQUJofY4qnWjfmmbzW5dMilS7eL7bcAqGjhSFZT2LDrirA9f0y9stRuDdQtGskrMCw2+JiRXpQ&#xA;796HwOKqmneY7y1ok9Z4RsQxo6/JjT7m+/FWVafqFre29w9u/LjGwdDsynwYHpirzn/nIaP1bLyt&#xA;HWnOe4FfmI8nBhN5WUW5kMSCljaCsrVopI8SctaUf5Z0HX/MepOuhWJvplPBrySqWduPdiPiNO3/&#xA;AApwEgJESXv/AOXP5B2OjXK6vrM7ajrDK6maQcYkWVCjrHD3BVitX7dAMqlK26MKetaZpOnaXaRW&#xA;dhbpbW0KCOKKNQqqiigUAbADwyLJF4q7FXYqlnmDyzoPmKxWw1uxiv7NZFmWGYVUSKCAwpTcBjit&#xA;Pkr8+/y81Dyd5xuNWsISmg6xI01rOgPCOWQEzWzU2G/IqCKFduxy2JtqkKSjzT5V8pad5R0a8j1J&#xA;V8xX0cU9xbIyvFxmQuTwj5NEE2Wq1Fa0X+VBNqQKYT6UlrOJHQMSDxLUdStaVUjkp+a5IFiQmEN3&#xA;FNQD4X7Rsd/9i3U/I5O2FLpriKGvI/GajiB8R26MvT6Rja0hY4L7VriKztYHmkkcehbxKzuW/wAn&#xA;jVj8hkSWQD338kfyWuNP1n9I+YIokvvSE1raPxlaKjispoCqyDYLxbau+/SqUm2MX0dFGkUaxoOK&#xA;KKAZBmuxV2KuxVB61pFjrOkXuk6hH6tlfwSW1ylaExyqVah7Gh2PbFXimrf846aj5bB1L8r9Zlsr&#xA;tfin0fUX9W0uQK7cgvwNQ0FQfmvXJ8Xex4e5KNI/M4W+pjQPO2nyeV/MS0HpXO1tN25QzbrxJrTc&#xA;jwY4DHuXi72dAggEbg9DkWSNt/7lfp/XiqYXdla3cfp3MSypvQMOlRQ0+YNMVeX/AJi3vkbytASt&#xA;20eofsabD+/Zj1+IFh6fXu30ZIRJYmQCYT6d5n0XS9RgurKSB5LZpIifjFQpPwOh41FdxWuRZNfl&#xA;X5Wv576K7e2+rOkfpq7cgzp6vqtNKp6VoFXx+WKvbNT0fT9ShMV3CHBFA1PiA+f8DirzPzN+Vlzb&#xA;8rjSj6kQr+53qB3A6kfiPbFUo8qW09uNTinjaNxEvwsKfzdO1PkaewxVi3586fqN/F5VttOtZby7&#xA;ea44QQgljtH4dB4ntk4FhMK3kP8A5x3v79YrjzZLS2U800e2YpCp/wCLpV3c/wCqa/5WGU0Rxvft&#xA;E8taRo1pFa2NtHDDCKRxxoERf9VV2GVtiaYq7FXYq7FXYq7FULqmlabq2nzadqdtHeWNwvCe3mUO&#xA;jDruD4HceGKvDPN3/OJmhXcj3HlfVJNMZjyFjdKbiAHwSSqyoP8AW55MTYGDz28/5xp/NvT+UdvD&#xA;ZarDXkY4bkBWoDQ0nEBDduQPIV2OHiCOEpRdfkZ59htFmawEd4CRPpbyxGZAOjo/L0nVu3x8h74e&#xA;NHAjfJ/5CebNXvP9zEf6KtFI9QuUlmevaNI2b72I+RxM1EH0b5H/ACp8veWbfjZWwhkcATXD0e5l&#xA;HX43psP8laD2ysm2wCmQ6J5R0vR9U1HU7eS4mvNTKes9xM0oRIyxSOFW2jQGQ7LgWk7xS7FXYq7F&#xA;XYq7FUm81+TfLHmzTG03zDp0WoWhqUEgo8bHblFItHjb3UjCCtPFdV/Kz8yfy+ZrryXcv5p8sJ8T&#xA;+X7xh9dhWtW+ryAAPTsBQ/5DdclYPNjRHJS0r88vIj2NdQnm0u+hqtxp9zDIJUkB+JfhUjY7dsBi&#xA;vEEXaat+ZP5jkx+UrZvL/lp6q+v3gKyyLvUwKNyf9TYEfbw0AiyWd+V/yL8gaLCHu7Jdb1NmEk2o&#xA;6iBM7ODWqIfgQV6ACviTgMiUiIDOb3TbG99P61EJPSNUJJFK9enY+GRZOsdMsrBXW1iESyHkwBJ6&#xA;fPFUTirsVS3UfL+n3okYp6UzqVMqbVqP2h3xVSsPL0MAUzkSstQoGwofxxVNwAoAAoB0AxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxVKPNejXWr6DeWdhcCy1KSJhY3xUP6MvVWoe1Rv7YqUJ5F8vaxouhxQa7f&#xA;pquslna4v0iWFWBY8FVVCgBVp2xKAyLFLsVdirsVdirsVdirsVdirsVYR5q/J7yb5n826b5n1OKQ&#xA;32m8KQp6XoTiN+aC4Ro3Z6E/zDbbCCghmyIiIqIoVFACqBQADoAMCW8VdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqR+avO/lX&#xA;yrai517UYrJX/uomJaWSn8kSBnb5gbd8IFoJp5hqH/OVnkmGQpZaZqF2B/uxliiU/Kru33jJcBY8&#xA;YVNL/wCcqPIdy6pfWN/Yk9ZOEc0Y+ZR+f3JjwFeMPU/Lvmjy/wCY7AX+h38V/a14s8R3VuvF0NGR&#xA;vZgDkSKZA2mmBLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;diqldXAt7Wa4ZSywo0hUdSFBNB92KvgbzL5k1bzJrd1rOqzGa7unLEkkqi1+GNAeiKNlGZAFOOTa&#xA;G0zUdOKtE7LFcIxVw+1d/hIJ8RkgQxILWpXlk0kcUVHmYkkr0CgHcn54CVALJvyn816r5b89aVc2&#xA;Mj+ndXEVre26naaGZwjKR0JFar4HIyGzOJovuLKG92KuxV2KuxV2KuxV2KrZJY4xVzTw8cVQE2sR&#xA;JIFJRSegY0OKoqG8ikoD8LeB/gcVV8VdirsVdirsVdirsVdiriQASTQDck4qkl95ljRilqokI/3Y&#xA;3T6BiqRTeYNVlP8AfFB4IKYqpDV9TH/Hy/34qibfzLqcRHJxKvcOP44qnOi+arHUWETfuLk9I2Ox&#xA;/wBU4qneKuxVxAIIIqDsQcVfnh5gsbry/wCZtT0O5QlbG4ligkFfiiSQqjCvUEDMuUCHAxaiExd9&#xA;a+IQnOznbcAuPEUI+nIN4Xp6CV4AAnrQbnEIJA5s7/Jby5da35+0e44hbPTr6CaUHuYpFcA/SBQd&#xA;/lhMDRafzEeIAHcl9uZjOe7FXYq7FXYq7FXYql51i3maWO1cSNCxSRhvRh2yEJiXLorB/Onn0aJF&#xA;LKyfBCSLiV2K8KU41PFqBq/Dk1YFq12vm61S40S/it9VIBSG6rJFNx3okiEdT3FT/k4ULNB/NTzB&#xA;5dvY9J8z20kLk0jS4bkHANKwXH2ZPkxrjS29i8u+cdM1aENaTiQgfHA+0i/QflgSyOKeOUfCd+4P&#xA;XFV+KuxV2KuxV2KuxVJfM108cEcCmnqVL+4HbFWN4qhnXixH3YqtxVTuJAkTHvSg+ZxVLFZlYMpI&#xA;ZTUEdQRir1DQb5r3SoJ3/vKcZD/lDFUwxViX5oefYfI/lSXWWg+sXDyLbWcJqEMzqzAuRvxCoTt1&#xA;6bVrkoxssZSoPmhNKvtdvb688126vcX7/WUhPwvH6370leJHDlzHwj6c3Wlx8UfVuOjwHbmtGHLW&#xA;H0yBPF5k7/H8Ug3/ACv0YSF4LieMHbi3FwPlsDl/5SLgR9oc1URE/NQvPJ/lzR4RPeyXFxU0SJKK&#xA;GPgSAKfSwyM8cICzbfp+0NTqZcGMRj5n8foL178jY7Dnpj2ltFDBcSzOEjqwqsLULFgrFgU3qOuY&#xA;mqkDjsfjd23ZOOY1VTJkQTz/AKvvO3c95zUvZuxV2KuxV2KuxV2KvmrQfzCvdPunjuwZIlkZVmj+&#xA;GRQrECvZts0+LIcRPDyPRgDT0ux8waF5gtV+s8ZhQqtzHtInLqGA3HuOh7jNli1EZ8ufcyBYX5l/&#xA;Jwws+peVZxbM9XeKNedtIf8Aiy3T7J/yof8AgMyL70V3Mc/xZPAi6F5305Zbaf4YzcUlhkoacoLn&#xA;7JIr0YhhtuMa7lvvRdl5J1GKWHUPJuqg2AajWV+8iPbmgJWKdFkfYGnFgRTucbWnsXlO51t7GMak&#xA;6yyovxXKVCs1duJIXlt1NOuRZMii1m3S5itLiQCaY0i9z4H59shLJGJAPVUyyauxV2KuxV2Ksf8A&#xA;NlEW2lYURiY2k7BuqV9vtYqkDfCCW2p1xVAzXTOfhFAOh74qpeo/jiqnOrygGvToMVUIIHmeg2Uf&#xA;bc9FHvir0vy7b+hpMI48eVWoetOi19+IGKpliryr/nJfTJbz8sJpkFV0+7t7mTpsp5Q9/eYZOHNh&#xA;Pk851O5+t3Om6jWv6Q06xuG7/G1qiyf8lFbN5oT6B8Xzb2jx1qZHvAP2LMznnGNeeyP0bEter/Z5&#xA;daDf93/uzbr4DfrTMPWfS7/2eH74ny7v99/D+nlyeu/kRAGttP8AV5l4rOSZGd1kNS6oKsux+GTb&#xA;NdqZegPV9lYx+YkffyBHM9xezZr3pXYq7FXYq7FXYq7FXx1L/fzf8ZZP+JnNJLmwVbK+vLKcT2sr&#xA;RSr0ZT+sd8FIegeWPzQaJ1ivz6DnYzKKxt/rr2+eZOLVyjtL1D7f2/jmyBZzPb+WPM1sVu4oiZ6F&#xA;mKpLDLTcc1cMjf7IVHY5sMeSMhcSnmmOl+XNE0uBYkSERpulvDGsUI7VES7ffXJpQ+s+b7S1QrCw&#xA;ZugIO33j+Ga/P2hGO0fVL7GJkxfTtdutQ8zaZzNFN3CPo9Qbe2YOGcsmUGZv9CBuXs2b5m7FXYq7&#xA;FXYqh9QsYL6zltZxWOQUqOoPUEe4OKvOb4Xuk3Umn3NJVUApWu6NWjKetOv04aRYulsBgnqUSRQO&#xA;tOL/AKymBKoLdSd/Vp/qD/mrFVyWv+QT4FyFH3Ly/WMVTHRLK3vNRFoXBMK+tIiigVagDp0Le+/X&#xA;JcBq+jDxI8XD1ZyoCgKBQDYD2yLN2KsS/NvS/wBJ/lr5ita0pZST7/8ALtSen0+nko82MuT5mfzT&#xA;bx+UPK/pyI9/HbSWksdalPSu5TGWFa7xuoHyzaaPMIij3vJ9tdmSz5eP+GMN/gShobrUb6Vg12yl&#xA;QGKhiNj4KtM2sQZPOTx48Y+lKPNE9/DAsD3DSLyViCeSjeory3BqNqZi6wERp2nZEYHJxAAH8fg/&#xA;Zu+jvyAaOTQ3Bj4z2sFvFXiE2fmWoq7b8Bmp1J2iHp+zsdZMh93W/tesZiO2dirsVdirsVdirsVf&#xA;HUv9/N/xlk/4mc0kubBbgQ7FU28v69qemXSfVZisZJ5RHdDsT0OIsGwaKWYR+ctSvOUJAQFSWI79&#xA;uwHjkc08ko1KRI+X3KXnv5lp5nupbNbR+dlO6RekrhJGuGLFak0HGgFN+uZPZ0sUbsbj7mBZj+VV&#xA;rrFrNokGrH/S0vIhxLB2VPVHEMwJBI+eR44Sz3Dkyi+ks27Y7FXYq7FXYq7FUj81eXtP1WyMtxOL&#xA;Ke2Vmjv9gI16tz5EBk23BP3ZdimQariB6ONqMQkOK+Ax/i7vf5PGn8/WWl6lNZ/WI7yOM73cCyek&#xA;4HgHUfSRt4E5nHs+9x6fI/sdRDtvhJBqYH8Uf1H9abR/mNpjRcxbzMKVBVag/dU5D+TZ94+39Tae&#xA;3cXdL7P1r7DzHd67drZwXEGjQuQDc3HJnIP8tVCg+zU+eW/kRjHEQZ+Q/FuOO15ZpcETHF5nf9j1&#xA;Py75csdCs2gti0ssp53NzIaySP4k+A7D+NTmuy5jM2Xd6bTRxRobk8yeZTXKnIdiry786fzPm8qp&#xA;b6NDaJM2qwS+rcTDmiR/3ZX0iKNWvfb2OYmpzygKjzd/2H2Zi1EjLKTwR6Dr+x8p+YIYtKa21Gxg&#xA;+sWLMwuKGvAkjgR4d+uWdm68mdTq+jL2r9mscMInpuLgN8W91yod9fsXw69o92UErFJF3UsGUjx+&#xA;Jf650g1WOXN8tl2ZqIXwix8P0qt7e+XhCrST+t6Z5mCJGLMadGkfiPnQnKNRngRQczQaLNCXFMfb&#xA;+plvkXzl5o08tq9pM2nc2AihB+AwKNvUUij1PI7j3Gcrr9VI5RwHkKfZPZnsXH+Rl+YjtORkL51Q&#xA;FjqOW3k+g/y5/OHTPNEi6dehLXVTVYihrDMVHxBCa8WFPsk/I9sycOpJPDMcMnQdp9iDFDxsEvEw&#xA;9/d8ufvei5lvPuxV2KuxV2KtMwVSx6AVP0Yq+PryCaC8uYZkMcsc0iujbEEOdjmlkKLBSyKHYqrW&#xA;f+9KfT+rCEp/pzqkzsxCqEJYnYAChyufJSg9Zv7S/tNEvLOUTW0uo25jkFaGhYHrQ9RksMDEyB58&#xA;JYsy8rTwv5o06JJFaWK7t/UQEFl5OCvIdRXtg0oPGCkPfM3zY7FXYq7FXYq7FXgv5m+eLnzFrD6J&#xA;p8pTR7RyshU7TSIaM5I6oDsg+n5dBodKMceI/UfseI7Y7ROfIccD+7j9v7O75sWlsLaS1Nsy0jII&#xA;qPtAkUqD45mkW62Hp5OjSCwtDykIhiHJpHI2AHtQYOQ3ZbyNAJvouh32oW1te3E40yC8dV063aGS&#xA;4u7gMrMp9JGjEQZULKWY/CCSBTNZl7So+kPQafsG43klR7g9K8n69e6PqNt5c1W4F5b3IKWF8EeP&#xA;05kUH6vKjljFyB/dgsa9vbBzTjl9QFS6+fm7bS4p4PQTxY+h6jy93d8noWYjsXYq+c/+cpP+O/of&#xA;/MLJ/wAnM1+s5h672c/u5+94rDcSwklDs2zKd1YeBGYRFvTQmY8laGx8t3Lg3FokE38yFkQ/QpAG&#xA;T/MZo8pW1fyV2fmP7zGIy/okxHyBoI2ex8v6VGJvqyuxPwVq4qBXqxb8MswnNqDRlQ/Hc0a/H2d2&#xA;ZATGLikfp5y398rA+/uBpLptR1TVJfSgUhP5V2AFe57ZsoYcWnF9e/r8HkdR2hru1J8Avh/mjaI/&#xA;rH9fwpG6QkmhzfWobhjegh1SI0RZEoUfl/MKdR/TNfqtQMpFCq69Xp+x+zDo4SEpcfGN4/wfrJ+X&#xA;xfaHk/X4vMHlfS9ZjIIvrdJXp2kpSRf9i4IzY45cUQXh9Xg8LLKHcfs6fYm+TcZ2KuxV2KtMoZSp&#xA;3BFCPniry/Wfy6vtTW7XU7GN0hlZbC6tpS1w1uCfTZqotGC0DIeQ8MryYYz5op5br/kXVdL5zQg3&#xA;lmlS0iKRIgHX1I9yKeIqPfNfl08o+YYkMbzHQrWf+9KfT+rCEpzGFMF0G9Pj6ElfW/uqU/b/AMnx&#xA;9siVKT2rh/LHlgiZJx9dtx6kaekhoXFAtF+zSnTfrlpH7zJ09JYO/KnTfM0v5pw6vewTQpFc+pfO&#xA;6sqtHG2yiv2lRQGHsPlmfGWPgjGO5/FpjzfYGZLa7FXYq7FXYqlPm3UH07yxqt7GxSWG1laFl6iT&#xA;gQh/4KmXaeHFkiPNxtbkMMM5DmIn7nzRoyDjJIepIWv451UnznEEyyLahpbGLU9Y0bSJyPqt/exJ&#xA;dAmgaFWDSJv/ADqCuYWvmRjLtexsYlnF9Hpnm3UotN8jweYYoWkvRNb3enQBfjeaYhYk3+z8EnHf&#xA;ouaDq9oeTXm8teeXk1eDjZ3Mtsl1cXCkc0ltmW4gUORv6bBlrTox8cMTRYzjYp6nZXS3dnBdKOKz&#xA;xrIF605AGmCcaJHcuOfFES7wrZFm8q/Oj8u7jzbd6cYI5RNFDKsV1EnNEYEMUnFeXFx9kjoQfEA0&#xA;ZsHGPN2nZnaZ0xIq4yfOXmLynrvl65MOpWxRSeMdwtWicj+V/H/JND7ZrZ45R5vZ6XWYs4uB+HVJ&#xA;8g5SOs7mEwS292OduFLBepFPD9eMbEgYmiyyeHPFLHlHFCuX43+SyDV4p4JFs4/Rt49gqj7W1ftd&#xA;/fLs+KUZeo2S4PZutx5cZGKPBjidhVX5/jdikmp3EtyLpGKMKcQDUbePSubYYY8NVs8FPtDP43ic&#xA;R4gfwPc+sv8AnGfzIbnQtR8vzN+806UXNsp6+jc1LAeyyKfvzD0ktjHud57RYKnHIP4hR9/4+57R&#xA;mY827FXYq7FXYq7FUv1LQ7G/+N19O4H2Z02YHtXxxV5j5x/KuCX1LhU9CU7/AFy3X4G/4yxdvmPx&#xA;zGy6aMtxsUEPL77y5quj3sYu4qwsxEdynxRNsejdj7GhzBnilA7saRNrDLMJoYgrSyROkayLyQsw&#xA;oAy9xXqMpkpZV5T/ACuvptK0yDX2+OzKSIkS8HMiV48EUKFVQaDkP9jmVDTSlIy+mJ+aiL0u28q6&#xA;jaNZQ6bDa21iZVbUGmLtM0SEEqFUUZn6VZwF8D0zPx4owFAMqZhliXYq7FXYq7FUl842Q1Dy/dad&#xA;yCPeo8MTHoHZGK19qjLMM+CYl3Fo1WHxcUofzgQ+b7FJbO5nsLpDFcRuQ0bbEMuzDOqsSFjk+cCJ&#xA;hIwlsQj8WxA6qLqE2mo2aCS70y4ivIYiaBzC6ycCfBuPE+2Y+qxccCHO7O1AxZRI8nr3l/zNpWsa&#xA;arrH9c0+5YixRInnMaAcmjuolVzFJG4ZfiFNl3qc5uUSC91GQIscmJ+dtWbzHqtr5M0OPlAjomoB&#xA;KBY0jdX9NihorM0a/CPsqG5AVy/T47PEfpjufx5uJrcxjHhj9cto/r9w5vadEjWLTooFbkkAESN4&#xA;hAF/WMonKyT3uVjhwxEe4I7Is3YqlWueWdI1q3khvYEcSDi5Khgw8GU7MPngIB2LPHklA8UTReDe&#xA;ff8AnH65tDJeaA1I9z9Wckxn2RzUp8nqP8rMLLpOsXpdF2//AA5v9MP0j9XyePXVjfaXfG3voHt5&#xA;4zSSJ1oeJ22r1BHQjbMIxINF6bHljMcUTYS+Em31MwSShmYmOGCNdgp3Ff8AOmZcxxYrAAr5l0uC&#xA;fha0wlKUjP6YgemI5j9Ww95Zn5M/JbU/Md2lxBbNBZs3IzSVEZNd+AAq30beJGDFPLKNDl3r2hg0&#xA;GDJ4mQXk58IPXz7n0f8Al1+Wdr5QvZpo40d5LdYmvS5MrktydPTChY0XgCKOxNd+mZWHBGHvef7R&#xA;7Vyao0ajAcgPxuz3L3VuxV2KuxV2KuxV2KuIrsemKpHqflSwuuTQqsTN/eRFQ0TjrRkO2Ai1YJ+W&#xA;8um6/qOoGz0G50R9NdY55r61SFmdyw4wkM/2eHxUpSoyIxRjuAEB6hbWVvbD92vxHq53Y/Tk0q+K&#xA;uxV2KuxV2KuxVD39lHeWrQOStaFHHVWG4YfLFXnfmvyZY6pIBq8LW98Phh1a2H2go29Rejfr8KZl&#xA;6fWTxbDcdzrdd2Xi1G52n3j8bsRn/L3zDAf9FuLbUYq0Uh/Rlp/lLJ8P/DZs4dpYzzsOgy9g54/S&#xA;RIfI/j4rI/InmtjvYcB/MZoCPwkOWfn8Pf8AYWkdj6n+b9sf1omx/KiU3BubqWKxkfaVoHb1SB2b&#xA;0ioYfNsxc2swn+HiLstL2Zq4iuPgHz/Z9rOvLHlOy05Gg0e29BXJE986gMan4uNKDc+H05rs2olP&#xA;blHuHJ3Wm0cMW+8pHnI7lm1vBHbwJDGKIgoPH55Q5apirsVdiriARQ7g9RirEvN35aeXPMdsYri2&#xA;QNuU2I4k90ZfiQ/6u3iDkJ4xIbuTptXkwSuBr7mAfl5+S/l4X99d39pdO1lObWIX9v6PNY+6giky&#xA;eD/YbwymOliOe7s8/b+WcagBCVUZD6j8egezWtnbWsYjgjCKAAKeA2GZLpCSTZVsUOxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuZVYFWAIPUHcYqgZtD0uU1aAKf8glfwBAxVZHoGnIK&#xA;KrUrX7WKoiLTLGI1WIE+LVb9dcVRIFNh0xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrZpooYnmmdYoowWkkchVVQKkknYAYq&#xA;8r8w/wDOS35a6TO9vay3OsyoSrNYxqYgR/xbK0SsPdOQyQgWJmEDpX/OVH5eXc4ivLXUNOUmnryw&#xA;pLGB7+i7yfchw8BRxh6touuaRrenx6jpF3FfWUv2J4WDLUdQfBh3B3GQZ2jsVdirsVdirsVdirsV&#xA;dirsVQ11qNrbbSNV/wCRdzircOoWk0fNXA8VOxH0YqqxzRSfYatO2Kr8VdirsVdirsVdirsVdirs&#xA;VSDzh578q+UNPN7r9/HaoQfRhrymlI7RxD4m/UO5wgWgmngmof8AOXGqf4gSTTtDiPl6MlXgnci7&#xA;lBP2w61SM/5PFvmcnwMON7V5C/Nbyb53tw2kXgS+C1m0yekdylOvwV+If5SkjIEUzErZhgS7FXYq&#xA;7FXy7/zk9+YupXPmL/BdnMYdMsVjk1FUahnnlUSKr0/YRGWi/wAx36DLIBrmXgssMybp8a/y9Dk6&#xA;YNRTGnwnp1U9sbVn/wCUP5j6h5N812k0crHSr2VINUsyTwaNzx9QL/PHXkp+jocEhYTE0X2jo2t6&#xA;Prenx6jpF5FfWUw+CeBw617qadGHdTuO+U03WjcVdirsVdirsVdirsVSTzVrcelW0TyS+jHKSGl6&#xA;UpTuenXFUmininQSxOJEbcMDWuKrZ717MpMGAUngyt3r06YqkH5g3HnPUNBp5Pu/qurQSJNRHEbS&#xA;R0YFAXHE1PZqDDGuqJX0eZ+WP+cmPOWiai+mecbMaitu5iuiEW2vImU0PwqFjenhxFf5ss4AeTWJ&#xA;kc3omn/85Rflnd36Wky39ijkL9buYI/RFe59KWVwP9jkOAs+MPXEdJEWSNg6OAyOpqCDuCCMiybx&#xA;V2KuxV2KuxV4L+dX/OQmq+WtcvfKfl20SPU7RY/rOp3FHCetEsw9GLoSFkHxNtWvw98nGNsJSfNG&#xA;ravqusahLqOrXct9fTGslxOxdj7CvQDsBljWhMVVLa5ubW5jurWZ7e5hYNDPExSRGHQqy0IOKvdP&#xA;y5/5yi1fTjFp/nOJtSshRV1SEAXKDoPVTZZR77N33yBgzE30h5c80eX/ADJpqalod9Ff2b7epE1S&#xA;p68XU0ZG9mAOQIZgppgS7FXxB+Z4sdR10ap6zQ3mrerfD1tkKXE8kkcTNuVaNWEYJ+GgFeNN7YtU&#xA;mIHT9WRef1WSSKtBMil4z/qyJVW+g5K2NKZ03UZSWWymLDqyxudvfbG1pWtYo7GdJ5ZEe5jPOGGN&#xA;g4DrurOy1SgO/EEnbemKpn5W84ec/wAvNag1LS5Xt47tEnNvJU213AWIHNejCoZeQ3U1oQcBFpBp&#xA;9veSvNmn+bfK2n+YLCqwX0fIxE1aORSUkjPujqR75UQ2gp3gS7FXYq7FXYq7FXzd/wA5Z6rffpHQ&#xA;tKBZbEQy3JA2V5WcJv4lFX/hssxteR475N/M7zV5RuKWlwZ7HlWWwlJaMiu/Cu6H5fThMbQJU9/8&#xA;p/mx5N842iRTTfUL9SG9CVgDyH++2OzfLr4jIGJDMSBW+bfzV8o+U1f0Zjqep8OKQRsKKOvxuAFX&#xA;9eIiSpkA+afMeu3PmDzHd6zMqpPeS+oVTZQKAAfKgywBrJZF+X35d6t531uKxslK20Ukf1+52pFC&#xA;9at86IaYyNLEW+5LGzgsbK3srccbe1iSGFetEjUKo+4ZS3K2KuxV2KuxV2Kvh3/nJAkfnT5iI2I+&#xA;p7/9GMGWR5NUubzyO7PSQV/yh1+nJWxRIIYclNR4jCrsVdir1L8q/JHn+01G31y11KTytayMircy&#xA;fbuA7UCLbMQJAdqepQGopXIyIZRBfXukXU1xaBpjykQ8C9KcqAfEQNhX2ypta16/OnaFqOoA8TZ2&#xA;s1wGIrT0o2etO/TFXyrov5e6X5w03QNdvL6YWsdkkMtlEqqXkjZhJWU8qL6ldgoNNq98ldMatJvz&#xA;V1rTtMjg8o6BElnaWzLPfCHasvWNWb7TMo+IkknpvtkojqxkejzWWaWVuUrtI3TkxJNPpybBnPmn&#xA;yzpWkeWNNlto63UzKZ7ht2YtHU/IeAGWyiAHDw5ZSmb5K/nmOxm/KXyDdIoW8ibVbOdyAGdFuhMg&#xA;r3VPW+9jlI5lzTyD2n/nEa+uJvIOp2kit6VrqTmGQ9KSQxlkG37JHLr+1kJs4PcsgzdirsVdirsV&#xA;dirxn89fK1l5p1O10mSdbXUo7P6zpUrb1KystwpHUp8UXKnT4T7ZKJpiRb5n8x+Ttf0KQrq9jJbo&#xA;CQt0BygehpVZh8Br2Bo3iBlgILUQQkX1QbOpHs39uGltd9WcjkzHiOp7Y0tsi8seQvMvmCVF0qxd&#xA;4WNGvZAUt1HcmUihp4LU+2AkBQCX0/8Akl5X03ytNd6Ja3H1rUI7dLjV5gKVeZyIBSp4gLE/Ffp7&#xA;5WTbbEU9YyLJ2KuxV2KuxV2Kvh3/AJyR/wDJ0eYv+jP/AKgYMsjyapc3mmFCpbPGLhI3lMJk2Vgv&#xA;IV7AgdsICCnvlvRLzXvMNtoEDRwXtzIY0klJWIFQWJYgMwFF8MSaUC3s9x5R8r/ln9UZrf8ATnmK&#xA;decN5OoWCJg3WKM8qFaVBNW26itMAuTI1FDaHL5o8zeZNP1K7dntYLuGZeXwxKqSg0QdzRT9+E0A&#xA;xFyL6T8n6ha6joy3toxe2nctE5BXkpUUIB33zGhkjMXE2P1bN4Kl+YcjReQPM0q0LJpN8wB6VFs5&#xA;ywIL5S/Lr8xdN0T8vLuCeZDqVlLILGzJ+KQS0ZDT+USM3L2yRFliJUHmd1cz3VzLc3DmSed2klkP&#xA;VmY1J+/LGtSxV6l+Yn/KLaT84/8Ak3mRk5B12m+ssG1vzBc3Xl/SNFYg22lm6mioKEPduvME99oV&#xA;zHp2L6p/5xc0WbTfyqhuJdv0reXF6i9wvw24+/6vX6cqlzbY8nrmRZOxV2KuxV2KuJoK9fbFXwd5&#xA;0/MjzF5n82y+Ynuprd1kLabCkjUtovsqkdKAfD9oj7RrXrlwDSSz3yb+fk4iWw8x2L3ZCt/pdmoM&#xA;jKoqxkhPFTtUkqRt+zkTBkJsjtfOn/OP+qO0tzFp/qkAuZ7BlevgX9Lf/gsjRZWEUPPH5A6SRLZw&#xA;2BuBun1bT2aT5BzEKdP5saKLCjrn5oeZNTtOXl/STommUIfzBrnGCKMdzFB8Xqn+XiW91x4V4kT/&#xA;AM43azLd+bvMMFvdzXenm3SaW7uQPWu7n1ApuGrVlHE8UStAtB1FcMhssS+hMgzdirsVdirsVdir&#xA;4d/5yR/8nT5i/wCjP/qBgyyPJqlzebRrycKehwoWz6dPIaxKXZQT8IJ+FRUk06UwqGZ/lLNLN+Zu&#xA;iyynlI0rlj/zxfIyKY83vH5lTWV7qlhNYWraxdIlxbxJGwNtFNEGf9+3RfjCrQsOuRjJsnDvCK8l&#xA;/lt5j1TU7HWdTnKpaSJNbwR/urSE+gIpFjT4mk35cTWmC1p7fp9hDY24gi+zXkdgBU+AHTAlJ/zF&#xA;jaT8vvM8aCrPpN8qj3Ns4GEIPJ+fNr9s/LLQ0onCrsVepfmJ/wAotpPzj/5N5kZOQddpvrLzzStF&#xA;vte8wWGiWC8rzUZ47eKtaAyNTk1AfhX7THsMxyXYgP0C0PSLTRtGsdIswRaafbxW0APXhEgQE+5p&#xA;vlDejcVdirsVdirsVdirxjzj+TH5fw6wl3HpwU3BaWSIGicifAU/GuGyigjdE8s6BpkaNp9hBbOK&#xA;/FEiqfDegGC00mA0LQ7yZnu9OtrhzuWlhjc18asDjaqkuhaJaWVy1pp9tbt6T7xQxofsn+UDDaHy&#xA;NpOjzXlrHd3EhMKpWSediIkAHKlTWppvQVPtl4oNG5e7f840RW0fmnWFg9Vh9Qj5SSJ6an96CAgP&#xA;xUAP+e4FczbZAU+icrbHYq7FXYq7FXYq+Hf+ckf/ACdPmL/oz/6gYMsjyapc3m8H96uEIegW+ofo&#xA;DyXZ3enwxrqGqGVLi8YBpAiyMoVSeg+AGnj1rtQcyy5BJPImoNpPnjSNSW2ku0jmKtbQcPVZpFZB&#xA;w5sikkt0JwyGyI83u+mS+avMOr3FpD5RvNC8swwyGPgPRuXcvuxMbqybPUCKpqNmptlVAcm6WSUj&#xA;6iTQr4B6h5b8+wW9nb2N1EWhtkSBZ4qlgEUKPURt6060P0YoZrYalY38PrWcyzJtXj1FfEHcfTiq&#xA;B84W7XHlHW7dCA02n3Uak9AWhYCv34hBfnda/wB4fllwaUVhV2KvUvzD/wCUX0n5p/yazIycg67T&#xA;fWWe/wDOLv5cP9an896hGOHF7TRVPUk/BPOPCm8a/wCy9sxJl2kA+j8rbHYq7FXYq7FXYq7FWG+d&#xA;pUOoQQj7aQ82HszED/iJxVKrf+5X6f14qjLT+8PyxVfqH+8Fz/xif/iJxV8dBpZLO3SQvJGttEsC&#xA;unrIB6aMRGo+I/Ea/FtX2U5a1PbP+cYHi/xdrSKULnT4j8DO5oJF6s3+t9kfP9rIyZRfSOQZuxV2&#xA;KuxV2KuxV8O/85I/+To8xf8ARn/1AwZZHk1S5vN4P71cIQik1XVLhEsJZXe0tncW8JAogYlienck&#xA;4eqnkyK28sPbRRXusyPYwuOcECLyuZAoqSqVUIo2q8hUCtd8SVp6Z+X35varoEhji1GZ4mPI2msz&#xA;C4t2i248bpUSWDb9vi0RPSuQLMF7Jban5L88yiJWfQfNRXkLebisklOpQqfSuk26o1R3p0yJDIFl&#xA;vlLyzPowu5LmZZZ7llFI68VRK8dyBUnlvtgSi/N63TeU9bW0QyXTWF0LdAAS0hhbgKHrVsIQXwVr&#xA;vlW70yKLWLFWu/L12A1rfp8Sry/3TMR9iRPs79eoyy2ohK1dWFVNckhdirMIh5p85zwwww0tbGMK&#xA;z/Yt4ECjlJNKdlFEr8R+WSlO+bVjwiPJ9T/kFGI/y5t44JGm0+O5uE0+Zhx9SJJOLyBTuA84kYD3&#xA;yiXNyo8no2RZOxV2KuxV2KuxV2KvKfzk17/CuraTr18pPl6+B03ULlRyNtOpMttIVFSUcNKGoNqD&#xA;CBaCUVpl3a3lhDc2kyXFvKOUU0TB0YE9Qy1BwJTG0/vD8sVVL1GeznRRVmjcKPElTir5y0D8ptQb&#xA;T11PzPImgaTFDGtw89YrhgkaKwarDjuCo5U9g3I5O2sRezfkHHpV5+ltX0S09HQIymn6feSqfrF3&#xA;JHV7iZmb4vTqyKg6VDbDpgLIPXsiydirsVdirsVdirwX87/+ceLvzXrN35p0K6A1W5WP6xZTf3cn&#xA;oxrEvFhup4IPGvgOuSBYmL5e1rQdb8vai1lrFlJZ3UZP7uUUqBtVW3Vh7iuTBayGReS9Q0UG5ilu&#xA;hp2pS+n9QvpIxIsZXkWHOjmIs3CkgRitD0xKhFalp+t6POTcr6iXf7xJwfXguuNSrhv3ol/mH22H&#xA;WsWRZLrXRhe2v6RDrp1nG55Xlyx+rlx19Fk5ySS/5MfN/GbtiqC1fzRp9vYQ6VpUlxJDbzLcrdyt&#xA;wcyoGC+jCh4QLWQnqzE7k1yQFMSX1v8AkHr2ra7+V+l6hqtzJeXjNPGZ5TycrFKyLybqxoOp3yEu&#xA;bZHk9DyLJ4l5t/IzzDpusXev/lpqcenNeFpL3y9citlI7bsYqhlTlv8AAy032KjbJcXexI7nnOoe&#xA;WPM0M9PMn5RLdSKfil0cSIG6b1sjKKnx/tw/Fj8G7HQtRMqnRvyduIbioodTN3JFX3FyIkI+eG/N&#xA;a8ma6X+TH5h+aTDH51vINB8uREE+XNI4KWAPLgzR1jVa9+Tn5dcBI6Jonm9003TbHTNPt9PsIFtr&#xA;K0jWG3gQUVEQUVR9GQZonFXYq7FXYq7FXYq7FUt8x+XdH8x6JeaJrFut1p18npzwtttWoZSN1ZWA&#xA;ZSOh3xBV8z65+QH5t+RrqS5/LzVJNS0ssXW0SVYbhQf9+QyH0JqD9obn+UZPithwlKY/zJ/P7Ry8&#xA;eqeX7nmgAMtzpkyg70qGiCId/DGgtlER/mP/AM5Aazxi0zQrlGfYS2+mycfCpeYOg+ZxoIspzo3/&#xA;ADj7+aHnS/t738xdWkstNjbm1l6wnuWHgipyghr47n/JxJHRIier6S0TRNK0PSbXSNKt1tNOsoxF&#xA;bW6Voqj3NSSTuSdydzvkGaNxV2KuxV2KuxV2KuxVIfNvkbyx5ssGstbsY7lG+y5FHU9Kqw3B9xip&#xA;D5i/Mr/nGHzBofq6h5YZtU05asbY0Fwg9ugan3/M5MSazF5bp3mnzHoqT6Uzstu7cbmwuoklQOCD&#xA;8UM6uoYED9muSYqV3qXmLzNqccSia+vJKRwQRKWNB0SONBRVH8qimK83tf5af84r6heGLUvOcn1W&#xA;2qHGmRGsjjrSSRT8IPgvY/aByJkzEX0xoOg6ToGlQaVpNslrYWw4xQoKAV3JPiSdyepO5yDNH4q7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXgf5//APKl&#xA;PS/3M/8AKQbej+juP1mldq/s8ev2/h698lG2MqT/APIv/lT/AOix/hLh+kuA+ufWuP12tR/eV7Vp&#xA;9n4OX2cZWsa6PXciydir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:71C5CE5BA7FCE611BA2982D3735DEEBE</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:71C5CE5BA7FCE611BA2982D3735DEEBE</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7a6574eb-ea5f-8f40-a6e8-60ffaba17689</stRef:instanceID>
            <stRef:documentID>xmp.did:7a6574eb-ea5f-8f40-a6e8-60ffaba17689</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:877234a0-2c46-3949-ad59-261e819cbc77</stEvt:instanceID>
                  <stEvt:when>2014-05-04T11:44:48+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7a6574eb-ea5f-8f40-a6e8-60ffaba17689</stEvt:instanceID>
                  <stEvt:when>2017-02-27T07:05:05+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:71C5CE5BA7FCE611BA2982D3735DEEBE</stEvt:instanceID>
                  <stEvt:when>2017-02-27T12:30:07+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -393.513 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 393.513 li
399.076 393.513 li
399.076 0 li
cp
clp
99.5449 66.5346 mo
99.5449 66.8427 99.3945 67.1435 99.0937 67.3169 cv
99.0937 23.0342 li
99.0864 21.4702 li
99.4473 21.6729 99.5976 22.0639 99.5224 22.4175 cv
99.5449 66.5346 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.65098 .65098 .65098 rgb
f
.458984 40.0767 mo
.458984 85.043 li
.150391 84.8701 0 84.562 0 84.2534 cv
.0151367 40.0767 li
.458984 40.0767 li
cp
.6 .6 .6 rgb
f
99.5225 22.4175 mo
99.4849 22.666 99.3423 22.8916 99.0938 23.0342 cv
36.145 59.5327 li
35.3325 60.0063 34.3325 60.0142 33.5127 59.5479 cv
.458984 40.7534 li
-.150391 40.415 -.150391 39.5347 .451172 39.189 cv
63.4004 2.69043 li
64.2124 2.2168 65.2129 2.20947 66.0327 2.67578 cv
99.0864 21.4702 li
99.4473 21.6729 99.5977 22.064 99.5225 22.4175 cv
cp
.921569 .921569 .921569 rgb
f
33.5156 59.5459 mo
33.5156 103.83 li
.459961 85.0405 li
.459961 40.7568 li
33.5156 59.5459 li
cp
.74902 .74902 .74902 rgb
f
36.145 59.5327 mo
36.145 103.815 li
35.3325 104.289 34.3325 104.296 33.5127 103.83 cv
33.5127 59.5479 li
34.3325 60.0142 35.3325 60.0063 36.145 59.5327 cv
cp
.8 .8 .8 rgb
f
36.1485 59.5342 mo
36.1485 103.818 li
99.0942 67.3194 li
99.0942 23.0357 li
36.1485 59.5342 li
.6 .6 .6 rgb
f
104.308 68.8057 mo
104.308 69.1143 104.157 69.415 103.856 69.5879 cv
103.856 25.3057 li
103.849 23.7412 li
104.209 23.9443 104.36 24.3354 104.285 24.689 cv
104.308 68.8057 li
cp
.8 .8 .8 rgb
f
104.282 24.6924 mo
104.245 24.9331 104.102 25.1665 103.854 25.3091 cv
88.6426 34.1426 li
88.6426 34.1274 li
84.8022 32.0444 li
100.093 23.1582 li
100.905 22.6846 101.906 22.6772 102.726 23.1431 cv
103.846 23.7373 li
104.207 23.9482 104.357 24.3315 104.282 24.6924 cv
cp
.921569 .921569 .921569 rgb
f
88.6426 34.1426 mo
88.6426 78.4263 li
103.856 69.5908 li
103.856 25.3066 li
88.6426 34.1426 li
.85098 .85098 .85098 rgb
f
100.148 47.4912 mo
100.148 50.3618 98.4028 53.6973 96.2495 54.9404 cv
94.0967 56.1836 92.3511 54.8638 92.3511 51.9927 cv
92.3511 49.1221 94.0967 45.7866 96.2495 44.5435 cv
98.4028 43.3003 100.148 44.6201 100.148 47.4912 cv
cp
.501961 .501961 .501961 rgb
f
84.8022 32.0444 mo
88.6426 34.1426 li
88.6426 78.4263 li
84.5439 76.1172 li
84.8022 32.0444 li
cp
.74902 .74902 .74902 rgb
f
36.833 60.915 mo
36.833 105.882 li
36.5249 105.708 36.3745 105.4 36.3745 105.092 cv
36.3892 60.915 li
36.833 60.915 li
cp
.701961 .701961 .701961 rgb
f
87.584 34.8608 mo
40.5869 62.1763 li
39.7744 62.6499 38.7744 62.6577 37.9546 62.1914 cv
36.834 61.5894 li
36.2246 61.251 36.2246 60.3711 36.8262 60.0254 cv
83.8311 32.71 li
83.8389 32.71 li
87.584 34.8608 li
cp
.921569 .921569 .921569 rgb
f
37.9561 62.1904 mo
37.9561 106.474 li
36.834 105.879 li
36.834 61.5952 li
37.9561 62.1904 li
cp
.74902 .74902 .74902 rgb
f
40.5854 62.1772 mo
40.5854 106.459 li
39.7734 106.933 38.7729 106.941 37.9531 106.475 cv
37.9531 62.1924 li
38.7729 62.6582 39.7734 62.6509 40.5854 62.1772 cv
cp
.8 .8 .8 rgb
f
40.5893 62.1787 mo
40.5893 106.463 li
87.5898 79.1411 li
87.5898 34.8574 li
40.5893 62.1787 li
.85098 .85098 .85098 rgb
f
84.5439 43.8521 mo
84.5454 73.2793 li
85.7817 72.5869 li
85.7466 43.1401 li
84.5439 43.8521 li
cp
.501961 .501961 .501961 rgb
f
83.8271 41.3916 mo
83.8271 76.9799 li
69.9585 85.0419 li
63.5283 88.7798 li
53.6387 94.5259 li
48.4043 97.5718 li
44.3506 99.9257 li
44.3506 64.3447 li
56.4664 57.2979 li
56.4741 57.2979 li
61.7383 54.2368 li
71.1245 48.7769 li
77.2466 45.2197 li
77.2539 45.2197 li
79.1416 44.1215 li
83.8271 41.3916 li
.156863 .184314 .211765 rgb
f
80.0669 47.9272 mo
80.0669 74.8139 li
74.8623 77.8374 li
68.4321 81.5752 li
58.4819 87.3584 li
53.2549 90.4043 li
48.1108 93.3902 li
48.1108 66.5035 li
51.563 64.4956 li
51.5703 64.4956 li
56.8423 61.4267 li
66.2207 55.9741 li
74.253 51.3037 li
80.0669 47.9272 li
.2 .235294 .270588 rgb
f
78.3764 48.9116 mo
78.3764 74.0615 li
48.1098 91.6557 li
48.1098 93.3916 li
80.0688 74.8135 li
80.0688 47.9282 li
78.3764 48.9116 li
.0745098 .0901961 .12549 rgb
f
78.3764 74.0615 mo
80.0688 74.8135 li
48.1098 93.3916 li
48.1098 91.6557 li
78.3764 74.0615 li
.32549 .384314 .439216 rgb
f
10.3379 39.9136 mo
17.8911 35.5527 li
19.0708 36.2339 li
11.5176 40.5947 li
10.3379 39.9136 li
cp
.6 .6 .6 rgb
f
12.3594 41.0854 mo
19.9126 36.7251 li
21.0918 37.4058 li
13.5391 41.7666 li
12.3594 41.0854 li
cp
f
14.3809 42.2578 mo
21.9341 37.897 li
23.1133 38.5776 li
15.5605 42.9385 li
14.3809 42.2578 li
cp
f
16.4023 43.4297 mo
23.9556 39.0688 li
25.1348 39.75 li
17.5815 44.1104 li
16.4023 43.4297 li
cp
f
18.4238 44.6016 mo
25.9766 40.2407 li
27.1563 40.9219 li
19.6035 45.2827 li
18.4238 44.6016 li
cp
f
20.4453 45.7734 mo
27.998 41.4126 li
29.1777 42.0938 li
21.6245 46.4546 li
20.4453 45.7734 li
cp
f
20.4453 33.7671 mo
27.998 29.4063 li
29.1777 30.0874 li
21.6245 34.4482 li
20.4453 33.7671 li
cp
f
22.4668 34.939 mo
30.0195 30.5786 li
31.1992 31.2593 li
23.646 35.6201 li
22.4668 34.939 li
cp
f
24.4878 36.1113 mo
32.041 31.7505 li
33.2207 32.4312 li
25.6675 36.792 li
24.4878 36.1113 li
cp
f
26.5093 37.2832 mo
34.0625 32.9224 li
35.2422 33.6035 li
27.689 37.9639 li
26.5093 37.2832 li
cp
f
28.5308 38.4551 mo
36.084 34.0942 li
37.2632 34.7754 li
29.7104 39.1362 li
28.5308 38.4551 li
cp
f
30.5522 39.627 mo
38.1055 35.2661 li
39.2847 35.9473 li
31.7319 40.3081 li
30.5522 39.627 li
cp
f
1.79883 82.5117 mo
31.0059 99.374 li
31.0059 96.9858 li
1.79883 80.1235 li
1.79883 82.5117 li
cp
.501961 .501961 .501961 rgb
f
1.79883 79.0435 mo
31.0059 95.9058 li
31.0059 93.5176 li
1.79883 76.6553 li
1.79883 79.0435 li
cp
f
1.79883 75.5752 mo
31.0059 92.4375 li
31.0059 90.0493 li
1.79883 73.187 li
1.79883 75.5752 li
cp
f
1.79883 72.1069 mo
31.0059 88.9697 li
31.0059 86.5815 li
1.79883 69.7188 li
1.79883 72.1069 li
cp
f
101.448 31.5693 mo
101.448 36.3677 li
99.5679 37.4131 li
96.8003 38.9473 li
96.0034 39.3911 li
93.3256 40.8726 li
91.0469 42.1362 li
91.0469 37.3452 li
93.4233 36.0215 li
94.4014 35.48 li
97.9512 33.5098 li
98.5152 33.1939 li
101.448 31.5693 li
.2 .235294 .270588 rgb
f
100.99 31.8247 mo
100.99 36.0669 li
91.0478 41.5806 li
91.0478 42.1435 li
101.453 36.3687 li
101.453 31.5634 li
100.99 31.8247 li
.6 .6 .6 rgb
f
101.453 31.5634 mo
100.99 31.8247 li
100.99 36.0669 li
101.453 36.3687 li
101.453 31.5634 li
.0745098 .0901961 .12549 rgb
f
99.9775 45.6899 mo
99.2856 45.2886 li
99.1719 45.2012 98.6279 44.8872 98.4995 44.8306 cv
97.9136 44.5723 97.1841 44.6353 96.3896 45.0938 cv
94.4658 46.2046 92.9063 49.1846 92.9063 51.7495 cv
92.9063 53.2197 93.4204 54.2314 94.2202 54.6206 cv
95.4082 55.3071 li
95.4985 54.6035 li
95.7324 54.5347 95.9751 54.4312 96.2236 54.2871 cv
98.1475 53.1768 99.707 50.1968 99.707 47.6318 cv
99.707 46.9751 99.6035 46.4106 99.4189 45.9507 cv
99.9775 45.6899 li
cp
level3{
gsave
clp
[-4.74072 9.71651 -9.71651 -4.74072 98.644 44.9009 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.156863 .184314 .211765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.156863 .184314 .211765 ]
/C1 [.156863 .184314 .211765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.156863 .184314 .211765 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.0745098 .0901961 .12549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0901961 .12549 ]
/C1 [.0745098 .0901961 .12549 ]
/N 1 
>>
]
/Bounds [.202174 .210105 .595852 .61169 .853722 .869912 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.74072 9.71651 -9.71651 -4.74072 98.644 44.9009 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D+!`6_-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-mg2_+!)IE*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@B)Aa)$',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m
~>
<~,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,q:Q$0/"t30/"t3
0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t3
0/"t30/"t30/"t30/"t30/"t30/"t30.e\&,pX`],U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=WZ*ul.7(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl(
~>
<~.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.PNb=2E!HO2E!HO
2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2Dd-@.Oceq.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\o,pOQU+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
100.994 48.3823 mo
100.994 50.9473 99.4346 53.9272 97.5107 55.0376 cv
95.5869 56.1484 94.0273 54.9692 94.0273 52.4043 cv
94.0273 49.8394 95.5869 46.8594 97.5107 45.7485 cv
99.4346 44.6382 100.994 45.8169 100.994 48.3823 cv
cp
.141176 .164706 .188235 rgb
f
96.1279 54.7036 mo
95.1328 54.7036 94.7798 53.4648 94.7798 52.4043 cv
94.7798 50.1216 96.2026 47.3726 97.8872 46.3999 cv
98.2466 46.1924 98.5947 46.083 98.8936 46.083 cv
99.8887 46.083 100.242 47.3218 100.242 48.3823 cv
100.242 50.6646 98.8193 53.4136 97.1353 54.3867 cv
96.7754 54.5942 96.4272 54.7036 96.1279 54.7036 cv
cp
.901961 .901961 .901961 rgb
f
98.0034 43.6675 mo
98.0034 45.4302 li
97.4561 45.7402 li
96.3428 45.125 li
96.3428 43.3623 li
97.1719 44.1211 li
98.0034 43.6675 li
cp
.117647 .141176 .160784 rgb
f
97.4536 43.9736 mo
98.0068 43.668 li
96.8999 43.0581 li
96.3467 43.3638 li
97.4536 43.9736 li
cp
.156863 .184314 .211765 rgb
f
97.4536 43.9736 mo
97.4536 45.7368 li
96.3467 45.1265 li
96.3467 43.3638 li
97.4536 43.9736 li
cp
.0745098 .0901961 .12549 rgb
f
48.1108 74.2574 mo
48.1108 69.5717 li
51.563 64.4956 li
51.5703 64.4956 li
56.8423 61.4267 li
48.1108 74.2574 li
.317647 .34902 .380392 rgb
f
53.2549 90.4043 mo
53.259 90.3983 li
55.8327 88.9022 li
53.2549 90.4043 li
55.1919 87.5389 mo
78.3764 53.2406 li
78.3764 57.9402 li
60.412 84.5044 li
55.1919 87.5389 li
f
78.3764 57.9402 mo
78.3764 53.2406 li
80.0669 50.7397 li
80.0669 55.4404 li
78.3764 57.9402 li
.211765 .227451 .254902 rgb
f
53.259 90.3983 mo
55.1919 87.5389 li
60.412 84.5044 li
58.4819 87.3584 li
55.8327 88.9022 li
53.259 90.3983 li
.427451 .47451 .521569 rgb
f
91.0469 42.1362 mo
91.0469 39.5415 li
93.4233 36.0215 li
94.4014 35.48 li
97.9512 33.5098 li
98.5152 33.1939 li
93.9258 39.9845 li
91.0478 41.5806 li
91.0478 42.1357 li
91.0469 42.1362 li
.317647 .34902 .380392 rgb
f
91.0478 42.1357 mo
91.0478 42.1357 li
91.0478 41.5806 li
93.9258 39.9845 li
93.3256 40.8726 li
91.0478 42.1357 li
.658823 .658823 .658823 rgb
f
97.406 38.0544 mo
100.99 32.7717 li
100.99 35.3204 li
100.176 36.5183 li
97.406 38.0544 li
.317647 .34902 .380392 rgb
f
96.8003 38.9473 mo
97.406 38.0544 li
100.176 36.5183 li
99.5679 37.4131 li
96.8003 38.9473 li
.658823 .658823 .658823 rgb
f
100.99 35.3204 mo
100.99 32.7717 li
101.448 32.0957 li
101.448 34.6455 li
100.99 35.3204 li
.211765 .227451 .254902 rgb
f
48.1108 89.7349 mo
48.1108 82.5679 li
66.2207 55.9741 li
74.253 51.3037 li
48.1108 89.7349 li
.317647 .34902 .380392 rgb
f
70.3851 78.707 mo
78.3764 66.9705 li
78.3764 72.6782 li
76.8165 74.9683 li
70.3851 78.707 li
f
78.3764 72.6782 mo
78.3764 66.9705 li
80.0669 64.4878 li
80.0669 70.1963 li
78.3764 72.6782 li
.211765 .227451 .254902 rgb
f
68.4321 81.5752 mo
70.3851 78.707 li
76.8165 74.9683 li
74.8623 77.8374 li
68.4321 81.5752 li
.427451 .47451 .521569 rgb
f
97.8125 55.7866 mo
97.0649 56.2964 96.3027 56.5894 95.5552 56.6548 cv
93.686 56.8198 91.6699 55.4556 91.6699 52.064 cv
91.6699 48.7998 93.5244 45.0713 95.98 43.4033 cv
96.7349 42.8931 97.4976 42.6001 98.2451 42.5342 cv
100.114 42.3696 102.13 43.7334 102.13 47.1177 cv
102.13 50.3896 100.275 54.1104 97.8125 55.7866 cv
cp
98.2451 42.1582 mo
97.4316 42.23 96.603 42.5439 95.7969 43.0962 cv
93.2388 44.8335 91.3037 48.7046 91.3037 52.0962 cv
91.3037 55.7441 93.5098 57.2114 95.5552 57.0308 cv
96.3687 56.9595 97.1895 56.646 97.9961 56.0938 cv
100.562 54.3481 102.497 50.4775 102.497 47.0854 cv
102.497 43.4453 100.29 41.978 98.2451 42.1582 cv
cp
.141176 .164706 .188235 rgb
f
100.148 62.3843 mo
100.148 65.2549 98.4028 68.5903 96.2495 69.8335 cv
94.0967 71.0767 92.3511 69.7568 92.3511 66.8862 cv
92.3511 64.0151 94.0967 60.6797 96.2495 59.4365 cv
98.4028 58.1938 100.148 59.5132 100.148 62.3843 cv
cp
.501961 .501961 .501961 rgb
f
99.9775 60.583 mo
99.2856 60.1816 li
99.1719 60.0942 98.6279 59.7803 98.4995 59.7241 cv
97.9136 59.4653 97.1841 59.5283 96.3896 59.9868 cv
94.4658 61.0977 92.9063 64.0776 92.9063 66.6426 cv
92.9063 68.1128 93.4204 69.1245 94.2202 69.5142 cv
95.4082 70.2002 li
95.4985 69.4966 li
95.7324 69.4277 95.9751 69.3242 96.2236 69.1807 cv
98.1475 68.0698 99.707 65.0898 99.707 62.5249 cv
99.707 61.8682 99.6035 61.3037 99.4189 60.8442 cv
99.9775 60.583 li
cp
level3{
gsave
clp
[-4.7405 9.71607 -9.71607 -4.7405 98.6436 59.7944 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.7405 9.71607 -9.71607 -4.7405 98.6436 59.7944 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
100.994 63.2754 mo
100.994 65.8403 99.4346 68.8203 97.5107 69.9307 cv
95.5869 71.0415 94.0273 69.8623 94.0273 67.2974 cv
94.0273 64.7324 95.5869 61.7524 97.5107 60.6421 cv
99.4346 59.5313 100.994 60.71 100.994 63.2754 cv
cp
.141176 .164706 .188235 rgb
f
96.1279 69.5972 mo
95.1328 69.5972 94.7798 68.3579 94.7798 67.2974 cv
94.7798 65.0146 96.2026 62.2656 97.8872 61.2935 cv
98.2466 61.0854 98.5947 60.9761 98.8936 60.9761 cv
99.8887 60.9761 100.242 62.2148 100.242 63.2754 cv
100.242 65.5576 98.8193 68.3066 97.1353 69.2798 cv
96.7754 69.4878 96.4272 69.5972 96.1279 69.5972 cv
cp
.901961 .901961 .901961 rgb
f
98.0034 58.561 mo
98.0034 60.3232 li
97.4561 60.6333 li
96.3428 60.0181 li
96.3428 58.2559 li
97.1719 59.0142 li
98.0034 58.561 li
cp
.117647 .141176 .160784 rgb
f
97.4536 58.8667 mo
98.0068 58.561 li
96.8999 57.9512 li
96.3467 58.2568 li
97.4536 58.8667 li
cp
.156863 .184314 .211765 rgb
f
97.4536 58.8667 mo
97.4536 60.6299 li
96.3467 60.0195 li
96.3467 58.2568 li
97.4536 58.8667 li
cp
.0745098 .0901961 .12549 rgb
f
97.8125 70.6797 mo
97.0649 71.1895 96.3027 71.4824 95.5552 71.5483 cv
93.686 71.7129 91.6699 70.3491 91.6699 66.957 cv
91.6699 63.6929 93.5244 59.9648 95.98 58.2964 cv
96.7349 57.7861 97.4976 57.4937 98.2451 57.4277 cv
100.114 57.2627 102.13 58.6265 102.13 62.0112 cv
102.13 65.2827 100.275 69.0034 97.8125 70.6797 cv
cp
98.2451 57.0513 mo
97.4316 57.123 96.603 57.437 95.7969 57.9893 cv
93.2388 59.7266 91.3037 63.5977 91.3037 66.9893 cv
91.3037 70.6372 93.5098 72.1045 95.5552 71.9243 cv
96.3687 71.8525 97.1895 71.5396 97.9961 70.9868 cv
100.562 69.2412 102.497 65.3706 102.497 61.9785 cv
102.497 58.3389 100.29 56.8711 98.2451 57.0513 cv
cp
.141176 .164706 .188235 rgb
f
87.98 43.6719 mo
85.9102 42.5449 li
85.8315 42.501 li
85.7051 42.4473 85.5444 42.4609 85.3657 42.5571 cv
84.9331 42.7896 84.564 43.4106 84.541 43.9448 cv
84.5273 44.251 84.6313 44.4614 84.8037 44.542 cv
86.8896 45.6772 li
86.916 45.5308 li
87.0781 45.4644 li
87.5107 45.2319 87.8799 44.6104 87.9033 44.0762 cv
87.9092 43.9395 87.8916 43.8223 87.855 43.7266 cv
87.98 43.6719 li
cp
level3{
gsave
clp
[-1.32304 1.9904 -2.04531 -1.16723 86.8691 43.0386 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.32304 1.9904 -2.04531 -1.16723 86.8691 43.0386 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
88.1792 44.2319 mo
88.1563 44.7661 87.7866 45.3877 87.354 45.6201 cv
86.9214 45.8525 86.5898 45.6079 86.6128 45.0737 cv
86.6357 44.5396 87.0054 43.918 87.438 43.6855 cv
87.8706 43.4531 88.2021 43.6978 88.1792 44.2319 cv
cp
.117647 .141176 .160784 rgb
f
87.98 72.5313 mo
85.9102 71.4043 li
85.8315 71.3604 li
85.7051 71.3071 85.5444 71.3203 85.3657 71.4165 cv
84.9331 71.6489 84.564 72.2705 84.541 72.8047 cv
84.5273 73.1108 84.6313 73.3213 84.8037 73.4019 cv
86.8896 74.5366 li
86.916 74.3901 li
87.0781 74.3237 li
87.5107 74.0913 87.8799 73.4702 87.9033 72.936 cv
87.9092 72.7993 87.8916 72.6816 87.855 72.5859 cv
87.98 72.5313 li
cp
level3{
gsave
clp
[-1.32332 1.99081 -2.04574 -1.16748 86.8691 71.8975 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.32332 1.99081 -2.04574 -1.16748 86.8691 71.8975 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
88.1792 73.0913 mo
88.1563 73.6255 87.7866 74.2471 87.354 74.4795 cv
86.9214 74.7119 86.5898 74.4673 86.6128 73.9331 cv
86.6357 73.3989 87.0054 72.7773 87.438 72.5449 cv
87.8706 72.3125 88.2021 72.5571 88.1792 73.0913 cv
cp
.117647 .141176 .160784 rgb
f
86.5771 40.6025 mo
86.5771 75.8706 li
86.5771 75.9609 li
86.5923 76.0972 86.6826 76.231 86.854 76.3398 cv
87.2681 76.6035 87.9907 76.6216 88.4678 76.3809 cv
88.7417 76.2427 88.8745 76.0493 88.8604 75.8599 cv
88.8599 40.5732 li
88.7192 40.6221 li
88.582 40.5132 li
88.168 40.2495 87.4453 40.231 86.9678 40.4717 cv
86.8457 40.5337 86.752 40.6064 86.686 40.6851 cv
86.5771 40.6025 li
cp
level3{
gsave
clp
[2.617 .198669 -.0202376 2.58597 86.439 58.3306 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0901961 .12549 ]
/C1 [.0745098 .0901961 .12549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0901961 .12549 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.156863 .184314 .211765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.156863 .184314 .211765 ]
/C1 [.156863 .184314 .211765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.156863 .184314 .211765 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
]
/Bounds [.130088 .146278 .38831 .404148 .789895 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.617 .198669 -.0202376 2.58597 86.439 58.3306 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)&r)B9e>*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D+!DmV-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jh+!)IE*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
~>
<~(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddr/+!MsU,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,q(8q0/"t30/"t30/"t30/"t30/"t30/"t3
0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t3
0/"t30/"t30/"t.,pX`],U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
~>
<~+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VgP,q(2k.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.P<G42E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HO2E!HO2E!HI.Oceq.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
86.9688 40.1553 mo
87.4458 39.9141 88.1685 39.9326 88.583 40.1963 cv
88.9971 40.46 88.9458 40.8691 88.4688 41.1104 cv
87.9912 41.3511 87.2686 41.3325 86.8545 41.0688 cv
86.4404 40.8052 86.4912 40.396 86.9688 40.1553 cv
cp
.184314 .215686 .25098 rgb
f
206.91 238.963 mo
198.89 239.171 li
200.268 247.25 li
200.27 247.25 li
200.25 247.585 200.429 247.922 200.819 248.2 cv
201.71 248.833 203.36 248.921 204.507 248.397 cv
205.15 248.102 205.498 247.678 205.522 247.25 cv
206.91 238.963 li
cp
.141176 .164706 .188235 rgb
f
205.356 240.714 mo
203.605 241.515 201.084 241.38 199.725 240.415 cv
198.365 239.448 198.684 238.014 200.435 237.213 cv
202.187 236.413 204.708 236.546 206.067 237.513 cv
207.426 238.48 207.108 239.914 205.356 240.714 cv
cp
.686275 .760784 .396078 rgb
f
158.232 210.644 mo
150.211 210.851 li
151.589 218.931 li
151.591 218.931 li
151.572 219.265 151.75 219.602 152.142 219.88 cv
153.031 220.513 154.682 220.601 155.829 220.077 cv
156.472 219.783 156.819 219.358 156.844 218.93 cv
158.232 210.644 li
cp
.141176 .164706 .188235 rgb
f
156.679 212.394 mo
154.927 213.195 152.406 213.061 151.046 212.094 cv
149.688 211.127 150.005 209.695 151.757 208.894 cv
153.508 208.092 156.03 208.227 157.389 209.194 cv
158.748 210.161 158.43 211.593 156.679 212.394 cv
cp
.686275 .760784 .396078 rgb
f
235.998 222.195 mo
227.978 222.403 li
229.355 230.482 li
229.357 230.482 li
229.338 230.817 229.517 231.154 229.907 231.431 cv
230.798 232.065 232.448 232.153 233.595 231.628 cv
234.238 231.333 234.586 230.91 234.61 230.482 cv
235.998 222.195 li
cp
.141176 .164706 .188235 rgb
f
234.444 223.946 mo
232.693 224.747 230.172 224.612 228.813 223.646 cv
227.453 222.679 227.771 221.246 229.522 220.445 cv
231.274 219.644 233.796 219.778 235.155 220.745 cv
236.514 221.711 236.196 223.144 234.444 223.946 cv
cp
.686275 .760784 .396078 rgb
f
236.01 225.813 mo
236.089 226.909 235.48 227.959 234.139 228.735 cv
208.319 243.643 li
205.535 245.245 200.677 245.049 197.472 243.193 cv
152.062 216.975 li
150.314 215.967 149.408 214.676 149.401 213.451 cv
149.401 213.429 li
149.401 212.415 150.024 211.443 151.279 210.71 cv
152.062 210.261 li
177.098 195.803 li
179.882 194.201 184.74 194.396 187.945 196.252 cv
197.472 201.755 li
208.319 208.013 li
233.355 222.471 li
233.639 222.637 233.899 222.804 234.139 222.986 cv
235.248 223.805 235.879 224.762 235.995 225.69 cv
236.01 225.813 li
cp
.85098 .85098 .85098 rgb
f
208.318 239.926 mo
208.318 243.642 li
234.138 228.735 li
234.138 225.019 li
208.318 239.926 li
cp
f
235.995 225.777 mo
236.01 225.813 li
236.089 226.909 235.48 227.959 234.139 228.735 cv
234.139 225.019 li
235.394 224.293 236.017 223.323 236.017 222.3 cv
235.995 225.69 li
235.995 225.777 li
cp
.8 .8 .8 rgb
f
149.51 209.002 mo
149.437 209.234 149.401 209.473 149.401 209.712 cv
149.51 209.002 li
cp
.701961 .701961 .701961 rgb
f
152.062 213.258 mo
152.062 216.975 li
150.314 215.967 149.408 214.676 149.401 213.451 cv
149.401 209.712 li
149.401 210.946 150.307 212.244 152.062 213.258 cv
cp
f
236.017 222.3 mo
236.017 223.323 235.394 224.293 234.139 225.019 cv
208.319 239.926 li
205.535 241.529 200.677 241.333 197.472 239.477 cv
152.062 213.258 li
150.307 212.244 149.401 210.946 149.401 209.712 cv
149.401 209.473 149.437 209.234 149.51 209.002 cv
149.734 208.249 150.322 207.552 151.279 206.994 cv
177.098 192.086 li
179.882 190.484 184.74 190.68 187.945 192.536 cv
233.355 218.754 li
235.11 219.769 236.017 221.067 236.017 222.3 cv
cp
.921569 .921569 .921569 rgb
f
208.319 239.926 mo
208.319 243.643 li
205.535 245.245 200.677 245.049 197.472 243.193 cv
197.472 239.477 li
200.677 241.333 205.535 241.529 208.319 239.926 cv
cp
.8 .8 .8 rgb
f
197.472 239.477 mo
197.472 243.193 li
152.062 216.975 li
152.062 213.258 li
197.472 239.477 li
cp
.74902 .74902 .74902 rgb
f
234.987 220.592 mo
235.065 221.662 234.471 222.688 233.161 223.445 cv
207.951 238 li
205.232 239.565 200.489 239.374 197.36 237.562 cv
153.021 211.962 li
151.315 210.978 150.43 209.718 150.423 208.522 cv
150.423 208.5 li
150.423 207.509 151.032 206.561 152.257 205.846 cv
153.021 205.407 li
177.467 191.291 li
180.185 189.726 184.929 189.917 188.058 191.729 cv
197.36 197.103 li
207.951 203.212 li
232.396 217.329 li
232.672 217.492 232.927 217.654 233.161 217.832 cv
234.244 218.631 234.859 219.566 234.973 220.472 cv
234.987 220.592 li
cp
.85098 .85098 .85098 rgb
f
207.949 191.984 mo
207.949 238 li
233.159 223.445 li
233.159 177.429 li
207.949 191.984 li
cp
.584314 .639216 .364706 rgb
f
234.973 220.557 mo
234.987 220.592 li
235.065 221.662 234.471 222.688 233.161 223.445 cv
233.161 177.429 li
234.386 176.721 234.994 175.772 234.994 174.774 cv
234.973 220.472 li
234.973 220.557 li
cp
.490196 .529412 .337255 rgb
f
150.529 161.791 mo
150.458 162.017 150.423 162.25 150.423 162.484 cv
150.529 161.791 li
cp
.701961 .701961 .701961 rgb
f
153.021 165.946 mo
153.021 211.962 li
151.315 210.978 150.43 209.718 150.423 208.522 cv
150.423 162.484 li
150.423 163.688 151.308 164.955 153.021 165.946 cv
cp
.360784 .4 .219608 rgb
f
234.994 174.774 mo
234.994 175.772 234.386 176.721 233.161 177.429 cv
207.951 191.984 li
205.232 193.549 200.489 193.357 197.36 191.545 cv
153.021 165.946 li
151.308 164.955 150.423 163.688 150.423 162.484 cv
150.423 162.25 150.458 162.017 150.529 161.791 cv
150.749 161.054 151.322 160.375 152.257 159.83 cv
177.467 145.274 li
180.185 143.709 184.929 143.9 188.058 145.713 cv
232.396 171.313 li
234.109 172.303 234.994 173.571 234.994 174.774 cv
cp
.686275 .760784 .396078 rgb
f
207.951 191.984 mo
207.951 238 li
205.232 239.565 200.489 239.374 197.36 237.562 cv
197.36 191.545 li
200.489 193.357 205.232 193.549 207.951 191.984 cv
cp
.490196 .529412 .337255 rgb
f
197.36 191.545 mo
197.36 237.562 li
153.021 211.962 li
153.021 165.946 li
197.36 191.545 li
cp
.411765 .45098 .262745 rgb
f
221.465 227.898 mo
221.465 227.898 li
221.968 227.608 222.376 226.829 222.376 226.158 cv
222.376 188.021 li
222.376 187.351 221.968 187.042 221.465 187.333 cv
220.962 187.623 220.555 188.402 220.555 189.073 cv
220.555 227.209 li
220.555 227.88 220.962 228.188 221.465 227.898 cv
cp
.156863 .184314 .211765 rgb
f
231.193 173.244 mo
231.265 174.216 230.723 175.151 229.53 175.84 cv
206.583 189.09 li
204.108 190.514 199.791 190.34 196.942 188.69 cv
156.583 165.388 li
155.03 164.492 154.224 163.345 154.218 162.256 cv
154.218 162.237 li
154.218 161.334 154.772 160.471 155.887 159.82 cv
156.583 159.42 li
178.834 146.571 li
181.309 145.146 185.626 145.321 188.475 146.97 cv
196.942 151.862 li
206.583 157.423 li
228.835 170.272 li
229.086 170.421 229.318 170.569 229.53 170.73 cv
230.517 171.458 231.077 172.309 231.181 173.134 cv
231.193 173.244 li
cp
.85098 .85098 .85098 rgb
f
206.582 185.786 mo
206.582 189.089 li
229.53 175.84 li
229.53 172.537 li
206.582 185.786 li
cp
f
231.181 173.211 mo
231.193 173.244 li
231.265 174.216 230.723 175.151 229.53 175.84 cv
229.53 172.537 li
230.646 171.893 231.2 171.029 231.2 170.121 cv
231.181 173.134 li
231.181 173.211 li
cp
.8 .8 .8 rgb
f
154.314 158.302 mo
154.25 158.508 154.218 158.721 154.218 158.934 cv
154.314 158.302 li
cp
.701961 .701961 .701961 rgb
f
156.583 162.085 mo
156.583 165.388 li
155.03 164.492 154.224 163.345 154.218 162.256 cv
154.218 158.934 li
154.218 160.029 155.023 161.183 156.583 162.085 cv
cp
f
231.2 170.121 mo
231.2 171.029 230.646 171.893 229.53 172.537 cv
206.583 185.787 li
204.108 187.211 199.791 187.037 196.942 185.387 cv
156.583 162.085 li
155.023 161.183 154.218 160.029 154.218 158.934 cv
154.218 158.721 154.25 158.508 154.314 158.302 cv
154.514 157.632 155.036 157.013 155.887 156.517 cv
178.834 143.268 li
181.309 141.844 185.626 142.018 188.475 143.667 cv
228.835 166.97 li
230.395 167.872 231.2 169.025 231.2 170.121 cv
cp
.921569 .921569 .921569 rgb
f
219.137 168.346 mo
219.137 169.705 li
219.137 170.271 218.797 170.81 218.103 171.206 cv
203.823 179.446 li
203.257 179.772 202.542 179.963 201.764 180.027 cv
200.433 180.126 198.953 179.85 197.827 179.199 cv
166.302 161.309 li
165.396 160.785 164.908 160.134 164.844 159.497 cv
164.83 159.497 li
164.83 158.335 li
165.085 158.562 li
165.255 158.3 165.51 158.052 165.871 157.847 cv
165.934 157.812 li
180.143 149.607 li
181.679 148.722 184.369 148.828 186.139 149.854 cv
217.671 167.744 li
218.194 168.049 218.584 168.403 218.825 168.771 cv
219.137 168.346 li
cp
.611765 .611765 .611765 rgb
f
201.764 178.201 mo
201.764 180.027 li
200.433 180.126 198.953 179.85 197.827 179.199 cv
166.302 161.309 li
165.396 160.785 164.908 160.134 164.844 159.497 cv
164.83 159.497 li
164.83 158.335 li
165.085 158.562 li
165.255 158.3 165.51 158.052 165.871 157.847 cv
165.934 157.812 li
167.223 157.55 li
201.764 178.201 li
cp
.501961 .501961 .501961 rgb
f
219.139 168.689 mo
219.139 169.254 218.794 169.792 218.101 170.192 cv
203.826 178.434 li
202.287 179.32 199.602 179.211 197.83 178.185 cv
166.302 160.296 li
165.332 159.735 164.831 159.018 164.831 158.336 cv
164.831 158.204 164.851 158.071 164.891 157.943 cv
165.016 157.526 165.34 157.142 165.869 156.833 cv
180.143 148.591 li
181.683 147.706 184.368 147.814 186.14 148.84 cv
217.668 166.729 li
218.638 167.291 219.139 168.008 219.139 168.689 cv
cp
.788235 .788235 .788235 rgb
f
206.583 185.787 mo
206.583 189.09 li
204.108 190.514 199.791 190.34 196.942 188.69 cv
196.942 185.387 li
199.791 187.037 204.108 187.211 206.583 185.787 cv
cp
.8 .8 .8 rgb
f
196.942 185.387 mo
196.942 188.69 li
156.583 165.388 li
156.583 162.085 li
196.942 185.387 li
cp
.74902 .74902 .74902 rgb
f
204.04 174.088 mo
204.04 174.516 203.779 174.923 203.254 175.226 cv
202.045 175.972 li
200.879 176.643 198.845 176.561 197.503 175.784 cv
169.656 159.979 li
168.922 159.554 168.542 159.011 168.542 158.495 cv
168.542 158.395 168.558 158.294 168.588 158.197 cv
168.682 157.882 168.928 157.59 169.329 157.356 cv
170.538 156.61 li
171.704 155.939 173.738 156.021 175.08 156.799 cv
202.927 172.604 li
203.661 173.028 204.04 173.572 204.04 174.088 cv
cp
.156863 .184314 .211765 rgb
f
204.042 174.087 mo
204.042 174.519 203.779 174.923 203.256 175.227 cv
202.583 175.638 li
175.08 160.028 li
174.372 159.617 173.473 159.397 172.609 159.383 cv
171.837 159.376 171.087 159.525 170.535 159.844 cv
169.997 160.176 li
169.657 159.978 li
168.921 159.553 168.545 159.008 168.545 158.491 cv
168.545 158.392 168.56 158.293 168.588 158.194 cv
168.68 157.882 168.928 157.592 169.331 157.359 cv
170.535 156.608 li
171.023 156.332 171.66 156.184 172.326 156.162 cv
173.274 156.127 174.294 156.346 175.08 156.799 cv
202.923 172.601 li
203.659 173.025 204.042 173.571 204.042 174.087 cv
cp
.501961 .501961 .501961 rgb
f
172.609 159.383 mo
171.837 159.376 171.087 159.525 170.535 159.844 cv
169.997 160.176 li
169.657 159.978 li
168.921 159.553 168.545 159.008 168.545 158.491 cv
168.545 158.392 168.56 158.293 168.588 158.194 cv
168.68 157.882 168.928 157.592 169.331 157.359 cv
170.535 156.608 li
171.023 156.332 171.66 156.184 172.326 156.162 cv
172.545 157.224 172.645 158.307 172.609 159.383 cv
cp
.6 .6 .6 rgb
f
214.69 167.973 mo
214.69 168.401 214.43 168.808 213.904 169.111 cv
212.695 169.857 li
211.529 170.528 209.495 170.446 208.153 169.669 cv
180.307 153.864 li
179.572 153.439 179.193 152.896 179.193 152.38 cv
179.193 152.279 179.208 152.179 179.238 152.082 cv
179.333 151.767 179.579 151.475 179.979 151.241 cv
181.189 150.496 li
182.354 149.825 184.389 149.907 185.73 150.684 cv
213.577 166.488 li
214.312 166.914 214.69 167.457 214.69 167.973 cv
cp
.156863 .184314 .211765 rgb
f
214.692 167.972 mo
214.692 168.404 214.431 168.808 213.906 169.112 cv
213.233 169.523 li
185.73 153.913 li
185.022 153.502 184.123 153.283 183.26 153.268 cv
182.488 153.261 181.737 153.41 181.185 153.729 cv
180.647 154.061 li
180.308 153.863 li
179.571 153.438 179.196 152.893 179.196 152.376 cv
179.196 152.277 179.21 152.178 179.238 152.079 cv
179.331 151.768 179.578 151.477 179.982 151.244 cv
181.185 150.493 li
181.674 150.217 182.311 150.068 182.977 150.047 cv
183.925 150.012 184.944 150.231 185.73 150.684 cv
213.573 166.486 li
214.31 166.911 214.692 167.456 214.692 167.972 cv
cp
.501961 .501961 .501961 rgb
f
183.26 153.268 mo
182.488 153.261 181.737 153.41 181.185 153.729 cv
180.647 154.061 li
180.308 153.863 li
179.571 153.438 179.196 152.893 179.196 152.376 cv
179.196 152.277 179.21 152.178 179.238 152.079 cv
179.331 151.768 179.578 151.477 179.982 151.244 cv
181.185 150.493 li
181.674 150.217 182.311 150.068 182.977 150.047 cv
183.196 151.109 183.295 152.192 183.26 153.268 cv
cp
.6 .6 .6 rgb
f
228.021 191.821 mo
227.538 192 li
226.175 189.888 li
225.687 189.132 224.041 188.833 223.161 189.342 cv
218.146 192.237 li
216.73 191.814 li
216.733 194.103 li
216.732 194.544 217.229 195.013 218.073 195.207 cv
221.982 196.102 li
225.083 196.812 227.857 195.709 228.014 194.082 cv
228.021 194.083 li
228.021 191.821 li
cp
.141176 .164706 .188235 rgb
f
227.683 190.662 mo
226.175 188.325 li
225.687 187.569 224.042 187.271 223.161 187.779 cv
217.167 191.24 li
216.299 191.741 216.788 192.676 218.073 192.97 cv
221.982 193.866 li
225.793 194.739 229.11 192.874 227.683 190.662 cv
cp
.184314 .215686 .25098 rgb
f
214.312 228.383 mo
214.312 229.675 213.526 231.176 212.558 231.735 cv
211.589 232.294 210.803 231.701 210.803 230.409 cv
210.803 229.117 211.589 227.617 212.558 227.057 cv
213.526 226.498 214.312 227.091 214.312 228.383 cv
cp
.360784 .4 .219608 rgb
f
214.312 227.602 mo
214.006 227.424 li
213.658 227.222 li
213.398 227.108 213.075 227.135 212.724 227.338 cv
211.872 227.831 211.182 229.149 211.182 230.285 cv
211.182 230.936 211.409 231.383 211.764 231.556 cv
212.289 231.86 li
212.329 231.548 li
212.433 231.518 212.54 231.472 212.65 231.408 cv
213.502 230.917 214.192 229.597 214.192 228.462 cv
214.192 228.171 214.146 227.921 214.064 227.718 cv
214.312 227.602 li
cp
level3{
gsave
clp
[-2.09872 4.30152 -4.30152 -2.09872 213.722 227.253 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.09872 4.30152 -4.30152 -2.09872 213.722 227.253 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
214.762 228.794 mo
214.762 229.929 214.071 231.249 213.22 231.741 cv
212.368 232.232 211.678 231.71 211.678 230.575 cv
211.678 229.439 212.368 228.12 213.22 227.628 cv
214.071 227.137 214.762 227.659 214.762 228.794 cv
cp
.141176 .164706 .188235 rgb
f
214.312 222.432 mo
214.312 223.724 213.526 225.225 212.558 225.785 cv
211.589 226.344 210.803 225.75 210.803 224.458 cv
210.803 223.167 211.589 221.666 212.558 221.106 cv
213.526 220.546 214.312 221.14 214.312 222.432 cv
cp
.360784 .4 .219608 rgb
f
214.312 221.652 mo
214.006 221.474 li
213.658 221.271 li
213.398 221.157 213.075 221.185 212.724 221.388 cv
211.872 221.879 211.182 223.199 211.182 224.333 cv
211.182 224.985 211.409 225.432 211.764 225.605 cv
212.289 225.909 li
212.329 225.597 li
212.433 225.567 212.54 225.521 212.65 225.458 cv
213.502 224.965 214.192 223.647 214.192 222.511 cv
214.192 222.22 214.146 221.971 214.064 221.767 cv
214.312 221.652 li
cp
level3{
gsave
clp
[-2.09872 4.30152 -4.30152 -2.09872 213.722 221.301 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.09872 4.30152 -4.30152 -2.09872 213.722 221.301 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
214.762 222.843 mo
214.762 223.979 214.071 225.297 213.22 225.79 cv
212.368 226.281 211.678 225.759 211.678 224.624 cv
211.678 223.489 212.368 222.169 213.22 221.677 cv
214.071 221.186 214.762 221.708 214.762 222.843 cv
cp
.141176 .164706 .188235 rgb
f
214.312 216.481 mo
214.312 217.773 213.526 219.274 212.558 219.833 cv
211.589 220.393 210.803 219.799 210.803 218.507 cv
210.803 217.215 211.589 215.714 212.558 215.155 cv
213.526 214.596 214.312 215.19 214.312 216.481 cv
cp
.360784 .4 .219608 rgb
f
214.312 215.701 mo
214.006 215.523 li
213.658 215.321 li
213.398 215.206 213.075 215.234 212.724 215.437 cv
211.872 215.928 211.182 217.248 211.182 218.383 cv
211.182 219.034 211.409 219.482 211.764 219.654 cv
212.289 219.958 li
212.329 219.647 li
212.433 219.616 212.54 219.57 212.65 219.506 cv
213.502 219.015 214.192 217.696 214.192 216.56 cv
214.192 216.27 214.146 216.02 214.064 215.816 cv
214.312 215.701 li
cp
level3{
gsave
clp
[-2.09829 4.30064 -4.30064 -2.09829 213.722 215.352 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.09829 4.30064 -4.30064 -2.09829 213.722 215.352 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
214.762 216.892 mo
214.762 218.028 214.071 219.347 213.22 219.838 cv
212.368 220.331 211.678 219.808 211.678 218.673 cv
211.678 217.538 212.368 216.218 213.22 215.727 cv
214.071 215.235 214.762 215.757 214.762 216.892 cv
cp
.141176 .164706 .188235 rgb
f
214.312 210.708 mo
214.312 212 213.526 213.501 212.558 214.061 cv
211.589 214.62 210.803 214.026 210.803 212.734 cv
210.803 211.443 211.589 209.942 212.558 209.382 cv
213.526 208.823 214.312 209.417 214.312 210.708 cv
cp
.360784 .4 .219608 rgb
f
214.312 209.927 mo
214.006 209.75 li
213.658 209.547 li
213.398 209.433 213.075 209.46 212.724 209.664 cv
211.872 210.156 211.182 211.475 211.182 212.61 cv
211.182 213.261 211.409 213.708 211.764 213.881 cv
212.289 214.185 li
212.329 213.874 li
212.433 213.843 212.54 213.797 212.65 213.734 cv
213.502 213.242 214.192 211.922 214.192 210.788 cv
214.192 210.497 214.146 210.247 214.064 210.043 cv
214.312 209.927 li
cp
level3{
gsave
clp
[-2.09894 4.30196 -4.30196 -2.09894 213.722 209.579 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.09894 4.30196 -4.30196 -2.09894 213.722 209.579 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
214.762 211.12 mo
214.762 212.255 214.071 213.574 213.22 214.066 cv
212.368 214.557 211.678 214.036 211.678 212.9 cv
211.678 211.764 212.368 210.446 213.22 209.954 cv
214.071 209.462 214.762 209.984 214.762 211.12 cv
cp
.141176 .164706 .188235 rgb
f
231.4 215.913 mo
231.4 218.41 229.882 221.311 228.009 222.392 cv
226.136 223.473 224.618 222.326 224.618 219.829 cv
224.618 217.331 226.136 214.43 228.009 213.349 cv
229.882 212.267 231.4 213.416 231.4 215.913 cv
cp
.360784 .4 .219608 rgb
f
232.202 213.502 mo
231.528 213.112 li
231.418 213.026 230.889 212.721 230.764 212.666 cv
230.193 212.415 229.482 212.476 228.709 212.922 cv
226.836 214.003 225.318 216.905 225.318 219.402 cv
225.318 220.833 225.818 221.818 226.597 222.197 cv
227.754 222.866 li
227.842 222.18 li
228.069 222.113 228.306 222.012 228.548 221.873 cv
230.421 220.792 231.938 217.89 231.938 215.393 cv
231.938 214.753 231.838 214.204 231.658 213.756 cv
232.202 213.502 li
cp
level3{
gsave
clp
[-4.61565 9.46017 -9.46017 -4.61565 230.904 212.734 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.61565 9.46017 -9.46017 -4.61565 230.904 212.734 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
233.192 216.124 mo
233.192 218.621 231.674 221.522 229.801 222.603 cv
227.928 223.684 226.409 222.537 226.409 220.04 cv
226.409 217.542 227.928 214.641 229.801 213.56 cv
231.674 212.478 233.192 213.626 233.192 216.124 cv
cp
.141176 .164706 .188235 rgb
f
233.207 216.647 mo
233.207 218.802 231.896 221.306 230.28 222.24 cv
228.663 223.173 227.353 222.182 227.353 220.027 cv
227.353 217.872 228.663 215.368 230.28 214.434 cv
231.896 213.5 233.207 214.491 233.207 216.647 cv
cp
.184314 .215686 .25098 rgb
f
230.28 211.534 mo
230.28 213.25 li
229.747 213.551 li
228.664 212.953 li
228.664 211.237 li
229.471 211.975 li
230.28 211.534 li
cp
.117647 .141176 .160784 rgb
f
229.745 211.832 mo
230.284 211.534 li
229.206 210.94 li
228.667 211.238 li
229.745 211.832 li
cp
.156863 .184314 .211765 rgb
f
229.745 211.832 mo
229.745 213.547 li
228.667 212.954 li
228.667 211.238 li
229.745 211.832 li
cp
.0745098 .0901961 .12549 rgb
f
255.573 45.2417 mo
255.573 51.4541 li
255.567 51.4541 li
255.551 52.3022 255.283 53.1563 254.741 53.9063 cv
253.203 56.0132 li
235.398 80.4082 li
235.371 80.4409 li
233.882 82.4385 231.129 83.0078 228.973 81.749 cv
179.844 53.0522 li
178.547 52.2969 177.808 50.9834 177.715 49.604 cv
177.704 49.6094 li
177.704 43.5615 li
178.388 43.7803 li
178.53 43.5562 li
197.873 17.0542 li
199.356 15.0293 202.131 14.4487 204.305 15.7134 cv
250.105 42.4668 li
253.203 44.2729 li
253.433 44.4097 li
253.953 44.7109 254.38 45.1104 254.719 45.5649 cv
255.573 45.2417 li
cp
.8 .8 .8 rgb
f
253.203 42.4668 mo
253.203 56.0132 li
235.398 80.4082 li
235.371 80.4409 li
235.371 42.4668 li
253.203 42.4668 li
cp
.85098 .85098 .85098 rgb
f
179.843 47.147 mo
228.97 75.8403 li
231.14 77.1079 233.917 76.5278 235.398 74.498 cv
254.74 47.9961 li
256.249 45.9302 255.64 43.0137 253.431 41.7236 cv
204.304 13.0303 li
202.134 11.7627 199.356 12.3423 197.875 14.3726 cv
178.533 40.874 li
177.025 42.9404 177.634 45.8569 179.843 47.147 cv
cp
f
254.718 43.2153 mo
254.381 42.7622 253.952 42.3647 253.431 42.0601 cv
204.304 13.3667 li
202.134 12.0991 199.356 12.6792 197.875 14.709 cv
178.533 41.2109 li
178.388 41.4336 li
177.702 41.2129 li
177.702 44.041 li
177.717 44.0356 li
177.808 45.4111 178.548 46.7271 179.843 47.4834 cv
228.97 76.1768 li
231.14 77.4443 233.917 76.8647 235.398 74.8345 cv
254.74 48.333 li
255.284 47.5879 255.549 46.7324 255.566 45.8823 cv
255.571 45.8823 li
255.571 42.8945 li
254.718 43.2153 li
cp
.156863 .184314 .211765 rgb
f
179.843 44.7993 mo
228.97 73.4932 li
231.14 74.7607 233.917 74.1807 235.398 72.1509 cv
254.74 45.6489 li
256.249 43.583 255.64 40.6665 253.431 39.3765 cv
204.304 10.6826 li
202.134 9.41553 199.356 9.99512 197.875 12.0249 cv
178.533 38.5269 li
177.025 40.5928 177.634 43.5093 179.843 44.7993 cv
cp
.184314 .215686 .25098 rgb
f
231.438 72.5205 mo
230.863 72.5205 230.297 72.3662 229.798 72.0752 cv
180.67 43.3813 li
180.009 42.9946 179.558 42.3691 179.401 41.6182 cv
179.245 40.8682 179.407 40.1138 179.859 39.4951 cv
199.201 12.9932 li
199.813 12.1553 200.798 11.6553 201.836 11.6553 cv
202.41 11.6553 202.978 11.8096 203.476 12.1006 cv
252.603 40.7939 li
253.265 41.1807 253.716 41.8066 253.872 42.5571 cv
254.028 43.3076 253.866 44.0615 253.414 44.6812 cv
234.072 71.1831 li
233.461 72.02 232.476 72.5205 231.438 72.5205 cv
cp
.156863 .184314 .211765 rgb
f
179.51 41.9585 mo
179.595 41.7192 179.703 41.4868 179.859 41.2739 cv
199.201 14.772 li
199.813 13.9341 200.798 13.4341 201.836 13.4341 cv
202.41 13.4341 202.978 13.5884 203.476 13.8794 cv
252.603 42.5728 li
253.159 42.8984 253.556 43.3994 253.764 43.9956 cv
253.927 43.5391 253.975 43.0493 253.872 42.5571 cv
253.716 41.8066 253.265 41.1807 252.603 40.7939 cv
203.476 12.1006 li
202.978 11.8096 202.41 11.6553 201.836 11.6553 cv
200.798 11.6553 199.813 12.1553 199.201 12.9932 cv
179.859 39.4951 li
179.407 40.1138 179.245 40.8682 179.401 41.6182 cv
179.426 41.7368 179.471 41.8467 179.51 41.9585 cv
cp
.117647 .137255 .160784 rgb
f
203.98 97.9355 mo
196.502 98.1289 li
197.787 105.663 li
197.789 105.663 li
197.771 105.975 197.938 106.289 198.302 106.548 cv
199.132 107.138 200.671 107.22 201.74 106.731 cv
202.34 106.457 202.664 106.061 202.687 105.662 cv
203.98 97.9355 li
cp
.141176 .164706 .188235 rgb
f
202.532 99.5679 mo
200.899 100.314 198.548 100.189 197.281 99.2881 cv
196.014 98.3867 196.31 97.0503 197.943 96.3037 cv
199.576 95.5566 201.928 95.6821 203.194 96.583 cv
204.462 97.4844 204.165 98.8208 202.532 99.5679 cv
cp
.184314 .215686 .25098 rgb
f
231.864 82.2119 mo
224.386 82.4053 li
225.671 89.9385 li
225.672 89.9385 li
225.654 90.251 225.82 90.5649 226.186 90.8242 cv
227.015 91.4141 228.555 91.4961 229.623 91.0073 cv
230.224 90.7329 230.547 90.3374 230.57 89.9385 cv
231.864 82.2119 li
cp
.141176 .164706 .188235 rgb
f
230.416 83.8438 mo
228.782 84.5908 226.432 84.4653 225.164 83.564 cv
223.897 82.6626 224.193 81.3267 225.826 80.5796 cv
227.46 79.833 229.811 79.958 231.078 80.8594 cv
232.346 81.7607 232.049 83.0967 230.416 83.8438 cv
cp
.184314 .215686 .25098 rgb
f
151.676 68.2734 mo
144.198 68.4668 li
145.483 76.0005 li
145.484 76.0005 li
145.467 76.3125 145.633 76.6265 145.998 76.8857 cv
146.827 77.4761 148.367 77.5581 149.436 77.0688 cv
150.036 76.7944 150.36 76.3989 150.382 76 cv
151.676 68.2734 li
cp
.141176 .164706 .188235 rgb
f
150.228 69.9058 mo
148.595 70.6523 146.244 70.5273 144.977 69.626 cv
143.709 68.7246 144.006 67.3882 145.639 66.6416 cv
147.272 65.8945 149.623 66.02 150.891 66.9209 cv
152.158 67.8228 151.861 69.1587 150.228 69.9058 cv
cp
.184314 .215686 .25098 rgb
f
205.43 95.8164 mo
205.43 101.57 li
230.156 87.2944 li
230.156 81.5405 li
205.43 95.8164 li
cp
.85098 .85098 .85098 rgb
f
231.935 84.4619 mo
231.948 84.4966 li
232.024 85.5449 231.441 86.5518 230.157 87.2949 cv
230.157 81.541 li
231.358 80.8467 231.955 79.916 231.955 78.937 cv
231.935 84.3784 li
231.935 84.4619 li
cp
.8 .8 .8 rgb
f
146.739 67.4443 mo
146.739 73.1982 li
145.065 72.2329 144.197 70.9971 144.19 69.8237 cv
144.19 64.0488 li
144.19 65.2295 145.059 66.4722 146.739 67.4443 cv
cp
.701961 .701961 .701961 rgb
f
231.955 78.937 mo
231.955 79.916 231.358 80.8467 230.157 81.541 cv
205.432 95.8164 li
202.765 97.3511 198.113 97.1636 195.044 95.3862 cv
146.739 67.4443 li
145.059 66.4722 144.19 65.2295 144.19 64.0488 cv
144.19 63.8198 144.225 63.5908 144.295 63.3687 cv
144.51 62.6465 145.072 61.98 145.989 61.4453 cv
170.714 47.1694 li
173.381 45.6353 178.033 45.8228 181.102 47.6001 cv
229.407 75.542 li
231.087 76.5137 231.955 77.7568 231.955 78.937 cv
cp
.921569 .921569 .921569 rgb
f
205.432 95.8164 mo
205.432 101.57 li
202.765 103.105 198.113 102.917 195.044 101.14 cv
195.044 95.3862 li
198.113 97.1636 202.765 97.3511 205.432 95.8164 cv
cp
.8 .8 .8 rgb
f
195.044 95.3862 mo
195.044 101.14 li
146.739 73.1982 li
146.739 67.4443 li
195.044 95.3862 li
cp
.74902 .74902 .74902 rgb
f
205.43 93.7251 mo
205.43 95.8164 li
230.156 81.5405 li
230.156 79.4497 li
205.43 93.7251 li
cp
.156863 .184314 .211765 rgb
f
231.948 78.7427 mo
232.024 79.791 231.441 80.7979 230.157 81.541 cv
230.157 79.4497 li
231.358 78.7554 231.955 77.8252 231.955 76.8462 cv
231.948 78.7427 li
cp
.133333 .156863 .180392 rgb
f
146.739 65.3535 mo
146.739 67.4443 li
145.065 66.479 144.197 65.2432 144.19 64.0698 cv
144.19 61.958 li
144.19 63.1387 145.059 64.3813 146.739 65.3535 cv
cp
.0862745 .101961 .121569 rgb
f
231.955 76.8462 mo
231.955 77.8252 231.358 78.7554 230.157 79.4497 cv
205.432 93.7256 li
202.765 95.2603 198.113 95.0728 195.044 93.2949 cv
146.739 65.3535 li
145.059 64.3813 144.19 63.1387 144.19 61.958 cv
144.19 61.729 144.225 61.5 144.295 61.2778 cv
144.51 60.5557 145.072 59.8887 145.989 59.3545 cv
170.714 45.0786 li
173.381 43.5439 178.033 43.7314 181.102 45.5093 cv
229.407 73.4507 li
231.087 74.4229 231.955 75.666 231.955 76.8462 cv
cp
.184314 .215686 .25098 rgb
f
200.912 93.1211 mo
199.074 93.1211 197.235 92.6665 195.867 91.8745 cv
147.56 63.9312 li
146.285 63.1943 145.833 62.4072 145.833 61.958 cv
145.862 61.7661 li
145.966 61.418 146.303 61.0718 146.816 60.7729 cv
171.535 46.5005 li
172.451 45.9736 173.765 45.6831 175.233 45.6831 cv
177.072 45.6831 178.911 46.1377 180.279 46.9302 cv
228.586 74.8726 li
229.86 75.6099 230.313 76.397 230.313 76.8462 cv
230.313 77.3828 229.7 77.8169 229.335 78.0283 cv
204.61 92.3037 li
203.695 92.8301 202.381 93.1211 200.912 93.1211 cv
cp
.156863 .184314 .211765 rgb
f
146.816 62.0044 mo
171.535 47.7319 li
172.451 47.2051 173.765 46.9146 175.233 46.9146 cv
177.072 46.9146 178.911 47.3691 180.279 48.1616 cv
228.586 76.104 li
229.364 76.5542 229.833 77.022 230.082 77.4209 cv
230.218 77.2495 230.313 77.0562 230.313 76.8462 cv
230.313 76.397 229.86 75.6099 228.586 74.8726 cv
180.279 46.9302 li
178.911 46.1377 177.072 45.6831 175.233 45.6831 cv
173.765 45.6831 172.451 45.9736 171.535 46.5005 cv
146.816 60.7729 li
146.303 61.0718 145.966 61.418 145.862 61.7661 cv
145.833 61.958 li
145.833 62.1357 145.907 62.3672 146.071 62.6265 cv
146.241 62.4077 146.487 62.1963 146.816 62.0044 cv
cp
.117647 .137255 .160784 rgb
f
205.432 93.7256 mo
205.432 95.8164 li
202.765 97.3511 198.113 97.1636 195.044 95.3862 cv
195.044 93.2949 li
198.113 95.0728 202.765 95.2603 205.432 93.7256 cv
cp
.133333 .156863 .180392 rgb
f
195.044 93.2949 mo
195.044 95.3862 li
146.739 67.4443 li
146.739 65.3535 li
195.044 93.2949 li
cp
.117647 .137255 .160784 rgb
f
225.289 77.1641 mo
225.289 77.9355 224.819 78.668 223.873 79.2153 cv
204.396 90.46 li
202.297 91.6689 198.632 91.521 196.215 90.1206 cv
179.175 79.9873 li
177.852 79.2212 177.167 78.2422 177.167 77.3125 cv
177.167 77.1323 177.195 76.9517 177.25 76.7769 cv
177.419 76.208 177.862 75.6826 178.584 75.2617 cv
198.06 64.0171 li
200.16 62.8081 203.825 62.9561 206.242 64.356 cv
223.282 74.4897 li
224.605 75.2554 225.289 76.2344 225.289 77.1641 cv
cp
.184314 .215686 .25098 rgb
f
200.837 89.9834 mo
199.39 89.9834 197.94 89.626 196.863 89.002 cv
179.822 78.8672 li
178.818 78.2866 178.461 77.6665 178.461 77.313 cv
178.484 77.1616 li
178.566 76.8872 178.832 76.6147 179.236 76.3789 cv
198.707 65.1372 li
199.428 64.7222 200.463 64.4932 201.62 64.4932 cv
203.067 64.4932 204.517 64.8511 205.594 65.4751 cv
222.636 75.6094 li
223.64 76.1904 223.996 76.8105 223.996 77.1646 cv
223.996 77.5869 223.514 77.9287 223.226 78.0952 cv
203.75 89.3398 li
203.029 89.7544 201.994 89.9834 200.837 89.9834 cv
cp
.14902 .172549 .2 rgb
f
179.78 78.8408 mo
198.707 67.9131 li
199.428 67.498 200.463 67.269 201.62 67.269 cv
203.067 67.269 204.517 67.6274 205.594 68.2515 cv
222.636 78.3857 li
222.677 78.4116 li
223.226 78.0952 li
223.514 77.9287 223.996 77.5869 223.996 77.1646 cv
223.996 76.8105 223.64 76.1904 222.636 75.6094 cv
205.594 65.4751 li
204.517 64.8511 203.067 64.4932 201.62 64.4932 cv
200.463 64.4932 199.428 64.7222 198.707 65.1372 cv
179.236 76.3789 li
178.832 76.6147 178.566 76.8872 178.484 77.1616 cv
178.461 77.313 li
178.461 77.6611 178.81 78.2676 179.78 78.8408 cv
cp
.117647 .137255 .160784 rgb
f
204.825 69.4067 mo
202.096 70.9819 li
202.096 69.1626 li
204.825 67.5874 li
204.825 69.4067 li
cp
.2 .235294 .270588 rgb
f
199.367 69.4067 mo
202.096 70.9819 li
202.096 69.1626 li
199.367 67.5874 li
199.367 69.4067 li
cp
.160784 .188235 .219608 rgb
f
199.367 67.5986 mo
202.096 69.1738 li
204.825 67.5874 li
202.096 66.0117 li
199.367 67.5986 li
cp
.262745 .309804 .360784 rgb
f
208.625 71.5898 mo
205.896 73.1655 li
205.896 71.3462 li
208.625 69.7705 li
208.625 71.5898 li
cp
.2 .235294 .270588 rgb
f
203.167 71.5898 mo
205.896 73.1655 li
205.896 71.3462 li
203.167 69.7705 li
203.167 71.5898 li
cp
.160784 .188235 .219608 rgb
f
203.167 69.7817 mo
205.896 71.3574 li
208.625 69.7705 li
205.896 68.1953 li
203.167 69.7817 li
cp
.262745 .309804 .360784 rgb
f
212.425 73.7734 mo
209.695 75.3491 li
209.695 73.5298 li
212.425 71.9541 li
212.425 73.7734 li
cp
.2 .235294 .270588 rgb
f
206.967 73.7734 mo
209.695 75.3491 li
209.695 73.5298 li
206.967 71.9541 li
206.967 73.7734 li
cp
.160784 .188235 .219608 rgb
f
206.967 71.9653 mo
209.695 73.541 li
212.425 71.9541 li
209.695 70.3784 li
206.967 71.9653 li
cp
.262745 .309804 .360784 rgb
f
216.225 75.957 mo
213.495 77.5327 li
213.495 75.7134 li
216.225 74.1377 li
216.225 75.957 li
cp
.2 .235294 .270588 rgb
f
210.767 75.957 mo
213.495 77.5327 li
213.495 75.7134 li
210.767 74.1377 li
210.767 75.957 li
cp
.160784 .188235 .219608 rgb
f
210.767 74.1489 mo
213.495 75.7246 li
216.225 74.1377 li
213.495 72.562 li
210.767 74.1489 li
cp
.262745 .309804 .360784 rgb
f
220.024 78.1406 mo
217.295 79.7158 li
217.295 77.8965 li
220.024 76.3213 li
220.024 78.1406 li
cp
.2 .235294 .270588 rgb
f
214.566 78.1406 mo
217.295 79.7158 li
217.295 77.8965 li
214.566 76.3213 li
214.566 78.1406 li
cp
.160784 .188235 .219608 rgb
f
214.566 76.3325 mo
217.295 77.9077 li
220.024 76.3213 li
217.295 74.7456 li
214.566 76.3325 li
cp
.262745 .309804 .360784 rgb
f
200.521 71.8345 mo
197.792 73.4102 li
197.792 71.5908 li
200.521 70.0156 li
200.521 71.8345 li
cp
.2 .235294 .270588 rgb
f
195.063 71.8345 mo
197.792 73.4102 li
197.792 71.5908 li
195.063 70.0156 li
195.063 71.8345 li
cp
.160784 .188235 .219608 rgb
f
195.063 70.0269 mo
197.792 71.6021 li
200.521 70.0156 li
197.792 68.4399 li
195.063 70.0269 li
cp
.262745 .309804 .360784 rgb
f
204.321 74.0181 mo
201.592 75.5938 li
201.592 73.7744 li
204.321 72.1987 li
204.321 74.0181 li
cp
.2 .235294 .270588 rgb
f
198.863 74.0181 mo
201.592 75.5938 li
201.592 73.7744 li
198.863 72.1987 li
198.863 74.0181 li
cp
.160784 .188235 .219608 rgb
f
198.863 72.21 mo
201.592 73.7856 li
204.321 72.1987 li
201.592 70.6235 li
198.863 72.21 li
cp
.262745 .309804 .360784 rgb
f
208.121 76.2017 mo
205.392 77.7773 li
205.392 75.958 li
208.121 74.3823 li
208.121 76.2017 li
cp
.2 .235294 .270588 rgb
f
202.663 76.2017 mo
205.392 77.7773 li
205.392 75.958 li
202.663 74.3823 li
202.663 76.2017 li
cp
.160784 .188235 .219608 rgb
f
202.663 74.3936 mo
205.392 75.9692 li
208.121 74.3823 li
205.392 72.8066 li
202.663 74.3936 li
cp
.262745 .309804 .360784 rgb
f
211.921 78.3853 mo
209.191 79.9609 li
209.191 78.1416 li
211.921 76.5659 li
211.921 78.3853 li
cp
.2 .235294 .270588 rgb
f
206.463 78.3853 mo
209.191 79.9609 li
209.191 78.1416 li
206.463 76.5659 li
206.463 78.3853 li
cp
.160784 .188235 .219608 rgb
f
206.463 76.5771 mo
209.191 78.1523 li
211.921 76.5659 li
209.191 74.9902 li
206.463 76.5771 li
cp
.262745 .309804 .360784 rgb
f
215.721 80.5688 mo
212.991 82.144 li
212.991 80.3247 li
215.721 78.7495 li
215.721 80.5688 li
cp
.2 .235294 .270588 rgb
f
210.263 80.5688 mo
212.991 82.144 li
212.991 80.3247 li
210.263 78.7495 li
210.263 80.5688 li
cp
.160784 .188235 .219608 rgb
f
210.263 78.7603 mo
212.991 80.3359 li
215.721 78.7495 li
212.991 77.1738 li
210.263 78.7603 li
cp
.262745 .309804 .360784 rgb
f
196.217 74.2627 mo
193.488 75.8384 li
193.488 74.019 li
196.217 72.4438 li
196.217 74.2627 li
cp
.2 .235294 .270588 rgb
f
190.759 74.2627 mo
193.488 75.8384 li
193.488 74.019 li
190.759 72.4438 li
190.759 74.2627 li
cp
.160784 .188235 .219608 rgb
f
190.759 72.4546 mo
193.488 74.0303 li
196.217 72.4438 li
193.488 70.8682 li
190.759 72.4546 li
cp
.262745 .309804 .360784 rgb
f
200.018 76.4463 mo
197.288 78.022 li
197.288 76.2026 li
200.018 74.627 li
200.018 76.4463 li
cp
.2 .235294 .270588 rgb
f
194.559 76.4463 mo
197.288 78.022 li
197.288 76.2026 li
194.559 74.627 li
194.559 76.4463 li
cp
.160784 .188235 .219608 rgb
f
194.559 74.6382 mo
197.288 76.2139 li
200.018 74.627 li
197.288 73.0513 li
194.559 74.6382 li
cp
.262745 .309804 .360784 rgb
f
203.817 78.6299 mo
201.088 80.2056 li
201.088 78.3862 li
203.817 76.8105 li
203.817 78.6299 li
cp
.2 .235294 .270588 rgb
f
198.359 78.6299 mo
201.088 80.2056 li
201.088 78.3862 li
198.359 76.8105 li
198.359 78.6299 li
cp
.160784 .188235 .219608 rgb
f
198.359 76.8218 mo
201.088 78.397 li
203.817 76.8105 li
201.088 75.2349 li
198.359 76.8218 li
cp
.262745 .309804 .360784 rgb
f
207.617 80.8135 mo
204.888 82.3887 li
204.888 80.5693 li
207.617 78.9941 li
207.617 80.8135 li
cp
.2 .235294 .270588 rgb
f
202.159 80.8135 mo
204.888 82.3887 li
204.888 80.5693 li
202.159 78.9941 li
202.159 80.8135 li
cp
.160784 .188235 .219608 rgb
f
202.159 79.0049 mo
204.888 80.5806 li
207.617 78.9941 li
204.888 77.4185 li
202.159 79.0049 li
cp
.262745 .309804 .360784 rgb
f
211.417 82.9966 mo
208.688 84.5723 li
208.688 82.7529 li
211.417 81.1777 li
211.417 82.9966 li
cp
.2 .235294 .270588 rgb
f
205.959 82.9966 mo
208.688 84.5723 li
208.688 82.7529 li
205.959 81.1777 li
205.959 82.9966 li
cp
.160784 .188235 .219608 rgb
f
205.959 81.1885 mo
208.688 82.7642 li
211.417 81.1777 li
208.688 79.6021 li
205.959 81.1885 li
cp
.262745 .309804 .360784 rgb
f
191.914 76.6909 mo
189.185 78.2666 li
189.185 76.4473 li
191.914 74.8716 li
191.914 76.6909 li
cp
.2 .235294 .270588 rgb
f
186.456 76.6909 mo
189.185 78.2666 li
189.185 76.4473 li
186.456 74.8716 li
186.456 76.6909 li
cp
.160784 .188235 .219608 rgb
f
186.456 74.8828 mo
189.185 76.4585 li
191.914 74.8716 li
189.185 73.2964 li
186.456 74.8828 li
cp
.262745 .309804 .360784 rgb
f
195.713 78.8745 mo
192.984 80.4502 li
192.984 78.6309 li
195.713 77.0552 li
195.713 78.8745 li
cp
.2 .235294 .270588 rgb
f
190.255 78.8745 mo
192.984 80.4502 li
192.984 78.6309 li
190.255 77.0552 li
190.255 78.8745 li
cp
.160784 .188235 .219608 rgb
f
190.255 77.0664 mo
192.984 78.6421 li
195.713 77.0552 li
192.984 75.4795 li
190.255 77.0664 li
cp
.262745 .309804 .360784 rgb
f
199.513 81.0581 mo
196.784 82.6333 li
196.784 80.814 li
199.513 79.2388 li
199.513 81.0581 li
cp
.2 .235294 .270588 rgb
f
194.055 81.0581 mo
196.784 82.6333 li
196.784 80.814 li
194.055 79.2388 li
194.055 81.0581 li
cp
.160784 .188235 .219608 rgb
f
194.055 79.25 mo
196.784 80.8252 li
199.513 79.2388 li
196.784 77.6631 li
194.055 79.25 li
cp
.262745 .309804 .360784 rgb
f
203.313 83.2417 mo
200.584 84.8169 li
200.584 82.9976 li
203.313 81.4224 li
203.313 83.2417 li
cp
.2 .235294 .270588 rgb
f
197.855 83.2417 mo
200.584 84.8169 li
200.584 82.9976 li
197.855 81.4224 li
197.855 83.2417 li
cp
.160784 .188235 .219608 rgb
f
197.855 81.4331 mo
200.584 83.0088 li
203.313 81.4224 li
200.584 79.8467 li
197.855 81.4331 li
cp
.262745 .309804 .360784 rgb
f
207.113 85.4248 mo
204.384 87.0005 li
204.384 85.1812 li
207.113 83.6055 li
207.113 85.4248 li
cp
.2 .235294 .270588 rgb
f
201.655 85.4248 mo
204.384 87.0005 li
204.384 85.1812 li
201.655 83.6055 li
201.655 85.4248 li
cp
.160784 .188235 .219608 rgb
f
201.655 83.6167 mo
204.384 85.1924 li
207.113 83.6055 li
204.384 82.0303 li
201.655 83.6167 li
cp
.262745 .309804 .360784 rgb
f
187.61 79.1191 mo
184.881 80.6948 li
184.881 78.8755 li
187.61 77.2998 li
187.61 79.1191 li
cp
.2 .235294 .270588 rgb
f
182.152 79.1191 mo
184.881 80.6948 li
184.881 78.8755 li
182.152 77.2998 li
182.152 79.1191 li
cp
.160784 .188235 .219608 rgb
f
182.152 77.311 mo
184.881 78.8867 li
187.61 77.2998 li
184.881 75.7246 li
182.152 77.311 li
cp
.262745 .309804 .360784 rgb
f
191.41 81.3027 mo
188.681 82.8784 li
188.681 81.0591 li
191.41 79.4834 li
191.41 81.3027 li
cp
.2 .235294 .270588 rgb
f
185.952 81.3027 mo
188.681 82.8784 li
188.681 81.0591 li
185.952 79.4834 li
185.952 81.3027 li
cp
.160784 .188235 .219608 rgb
f
185.952 79.4946 mo
188.681 81.0703 li
191.41 79.4834 li
188.681 77.9077 li
185.952 79.4946 li
cp
.262745 .309804 .360784 rgb
f
195.209 83.4863 mo
192.48 85.0615 li
192.48 83.2422 li
195.209 81.667 li
195.209 83.4863 li
cp
.2 .235294 .270588 rgb
f
189.751 83.4863 mo
192.48 85.0615 li
192.48 83.2422 li
189.751 81.667 li
189.751 83.4863 li
cp
.160784 .188235 .219608 rgb
f
189.751 81.6782 mo
192.48 83.2534 li
195.209 81.667 li
192.48 80.0913 li
189.751 81.6782 li
cp
.262745 .309804 .360784 rgb
f
199.009 85.6694 mo
196.28 87.2451 li
196.28 85.4258 li
199.009 83.8501 li
199.009 85.6694 li
cp
.2 .235294 .270588 rgb
f
193.551 85.6694 mo
196.28 87.2451 li
196.28 85.4258 li
193.551 83.8501 li
193.551 85.6694 li
cp
.160784 .188235 .219608 rgb
f
193.551 83.8613 mo
196.28 85.437 li
199.009 83.8501 li
196.28 82.2749 li
193.551 83.8613 li
cp
.262745 .309804 .360784 rgb
f
202.81 87.853 mo
200.08 89.4287 li
200.08 87.6094 li
202.81 86.0337 li
202.81 87.853 li
cp
.2 .235294 .270588 rgb
f
197.351 87.853 mo
200.08 89.4287 li
200.08 87.6094 li
197.351 86.0337 li
197.351 87.853 li
cp
.160784 .188235 .219608 rgb
f
197.351 86.0449 mo
200.08 87.6206 li
202.81 86.0337 li
200.08 84.458 li
197.351 86.0449 li
cp
.262745 .309804 .360784 rgb
f
198.265 61.5864 mo
198.265 62.3579 197.794 63.0908 196.848 63.6377 cv
177.373 74.8823 li
175.272 76.0908 171.608 75.9434 169.19 74.543 cv
152.15 64.4097 li
150.827 63.644 150.143 62.665 150.143 61.7349 cv
150.143 61.5547 150.17 61.374 150.225 61.1992 cv
150.395 60.6304 150.838 60.105 151.56 59.6841 cv
171.036 48.4395 li
173.136 47.2305 176.8 47.3784 179.218 48.7783 cv
196.258 58.9121 li
197.581 59.6777 198.265 60.6567 198.265 61.5864 cv
cp
.184314 .215686 .25098 rgb
f
173.813 74.4058 mo
172.365 74.4058 170.916 74.0483 169.838 73.4243 cv
152.797 63.2896 li
151.793 62.7085 151.437 62.0889 151.437 61.7349 cv
151.46 61.584 li
151.542 61.3096 151.807 61.0371 152.211 60.8013 cv
171.682 49.5591 li
172.403 49.1445 173.438 48.9155 174.595 48.9155 cv
176.043 48.9155 177.492 49.2734 178.569 49.8975 cv
195.611 60.0317 li
196.615 60.6128 196.971 61.2324 196.971 61.5869 cv
196.971 62.0093 196.489 62.3511 196.201 62.5176 cv
176.726 73.7622 li
176.005 74.1768 174.97 74.4058 173.813 74.4058 cv
cp
.14902 .172549 .2 rgb
f
152.756 63.2632 mo
171.682 52.3354 li
172.403 51.9204 173.438 51.6914 174.595 51.6914 cv
176.043 51.6914 177.492 52.0493 178.569 52.6738 cv
195.611 62.8081 li
195.652 62.834 li
196.201 62.5176 li
196.489 62.3511 196.971 62.0093 196.971 61.5869 cv
196.971 61.2324 196.615 60.6128 195.611 60.0317 cv
178.569 49.8975 li
177.492 49.2734 176.043 48.9155 174.595 48.9155 cv
173.438 48.9155 172.403 49.1445 171.682 49.5591 cv
152.211 60.8013 li
151.807 61.0371 151.542 61.3096 151.46 61.584 cv
151.437 61.7349 li
151.437 62.0835 151.786 62.6899 152.756 63.2632 cv
cp
.117647 .137255 .160784 rgb
f
177.8 53.8291 mo
175.071 55.4043 li
175.071 53.585 li
177.8 52.0098 li
177.8 53.8291 li
cp
.2 .235294 .270588 rgb
f
172.342 53.8291 mo
175.071 55.4043 li
175.071 53.585 li
172.342 52.0098 li
172.342 53.8291 li
cp
.160784 .188235 .219608 rgb
f
172.342 52.0205 mo
175.071 53.5962 li
177.8 52.0098 li
175.071 50.4341 li
172.342 52.0205 li
cp
.262745 .309804 .360784 rgb
f
181.6 56.0122 mo
178.871 57.5879 li
178.871 55.7686 li
181.6 54.1929 li
181.6 56.0122 li
cp
.2 .235294 .270588 rgb
f
176.142 56.0122 mo
178.871 57.5879 li
178.871 55.7686 li
176.142 54.1929 li
176.142 56.0122 li
cp
.160784 .188235 .219608 rgb
f
176.142 54.2041 mo
178.871 55.7798 li
181.6 54.1929 li
178.871 52.6177 li
176.142 54.2041 li
cp
.262745 .309804 .360784 rgb
f
185.4 58.1958 mo
182.671 59.7715 li
182.671 57.9521 li
185.4 56.3765 li
185.4 58.1958 li
cp
.2 .235294 .270588 rgb
f
179.942 58.1958 mo
182.671 59.7715 li
182.671 57.9521 li
179.942 56.3765 li
179.942 58.1958 li
cp
.160784 .188235 .219608 rgb
f
179.942 56.3877 mo
182.671 57.9634 li
185.4 56.3765 li
182.671 54.8008 li
179.942 56.3877 li
cp
.262745 .309804 .360784 rgb
f
189.2 60.3794 mo
186.471 61.9546 li
186.471 60.1357 li
189.2 58.5601 li
189.2 60.3794 li
cp
.2 .235294 .270588 rgb
f
183.742 60.3794 mo
186.471 61.9546 li
186.471 60.1357 li
183.742 58.5601 li
183.742 60.3794 li
cp
.160784 .188235 .219608 rgb
f
183.742 58.5713 mo
186.471 60.1465 li
189.2 58.5601 li
186.471 56.9844 li
183.742 58.5713 li
cp
.262745 .309804 .360784 rgb
f
193 62.5625 mo
190.271 64.1382 li
190.271 62.3188 li
193 60.7437 li
193 62.5625 li
cp
.2 .235294 .270588 rgb
f
187.542 62.5625 mo
190.271 64.1382 li
190.271 62.3188 li
187.542 60.7437 li
187.542 62.5625 li
cp
.160784 .188235 .219608 rgb
f
187.542 60.7544 mo
190.271 62.3301 li
193 60.7437 li
190.271 59.168 li
187.542 60.7544 li
cp
.262745 .309804 .360784 rgb
f
173.497 56.2568 mo
170.768 57.8325 li
170.768 56.0132 li
173.497 54.4375 li
173.497 56.2568 li
cp
.2 .235294 .270588 rgb
f
168.039 56.2568 mo
170.768 57.8325 li
170.768 56.0132 li
168.039 54.4375 li
168.039 56.2568 li
cp
.160784 .188235 .219608 rgb
f
168.039 54.4487 mo
170.768 56.0244 li
173.497 54.4375 li
170.768 52.8623 li
168.039 54.4487 li
cp
.262745 .309804 .360784 rgb
f
177.296 58.4404 mo
174.567 60.0161 li
174.567 58.1968 li
177.296 56.6211 li
177.296 58.4404 li
cp
.2 .235294 .270588 rgb
f
171.838 58.4404 mo
174.567 60.0161 li
174.567 58.1968 li
171.838 56.6211 li
171.838 58.4404 li
cp
.160784 .188235 .219608 rgb
f
171.838 56.6323 mo
174.567 58.208 li
177.296 56.6211 li
174.567 55.0459 li
171.838 56.6323 li
cp
.262745 .309804 .360784 rgb
f
181.096 60.624 mo
178.367 62.1997 li
178.367 60.3804 li
181.096 58.8047 li
181.096 60.624 li
cp
.2 .235294 .270588 rgb
f
175.638 60.624 mo
178.367 62.1997 li
178.367 60.3804 li
175.638 58.8047 li
175.638 60.624 li
cp
.160784 .188235 .219608 rgb
f
175.638 58.8159 mo
178.367 60.3916 li
181.096 58.8047 li
178.367 57.229 li
175.638 58.8159 li
cp
.262745 .309804 .360784 rgb
f
184.896 62.8076 mo
182.167 64.3828 li
182.167 62.5635 li
184.896 60.9883 li
184.896 62.8076 li
cp
.2 .235294 .270588 rgb
f
179.438 62.8076 mo
182.167 64.3828 li
182.167 62.5635 li
179.438 60.9883 li
179.438 62.8076 li
cp
.160784 .188235 .219608 rgb
f
179.438 60.9995 mo
182.167 62.5747 li
184.896 60.9883 li
182.167 59.4126 li
179.438 60.9995 li
cp
.262745 .309804 .360784 rgb
f
188.696 64.9907 mo
185.967 66.5664 li
185.967 64.7471 li
188.696 63.1714 li
188.696 64.9907 li
cp
.2 .235294 .270588 rgb
f
183.238 64.9907 mo
185.967 66.5664 li
185.967 64.7471 li
183.238 63.1714 li
183.238 64.9907 li
cp
.160784 .188235 .219608 rgb
f
183.238 63.1826 mo
185.967 64.7583 li
188.696 63.1714 li
185.967 61.5962 li
183.238 63.1826 li
cp
.262745 .309804 .360784 rgb
f
169.193 58.6851 mo
166.464 60.2607 li
166.464 58.4414 li
169.193 56.8657 li
169.193 58.6851 li
cp
.2 .235294 .270588 rgb
f
163.735 58.6851 mo
166.464 60.2607 li
166.464 58.4414 li
163.735 56.8657 li
163.735 58.6851 li
cp
.160784 .188235 .219608 rgb
f
163.735 56.877 mo
166.464 58.4526 li
169.193 56.8657 li
166.464 55.2905 li
163.735 56.877 li
cp
.262745 .309804 .360784 rgb
f
172.993 60.8687 mo
170.264 62.4443 li
170.264 60.625 li
172.993 59.0493 li
172.993 60.8687 li
cp
.2 .235294 .270588 rgb
f
167.535 60.8687 mo
170.264 62.4443 li
170.264 60.625 li
167.535 59.0493 li
167.535 60.8687 li
cp
.160784 .188235 .219608 rgb
f
167.535 59.0605 mo
170.264 60.6362 li
172.993 59.0493 li
170.264 57.4736 li
167.535 59.0605 li
cp
.262745 .309804 .360784 rgb
f
176.792 63.0522 mo
174.063 64.6279 li
174.063 62.8086 li
176.792 61.2329 li
176.792 63.0522 li
cp
.2 .235294 .270588 rgb
f
171.334 63.0522 mo
174.063 64.6279 li
174.063 62.8086 li
171.334 61.2329 li
171.334 63.0522 li
cp
.160784 .188235 .219608 rgb
f
171.334 61.2441 mo
174.063 62.8198 li
176.792 61.2329 li
174.063 59.6572 li
171.334 61.2441 li
cp
.262745 .309804 .360784 rgb
f
180.592 65.2358 mo
177.863 66.811 li
177.863 64.9917 li
180.592 63.4165 li
180.592 65.2358 li
cp
.2 .235294 .270588 rgb
f
175.134 65.2358 mo
177.863 66.811 li
177.863 64.9917 li
175.134 63.4165 li
175.134 65.2358 li
cp
.160784 .188235 .219608 rgb
f
175.134 63.4277 mo
177.863 65.0029 li
180.592 63.4165 li
177.863 61.8408 li
175.134 63.4277 li
cp
.262745 .309804 .360784 rgb
f
184.392 67.4189 mo
181.663 68.9946 li
181.663 67.1753 li
184.392 65.5996 li
184.392 67.4189 li
cp
.2 .235294 .270588 rgb
f
178.934 67.4189 mo
181.663 68.9946 li
181.663 67.1753 li
178.934 65.5996 li
178.934 67.4189 li
cp
.160784 .188235 .219608 rgb
f
178.934 65.6108 mo
181.663 67.1865 li
184.392 65.5996 li
181.663 64.0244 li
178.934 65.6108 li
cp
.262745 .309804 .360784 rgb
f
164.889 61.1133 mo
162.16 62.689 li
162.16 60.8696 li
164.889 59.2939 li
164.889 61.1133 li
cp
.2 .235294 .270588 rgb
f
159.431 61.1133 mo
162.16 62.689 li
162.16 60.8696 li
159.431 59.2939 li
159.431 61.1133 li
cp
.160784 .188235 .219608 rgb
f
159.431 59.3052 mo
162.16 60.8809 li
164.889 59.2939 li
162.16 57.7183 li
159.431 59.3052 li
cp
.262745 .309804 .360784 rgb
f
168.689 63.2969 mo
165.96 64.8726 li
165.96 63.0532 li
168.689 61.4775 li
168.689 63.2969 li
cp
.2 .235294 .270588 rgb
f
163.231 63.2969 mo
165.96 64.8726 li
165.96 63.0532 li
163.231 61.4775 li
163.231 63.2969 li
cp
.160784 .188235 .219608 rgb
f
163.231 61.4888 mo
165.96 63.0645 li
168.689 61.4775 li
165.96 59.9019 li
163.231 61.4888 li
cp
.262745 .309804 .360784 rgb
f
172.489 65.4805 mo
169.76 67.0562 li
169.76 65.2368 li
172.489 63.6611 li
172.489 65.4805 li
cp
.2 .235294 .270588 rgb
f
167.031 65.4805 mo
169.76 67.0562 li
169.76 65.2368 li
167.031 63.6611 li
167.031 65.4805 li
cp
.160784 .188235 .219608 rgb
f
167.031 63.6724 mo
169.76 65.2476 li
172.489 63.6611 li
169.76 62.0854 li
167.031 63.6724 li
cp
.262745 .309804 .360784 rgb
f
176.289 67.6636 mo
173.56 69.2393 li
173.56 67.4199 li
176.289 65.8447 li
176.289 67.6636 li
cp
.2 .235294 .270588 rgb
f
170.831 67.6636 mo
173.56 69.2393 li
173.56 67.4199 li
170.831 65.8447 li
170.831 67.6636 li
cp
.160784 .188235 .219608 rgb
f
170.831 65.8555 mo
173.56 67.4312 li
176.289 65.8447 li
173.56 64.269 li
170.831 65.8555 li
cp
.262745 .309804 .360784 rgb
f
180.088 69.8472 mo
177.359 71.4229 li
177.359 69.6035 li
180.088 68.0278 li
180.088 69.8472 li
cp
.2 .235294 .270588 rgb
f
174.63 69.8472 mo
177.359 71.4229 li
177.359 69.6035 li
174.63 68.0278 li
174.63 69.8472 li
cp
.160784 .188235 .219608 rgb
f
174.63 68.0391 mo
177.359 69.6147 li
180.088 68.0278 li
177.359 66.4526 li
174.63 68.0391 li
cp
.262745 .309804 .360784 rgb
f
160.585 63.5415 mo
157.856 65.1172 li
157.856 63.2979 li
160.585 61.7222 li
160.585 63.5415 li
cp
.2 .235294 .270588 rgb
f
155.127 63.5415 mo
157.856 65.1172 li
157.856 63.2979 li
155.127 61.7222 li
155.127 63.5415 li
cp
.160784 .188235 .219608 rgb
f
155.127 61.7334 mo
157.856 63.3091 li
160.585 61.7222 li
157.856 60.1465 li
155.127 61.7334 li
cp
.262745 .309804 .360784 rgb
f
164.385 65.7251 mo
161.656 67.3008 li
161.656 65.4814 li
164.385 63.9058 li
164.385 65.7251 li
cp
.2 .235294 .270588 rgb
f
158.927 65.7251 mo
161.656 67.3008 li
161.656 65.4814 li
158.927 63.9058 li
158.927 65.7251 li
cp
.160784 .188235 .219608 rgb
f
158.927 63.917 mo
161.656 65.4922 li
164.385 63.9058 li
161.656 62.3301 li
158.927 63.917 li
cp
.262745 .309804 .360784 rgb
f
168.185 67.9087 mo
165.456 69.4839 li
165.456 67.6646 li
168.185 66.0894 li
168.185 67.9087 li
cp
.2 .235294 .270588 rgb
f
162.727 67.9087 mo
165.456 69.4839 li
165.456 67.6646 li
162.727 66.0894 li
162.727 67.9087 li
cp
.160784 .188235 .219608 rgb
f
162.727 66.1001 mo
165.456 67.6758 li
168.185 66.0894 li
165.456 64.5137 li
162.727 66.1001 li
cp
.262745 .309804 .360784 rgb
f
171.985 70.0918 mo
169.256 71.6675 li
169.256 69.8481 li
171.985 68.2725 li
171.985 70.0918 li
cp
.2 .235294 .270588 rgb
f
166.527 70.0918 mo
169.256 71.6675 li
169.256 69.8481 li
166.527 68.2725 li
166.527 70.0918 li
cp
.160784 .188235 .219608 rgb
f
166.527 68.2837 mo
169.256 69.8594 li
171.985 68.2725 li
169.256 66.6973 li
166.527 68.2837 li
cp
.262745 .309804 .360784 rgb
f
175.785 72.2754 mo
173.056 73.8511 li
173.056 72.0317 li
175.785 70.4561 li
175.785 72.2754 li
cp
.2 .235294 .270588 rgb
f
170.327 72.2754 mo
173.056 73.8511 li
173.056 72.0317 li
170.327 70.4561 li
170.327 72.2754 li
cp
.160784 .188235 .219608 rgb
f
170.327 70.4673 mo
173.056 72.043 li
175.785 70.4561 li
173.056 68.8804 li
170.327 70.4673 li
cp
.262745 .309804 .360784 rgb
f
205.107 55.4043 mo
204.753 55.4043 204.403 55.3096 204.096 55.1294 cv
182.892 42.7378 li
182.483 42.4995 182.205 42.1133 182.108 41.6499 cv
182.012 41.187 182.112 40.7212 182.391 40.3394 cv
199.601 16.6348 li
199.978 16.1177 200.586 15.8091 201.227 15.8091 cv
201.581 15.8091 201.931 15.9038 202.238 16.084 cv
223.442 28.4751 li
223.851 28.7139 224.129 29.1001 224.226 29.563 cv
224.322 30.0264 224.222 30.4917 223.942 30.8745 cv
206.733 54.5791 li
206.356 55.0957 205.748 55.4043 205.107 55.4043 cv
cp
.184314 .215686 .25098 rgb
f
204.882 53.1084 mo
204.569 53.1084 204.26 53.0244 203.988 52.8652 cv
185.243 41.9111 li
184.882 41.7002 184.636 41.3584 184.551 40.9492 cv
184.465 40.5396 184.554 40.1279 184.8 39.7905 cv
200.014 18.835 li
200.348 18.3779 200.885 18.105 201.451 18.105 cv
201.765 18.105 202.074 18.189 202.346 18.3481 cv
221.091 29.3022 li
221.451 29.5132 221.697 29.8545 221.783 30.2642 cv
221.868 30.6738 221.78 31.085 221.533 31.4233 cv
206.32 52.3784 li
205.986 52.8354 205.449 53.1084 204.883 53.1084 cv
204.882 53.1084 li
cp
.14902 .172549 .2 rgb
f
185.243 41.9111 mo
185.371 41.9854 li
200.014 21.8159 li
200.348 21.3589 200.885 21.0859 201.451 21.0859 cv
201.765 21.0859 202.074 21.1699 202.346 21.3291 cv
220.963 32.2085 li
221.533 31.4233 li
221.78 31.085 221.868 30.6738 221.783 30.2642 cv
221.697 29.8545 221.451 29.5132 221.091 29.3022 cv
202.346 18.3481 li
202.074 18.189 201.765 18.105 201.451 18.105 cv
200.885 18.105 200.348 18.3779 200.014 18.835 cv
184.8 39.7905 li
184.554 40.1279 184.465 40.5396 184.55 40.9492 cv
184.636 41.3584 184.882 41.7002 185.243 41.9111 cv
cp
.117647 .137255 .160784 rgb
f
198.589 25.4463 mo
201.317 27.0215 li
203.594 23.9004 li
200.864 22.3252 li
198.589 24.0547 li
198.589 25.4463 li
cp
.160784 .188235 .219608 rgb
f
198.589 24.0547 mo
201.317 25.6304 li
203.594 22.5093 li
200.864 20.9341 li
198.589 24.0547 li
cp
.262745 .309804 .360784 rgb
f
203.594 22.5093 mo
203.594 23.9004 li
201.317 27.0215 li
201.317 25.6304 li
203.594 22.5093 li
cp
.2 .235294 .270588 rgb
f
202.363 27.6523 mo
205.093 29.228 li
207.369 26.1069 li
204.64 24.5313 li
202.363 26.2612 li
202.363 27.6523 li
cp
.160784 .188235 .219608 rgb
f
202.363 26.2612 mo
205.093 27.8364 li
207.369 24.7153 li
204.64 23.1401 li
202.363 26.2612 li
cp
.262745 .309804 .360784 rgb
f
207.369 24.7153 mo
207.369 26.1069 li
205.093 29.228 li
205.093 27.8364 li
207.369 24.7153 li
cp
.2 .235294 .270588 rgb
f
206.139 29.8584 mo
208.868 31.4341 li
211.144 28.313 li
208.415 26.7373 li
206.139 28.4673 li
206.139 29.8584 li
cp
.160784 .188235 .219608 rgb
f
206.139 28.4673 mo
208.868 30.043 li
211.144 26.9219 li
208.415 25.3462 li
206.139 28.4673 li
cp
.262745 .309804 .360784 rgb
f
211.144 26.9219 mo
211.144 28.313 li
208.868 31.4341 li
208.868 30.043 li
211.144 26.9219 li
cp
.2 .235294 .270588 rgb
f
209.914 32.0645 mo
212.644 33.6401 li
214.919 30.519 li
212.19 28.9434 li
209.914 30.6733 li
209.914 32.0645 li
cp
.160784 .188235 .219608 rgb
f
209.914 30.6733 mo
212.644 32.249 li
214.919 29.1279 li
212.19 27.5522 li
209.914 30.6733 li
cp
.262745 .309804 .360784 rgb
f
214.919 29.1279 mo
214.919 30.519 li
212.644 33.6401 li
212.644 32.249 li
214.919 29.1279 li
cp
.2 .235294 .270588 rgb
f
213.689 34.2705 mo
216.419 35.8462 li
218.694 32.7251 li
215.966 31.1494 li
213.689 32.8794 li
213.689 34.2705 li
cp
.160784 .188235 .219608 rgb
f
213.689 32.8794 mo
216.419 34.4551 li
218.694 31.334 li
215.966 29.7583 li
213.689 32.8794 li
cp
.262745 .309804 .360784 rgb
f
218.694 31.334 mo
218.694 32.7251 li
216.419 35.8462 li
216.419 34.4551 li
218.694 31.334 li
cp
.2 .235294 .270588 rgb
f
195.671 29.5415 mo
198.399 31.1172 li
200.676 27.9961 li
197.947 26.4204 li
195.671 28.1504 li
195.671 29.5415 li
cp
.160784 .188235 .219608 rgb
f
195.671 28.1504 mo
198.399 29.7261 li
200.676 26.605 li
197.947 25.0293 li
195.671 28.1504 li
cp
.262745 .309804 .360784 rgb
f
200.676 26.605 mo
200.676 27.9961 li
198.399 31.1172 li
198.399 29.7261 li
200.676 26.605 li
cp
.2 .235294 .270588 rgb
f
199.446 31.7476 mo
202.175 33.3232 li
204.451 30.2021 li
201.723 28.6265 li
199.446 30.3564 li
199.446 31.7476 li
cp
.160784 .188235 .219608 rgb
f
199.446 30.3564 mo
202.175 31.9321 li
204.451 28.811 li
201.723 27.2354 li
199.446 30.3564 li
cp
.262745 .309804 .360784 rgb
f
204.451 28.811 mo
204.451 30.2021 li
202.175 33.3232 li
202.175 31.9321 li
204.451 28.811 li
cp
.2 .235294 .270588 rgb
f
203.222 33.9536 mo
205.95 35.5293 li
208.227 32.4082 li
205.497 30.8325 li
203.222 32.5625 li
203.222 33.9536 li
cp
.160784 .188235 .219608 rgb
f
203.222 32.5625 mo
205.95 34.1382 li
208.227 31.0171 li
205.497 29.4414 li
203.222 32.5625 li
cp
.262745 .309804 .360784 rgb
f
208.227 31.0171 mo
208.227 32.4082 li
205.95 35.5293 li
205.95 34.1382 li
208.227 31.0171 li
cp
.2 .235294 .270588 rgb
f
206.997 36.1597 mo
209.726 37.7354 li
212.002 34.6143 li
209.272 33.0386 li
206.997 34.769 li
206.997 36.1597 li
cp
.160784 .188235 .219608 rgb
f
206.997 34.769 mo
209.726 36.3442 li
212.002 33.2231 li
209.272 31.6479 li
206.997 34.769 li
cp
.262745 .309804 .360784 rgb
f
212.002 33.2231 mo
212.002 34.6143 li
209.726 37.7354 li
209.726 36.3442 li
212.002 33.2231 li
cp
.2 .235294 .270588 rgb
f
210.772 38.3662 mo
213.501 39.9414 li
215.777 36.8203 li
213.048 35.2451 li
210.772 36.9751 li
210.772 38.3662 li
cp
.160784 .188235 .219608 rgb
f
210.772 36.9751 mo
213.501 38.5503 li
215.777 35.4292 li
213.048 33.854 li
210.772 36.9751 li
cp
.262745 .309804 .360784 rgb
f
215.777 35.4292 mo
215.777 36.8203 li
213.501 39.9414 li
213.501 38.5503 li
215.777 35.4292 li
cp
.2 .235294 .270588 rgb
f
192.753 33.6372 mo
195.482 35.2124 li
197.758 32.0913 li
195.029 30.5161 li
192.753 32.2456 li
192.753 33.6372 li
cp
.160784 .188235 .219608 rgb
f
192.753 32.2456 mo
195.482 33.8213 li
197.758 30.7002 li
195.029 29.1245 li
192.753 32.2456 li
cp
.262745 .309804 .360784 rgb
f
197.758 30.7002 mo
197.758 32.0913 li
195.482 35.2124 li
195.482 33.8213 li
197.758 30.7002 li
cp
.2 .235294 .270588 rgb
f
196.529 35.8433 mo
199.258 37.4185 li
201.533 34.2974 li
198.805 32.7222 li
196.529 34.4521 li
196.529 35.8433 li
cp
.160784 .188235 .219608 rgb
f
196.529 34.4521 mo
199.258 36.0273 li
201.533 32.9063 li
198.805 31.3311 li
196.529 34.4521 li
cp
.262745 .309804 .360784 rgb
f
201.533 32.9063 mo
201.533 34.2974 li
199.258 37.4185 li
199.258 36.0273 li
201.533 32.9063 li
cp
.2 .235294 .270588 rgb
f
200.304 38.0493 mo
203.033 39.625 li
205.309 36.5039 li
202.58 34.9282 li
200.304 36.6582 li
200.304 38.0493 li
cp
.160784 .188235 .219608 rgb
f
200.304 36.6582 mo
203.033 38.2334 li
205.309 35.1128 li
202.58 33.5371 li
200.304 36.6582 li
cp
.262745 .309804 .360784 rgb
f
205.309 35.1128 mo
205.309 36.5039 li
203.033 39.625 li
203.033 38.2334 li
205.309 35.1128 li
cp
.2 .235294 .270588 rgb
f
204.079 40.2554 mo
206.809 41.8311 li
209.084 38.71 li
206.355 37.1343 li
204.079 38.8643 li
204.079 40.2554 li
cp
.160784 .188235 .219608 rgb
f
204.079 38.8643 mo
206.809 40.4399 li
209.084 37.3188 li
206.355 35.7432 li
204.079 38.8643 li
cp
.262745 .309804 .360784 rgb
f
209.084 37.3188 mo
209.084 38.71 li
206.809 41.8311 li
206.809 40.4399 li
209.084 37.3188 li
cp
.2 .235294 .270588 rgb
f
207.854 42.4614 mo
210.583 44.0371 li
212.859 40.916 li
210.131 39.3403 li
207.854 41.0703 li
207.854 42.4614 li
cp
.160784 .188235 .219608 rgb
f
207.854 41.0703 mo
210.583 42.646 li
212.859 39.5249 li
210.131 37.9492 li
207.854 41.0703 li
cp
.262745 .309804 .360784 rgb
f
212.859 39.5249 mo
212.859 40.916 li
210.583 44.0371 li
210.583 42.646 li
212.859 39.5249 li
cp
.2 .235294 .270588 rgb
f
189.836 37.7324 mo
192.565 39.3081 li
194.841 36.187 li
192.112 34.6113 li
189.836 36.3413 li
189.836 37.7324 li
cp
.160784 .188235 .219608 rgb
f
189.836 36.3413 mo
192.565 37.917 li
194.841 34.7959 li
192.112 33.2202 li
189.836 36.3413 li
cp
.262745 .309804 .360784 rgb
f
194.841 34.7959 mo
194.841 36.187 li
192.565 39.3081 li
192.565 37.917 li
194.841 34.7959 li
cp
.2 .235294 .270588 rgb
f
193.611 39.9385 mo
196.34 41.5142 li
198.616 38.3931 li
195.887 36.8174 li
193.611 38.5474 li
193.611 39.9385 li
cp
.160784 .188235 .219608 rgb
f
193.611 38.5474 mo
196.34 40.123 li
198.616 37.002 li
195.887 35.4263 li
193.611 38.5474 li
cp
.262745 .309804 .360784 rgb
f
198.616 37.002 mo
198.616 38.3931 li
196.34 41.5142 li
196.34 40.123 li
198.616 37.002 li
cp
.2 .235294 .270588 rgb
f
197.386 42.1445 mo
200.115 43.7202 li
202.392 40.5991 li
199.662 39.0234 li
197.386 40.7534 li
197.386 42.1445 li
cp
.160784 .188235 .219608 rgb
f
197.386 40.7534 mo
200.115 42.3291 li
202.392 39.208 li
199.662 37.6323 li
197.386 40.7534 li
cp
.262745 .309804 .360784 rgb
f
202.392 39.208 mo
202.392 40.5991 li
200.115 43.7202 li
200.115 42.3291 li
202.392 39.208 li
cp
.2 .235294 .270588 rgb
f
201.162 44.3506 mo
203.891 45.9263 li
206.167 42.8052 li
203.438 41.2295 li
201.162 42.9595 li
201.162 44.3506 li
cp
.160784 .188235 .219608 rgb
f
201.162 42.9595 mo
203.891 44.5352 li
206.167 41.4141 li
203.438 39.8384 li
201.162 42.9595 li
cp
.262745 .309804 .360784 rgb
f
206.167 41.4141 mo
206.167 42.8052 li
203.891 45.9263 li
203.891 44.5352 li
206.167 41.4141 li
cp
.2 .235294 .270588 rgb
f
204.937 46.5571 mo
207.666 48.1323 li
209.942 45.0112 li
207.213 43.436 li
204.937 45.166 li
204.937 46.5571 li
cp
.160784 .188235 .219608 rgb
f
204.937 45.166 mo
207.666 46.7412 li
209.942 43.6201 li
207.213 42.0449 li
204.937 45.166 li
cp
.262745 .309804 .360784 rgb
f
209.942 43.6201 mo
209.942 45.0112 li
207.666 48.1323 li
207.666 46.7412 li
209.942 43.6201 li
cp
.2 .235294 .270588 rgb
f
186.918 41.8276 mo
189.647 43.4033 li
191.923 40.2822 li
189.194 38.707 li
186.918 40.4365 li
186.918 41.8276 li
cp
.160784 .188235 .219608 rgb
f
186.918 40.4365 mo
189.647 42.0122 li
191.923 38.8911 li
189.194 37.3154 li
186.918 40.4365 li
cp
.262745 .309804 .360784 rgb
f
191.923 38.8911 mo
191.923 40.2822 li
189.647 43.4033 li
189.647 42.0122 li
191.923 38.8911 li
cp
.2 .235294 .270588 rgb
f
190.693 44.0342 mo
193.422 45.6094 li
195.699 42.4883 li
192.97 40.9131 li
190.693 42.6426 li
190.693 44.0342 li
cp
.160784 .188235 .219608 rgb
f
190.693 42.6426 mo
193.422 44.2183 li
195.699 41.0972 li
192.97 39.522 li
190.693 42.6426 li
cp
.262745 .309804 .360784 rgb
f
195.699 41.0972 mo
195.699 42.4883 li
193.422 45.6094 li
193.422 44.2183 li
195.699 41.0972 li
cp
.2 .235294 .270588 rgb
f
194.469 46.2402 mo
197.198 47.8159 li
199.474 44.6948 li
196.745 43.1191 li
194.469 44.8491 li
194.469 46.2402 li
cp
.160784 .188235 .219608 rgb
f
194.469 44.8491 mo
197.198 46.4243 li
199.474 43.3032 li
196.745 41.728 li
194.469 44.8491 li
cp
.262745 .309804 .360784 rgb
f
199.474 43.3032 mo
199.474 44.6948 li
197.198 47.8159 li
197.198 46.4243 li
199.474 43.3032 li
cp
.2 .235294 .270588 rgb
f
198.244 48.4463 mo
200.973 50.022 li
203.249 46.9009 li
200.521 45.3252 li
198.244 47.0552 li
198.244 48.4463 li
cp
.160784 .188235 .219608 rgb
f
198.244 47.0552 mo
200.973 48.6309 li
203.249 45.5098 li
200.521 43.9341 li
198.244 47.0552 li
cp
.262745 .309804 .360784 rgb
f
203.249 45.5098 mo
203.249 46.9009 li
200.973 50.022 li
200.973 48.6309 li
203.249 45.5098 li
cp
.2 .235294 .270588 rgb
f
202.02 50.6523 mo
204.748 52.228 li
207.024 49.1069 li
204.296 47.5313 li
202.02 49.2612 li
202.02 50.6523 li
cp
.160784 .188235 .219608 rgb
f
202.02 49.2612 mo
204.748 50.8369 li
207.024 47.7158 li
204.296 46.1401 li
202.02 49.2612 li
cp
.262745 .309804 .360784 rgb
f
207.024 47.7158 mo
207.024 49.1069 li
204.748 52.228 li
204.748 50.8369 li
207.024 47.7158 li
cp
.2 .235294 .270588 rgb
f
230.981 70.6343 mo
230.627 70.6343 230.277 70.5396 229.97 70.3599 cv
208.766 57.9683 li
208.357 57.7295 208.079 57.3433 207.982 56.8799 cv
207.886 56.417 207.985 55.9517 208.265 55.5693 cv
225.474 31.8647 li
225.852 31.3477 226.46 31.0391 227.101 31.0391 cv
227.454 31.0391 227.805 31.1343 228.112 31.314 cv
249.315 43.7051 li
249.725 43.9438 250.003 44.3301 250.1 44.7935 cv
250.196 45.2563 250.096 45.7222 249.816 46.1045 cv
232.607 69.8091 li
232.23 70.3257 231.622 70.6343 230.981 70.6343 cv
cp
.184314 .215686 .25098 rgb
f
230.756 68.3384 mo
230.443 68.3384 230.134 68.2544 229.861 68.0957 cv
211.117 57.1411 li
210.756 56.9302 210.51 56.5889 210.425 56.1792 cv
210.339 55.7695 210.428 55.3584 210.674 55.0205 cv
225.888 34.0649 li
226.222 33.6079 226.759 33.3354 227.325 33.3354 cv
227.639 33.3354 227.948 33.4194 228.22 33.5781 cv
246.965 44.5322 li
247.325 44.7432 247.571 45.085 247.657 45.4941 cv
247.742 45.9038 247.653 46.3154 247.407 46.6533 cv
232.194 67.6089 li
231.86 68.0654 231.323 68.3384 230.757 68.3384 cv
230.756 68.3384 li
cp
.14902 .172549 .2 rgb
f
211.117 57.1411 mo
211.244 57.2158 li
225.888 37.0459 li
226.222 36.5889 226.759 36.3159 227.325 36.3159 cv
227.639 36.3159 227.948 36.3999 228.22 36.5591 cv
246.837 47.4385 li
247.407 46.6533 li
247.653 46.3154 247.742 45.9038 247.657 45.4941 cv
247.571 45.085 247.325 44.7432 246.965 44.5322 cv
228.22 33.5781 li
227.948 33.4194 227.639 33.3354 227.325 33.3354 cv
226.759 33.3354 226.222 33.6079 225.888 34.0649 cv
210.674 55.0205 li
210.428 55.3584 210.339 55.7695 210.425 56.1792 cv
210.51 56.5884 210.756 56.9302 211.117 57.1411 cv
cp
.117647 .137255 .160784 rgb
f
224.462 40.6763 mo
227.191 42.2515 li
229.468 39.1304 li
226.738 37.5552 li
224.462 39.2852 li
224.462 40.6763 li
cp
.160784 .188235 .219608 rgb
f
224.462 39.2852 mo
227.191 40.8608 li
229.468 37.7397 li
226.738 36.1641 li
224.462 39.2852 li
cp
.262745 .309804 .360784 rgb
f
229.468 37.7397 mo
229.468 39.1304 li
227.191 42.2515 li
227.191 40.8608 li
229.468 37.7397 li
cp
.2 .235294 .270588 rgb
f
228.237 42.8823 mo
230.967 44.458 li
233.242 41.3369 li
230.514 39.7612 li
228.237 41.4912 li
228.237 42.8823 li
cp
.160784 .188235 .219608 rgb
f
228.237 41.4912 mo
230.967 43.0669 li
233.242 39.9458 li
230.514 38.3701 li
228.237 41.4912 li
cp
.262745 .309804 .360784 rgb
f
233.242 39.9458 mo
233.242 41.3369 li
230.967 44.458 li
230.967 43.0669 li
233.242 39.9458 li
cp
.2 .235294 .270588 rgb
f
232.013 45.0884 mo
234.742 46.6641 li
237.018 43.543 li
234.289 41.9673 li
232.013 43.6973 li
232.013 45.0884 li
cp
.160784 .188235 .219608 rgb
f
232.013 43.6973 mo
234.742 45.2729 li
237.018 42.1519 li
234.289 40.5762 li
232.013 43.6973 li
cp
.262745 .309804 .360784 rgb
f
237.018 42.1519 mo
237.018 43.543 li
234.742 46.6641 li
234.742 45.2729 li
237.018 42.1519 li
cp
.2 .235294 .270588 rgb
f
235.788 47.2944 mo
238.517 48.8701 li
240.793 45.749 li
238.064 44.1733 li
235.788 45.9033 li
235.788 47.2944 li
cp
.160784 .188235 .219608 rgb
f
235.788 45.9033 mo
238.517 47.479 li
240.793 44.3579 li
238.064 42.7822 li
235.788 45.9033 li
cp
.262745 .309804 .360784 rgb
f
240.793 44.3579 mo
240.793 45.749 li
238.517 48.8701 li
238.517 47.479 li
240.793 44.3579 li
cp
.2 .235294 .270588 rgb
f
239.563 49.5005 mo
242.292 51.0762 li
244.568 47.9551 li
241.84 46.3794 li
239.563 48.1094 li
239.563 49.5005 li
cp
.160784 .188235 .219608 rgb
f
239.563 48.1094 mo
242.292 49.6851 li
244.568 46.564 li
241.84 44.9883 li
239.563 48.1094 li
cp
.262745 .309804 .360784 rgb
f
244.568 46.564 mo
244.568 47.9551 li
242.292 51.0762 li
242.292 49.6851 li
244.568 46.564 li
cp
.2 .235294 .270588 rgb
f
221.545 44.7715 mo
224.273 46.3472 li
226.55 43.2261 li
223.82 41.6504 li
221.545 43.3804 li
221.545 44.7715 li
cp
.160784 .188235 .219608 rgb
f
221.545 43.3804 mo
224.273 44.9561 li
226.55 41.835 li
223.82 40.2593 li
221.545 43.3804 li
cp
.262745 .309804 .360784 rgb
f
226.55 41.835 mo
226.55 43.2261 li
224.273 46.3472 li
224.273 44.9561 li
226.55 41.835 li
cp
.2 .235294 .270588 rgb
f
225.32 46.9775 mo
228.049 48.5532 li
230.325 45.4321 li
227.596 43.8569 li
225.32 45.5864 li
225.32 46.9775 li
cp
.160784 .188235 .219608 rgb
f
225.32 45.5864 mo
228.049 47.1621 li
230.325 44.041 li
227.596 42.4653 li
225.32 45.5864 li
cp
.262745 .309804 .360784 rgb
f
230.325 44.041 mo
230.325 45.4321 li
228.049 48.5532 li
228.049 47.1621 li
230.325 44.041 li
cp
.2 .235294 .270588 rgb
f
229.096 49.1841 mo
231.824 50.7593 li
234.101 47.6382 li
231.371 46.063 li
229.096 47.7925 li
229.096 49.1841 li
cp
.160784 .188235 .219608 rgb
f
229.096 47.7925 mo
231.824 49.3682 li
234.101 46.2471 li
231.371 44.6714 li
229.096 47.7925 li
cp
.262745 .309804 .360784 rgb
f
234.101 46.2471 mo
234.101 47.6382 li
231.824 50.7593 li
231.824 49.3682 li
234.101 46.2471 li
cp
.2 .235294 .270588 rgb
f
232.87 51.3901 mo
235.6 52.9658 li
237.876 49.8447 li
235.146 48.269 li
232.87 49.999 li
232.87 51.3901 li
cp
.160784 .188235 .219608 rgb
f
232.87 49.999 mo
235.6 51.5742 li
237.876 48.4531 li
235.146 46.8779 li
232.87 49.999 li
cp
.262745 .309804 .360784 rgb
f
237.876 48.4531 mo
237.876 49.8447 li
235.6 52.9658 li
235.6 51.5742 li
237.876 48.4531 li
cp
.2 .235294 .270588 rgb
f
236.646 53.5962 mo
239.375 55.1719 li
241.651 52.0508 li
238.922 50.4751 li
236.646 52.2051 li
236.646 53.5962 li
cp
.160784 .188235 .219608 rgb
f
236.646 52.2051 mo
239.375 53.7808 li
241.651 50.6597 li
238.922 49.084 li
236.646 52.2051 li
cp
.262745 .309804 .360784 rgb
f
241.651 50.6597 mo
241.651 52.0508 li
239.375 55.1719 li
239.375 53.7808 li
241.651 50.6597 li
cp
.2 .235294 .270588 rgb
f
218.627 48.8672 mo
221.356 50.4424 li
223.632 47.3213 li
220.903 45.7461 li
218.627 47.4761 li
218.627 48.8672 li
cp
.160784 .188235 .219608 rgb
f
218.627 47.4761 mo
221.356 49.0513 li
223.632 45.9302 li
220.903 44.355 li
218.627 47.4761 li
cp
.262745 .309804 .360784 rgb
f
223.632 45.9302 mo
223.632 47.3213 li
221.356 50.4424 li
221.356 49.0513 li
223.632 45.9302 li
cp
.2 .235294 .270588 rgb
f
222.402 51.0732 mo
225.132 52.6489 li
227.407 49.5278 li
224.679 47.9521 li
222.402 49.6821 li
222.402 51.0732 li
cp
.160784 .188235 .219608 rgb
f
222.402 49.6821 mo
225.132 51.2578 li
227.407 48.1367 li
224.679 46.561 li
222.402 49.6821 li
cp
.262745 .309804 .360784 rgb
f
227.407 48.1367 mo
227.407 49.5278 li
225.132 52.6489 li
225.132 51.2578 li
227.407 48.1367 li
cp
.2 .235294 .270588 rgb
f
226.178 53.2793 mo
228.907 54.855 li
231.183 51.7339 li
228.454 50.1582 li
226.178 51.8882 li
226.178 53.2793 li
cp
.160784 .188235 .219608 rgb
f
226.178 51.8882 mo
228.907 53.4639 li
231.183 50.3428 li
228.454 48.7671 li
226.178 51.8882 li
cp
.262745 .309804 .360784 rgb
f
231.183 50.3428 mo
231.183 51.7339 li
228.907 54.855 li
228.907 53.4639 li
231.183 50.3428 li
cp
.2 .235294 .270588 rgb
f
229.953 55.4854 mo
232.682 57.061 li
234.958 53.9399 li
232.229 52.3643 li
229.953 54.0942 li
229.953 55.4854 li
cp
.160784 .188235 .219608 rgb
f
229.953 54.0942 mo
232.682 55.6699 li
234.958 52.5488 li
232.229 50.9731 li
229.953 54.0942 li
cp
.262745 .309804 .360784 rgb
f
234.958 52.5488 mo
234.958 53.9399 li
232.682 57.061 li
232.682 55.6699 li
234.958 52.5488 li
cp
.2 .235294 .270588 rgb
f
233.729 57.6914 mo
236.457 59.2671 li
238.733 56.146 li
236.005 54.5703 li
233.729 56.3003 li
233.729 57.6914 li
cp
.160784 .188235 .219608 rgb
f
233.729 56.3003 mo
236.457 57.876 li
238.733 54.7549 li
236.005 53.1792 li
233.729 56.3003 li
cp
.262745 .309804 .360784 rgb
f
238.733 54.7549 mo
238.733 56.146 li
236.457 59.2671 li
236.457 57.876 li
238.733 54.7549 li
cp
.2 .235294 .270588 rgb
f
215.71 52.9624 mo
218.438 54.5381 li
220.715 51.417 li
217.985 49.8413 li
215.71 51.5713 li
215.71 52.9624 li
cp
.160784 .188235 .219608 rgb
f
215.71 51.5713 mo
218.438 53.147 li
220.715 50.0259 li
217.985 48.4502 li
215.71 51.5713 li
cp
.262745 .309804 .360784 rgb
f
220.715 50.0259 mo
220.715 51.417 li
218.438 54.5381 li
218.438 53.147 li
220.715 50.0259 li
cp
.2 .235294 .270588 rgb
f
219.485 55.1685 mo
222.214 56.7441 li
224.49 53.623 li
221.761 52.0474 li
219.485 53.7773 li
219.485 55.1685 li
cp
.160784 .188235 .219608 rgb
f
219.485 53.7773 mo
222.214 55.353 li
224.49 52.2319 li
221.761 50.6563 li
219.485 53.7773 li
cp
.262745 .309804 .360784 rgb
f
224.49 52.2319 mo
224.49 53.623 li
222.214 56.7441 li
222.214 55.353 li
224.49 52.2319 li
cp
.2 .235294 .270588 rgb
f
223.261 57.375 mo
225.989 58.9502 li
228.266 55.8291 li
225.536 54.2539 li
223.261 55.9834 li
223.261 57.375 li
cp
.160784 .188235 .219608 rgb
f
223.261 55.9834 mo
225.989 57.5591 li
228.266 54.438 li
225.536 52.8623 li
223.261 55.9834 li
cp
.262745 .309804 .360784 rgb
f
228.266 54.438 mo
228.266 55.8291 li
225.989 58.9502 li
225.989 57.5591 li
228.266 54.438 li
cp
.2 .235294 .270588 rgb
f
227.035 59.5811 mo
229.765 61.1563 li
232.041 58.0356 li
229.312 56.46 li
227.035 58.1899 li
227.035 59.5811 li
cp
.160784 .188235 .219608 rgb
f
227.035 58.1899 mo
229.765 59.7651 li
232.041 56.644 li
229.312 55.0688 li
227.035 58.1899 li
cp
.262745 .309804 .360784 rgb
f
232.041 56.644 mo
232.041 58.0356 li
229.765 61.1563 li
229.765 59.7651 li
232.041 56.644 li
cp
.2 .235294 .270588 rgb
f
230.811 61.7871 mo
233.54 63.3628 li
235.815 60.2417 li
233.087 58.666 li
230.811 60.396 li
230.811 61.7871 li
cp
.160784 .188235 .219608 rgb
f
230.811 60.396 mo
233.54 61.9712 li
235.815 58.8506 li
233.087 57.2749 li
230.811 60.396 li
cp
.262745 .309804 .360784 rgb
f
235.815 58.8506 mo
235.815 60.2417 li
233.54 63.3628 li
233.54 61.9712 li
235.815 58.8506 li
cp
.2 .235294 .270588 rgb
f
212.792 57.0581 mo
215.521 58.6333 li
217.797 55.5122 li
215.068 53.937 li
212.792 55.667 li
212.792 57.0581 li
cp
.160784 .188235 .219608 rgb
f
212.792 55.667 mo
215.521 57.2422 li
217.797 54.1211 li
215.068 52.5459 li
212.792 55.667 li
cp
.262745 .309804 .360784 rgb
f
217.797 54.1211 mo
217.797 55.5122 li
215.521 58.6333 li
215.521 57.2422 li
217.797 54.1211 li
cp
.2 .235294 .270588 rgb
f
216.567 59.2642 mo
219.296 60.8398 li
221.572 57.7183 li
218.844 56.1431 li
216.567 57.873 li
216.567 59.2642 li
cp
.160784 .188235 .219608 rgb
f
216.567 57.873 mo
219.296 59.4487 li
221.572 56.3276 li
218.844 54.752 li
216.567 57.873 li
cp
.262745 .309804 .360784 rgb
f
221.572 56.3276 mo
221.572 57.7183 li
219.296 60.8398 li
219.296 59.4487 li
221.572 56.3276 li
cp
.2 .235294 .270588 rgb
f
220.343 61.4702 mo
223.071 63.0459 li
225.348 59.9248 li
222.619 58.3491 li
220.343 60.0791 li
220.343 61.4702 li
cp
.160784 .188235 .219608 rgb
f
220.343 60.0791 mo
223.071 61.6548 li
225.348 58.5337 li
222.619 56.958 li
220.343 60.0791 li
cp
.262745 .309804 .360784 rgb
f
225.348 58.5337 mo
225.348 59.9248 li
223.071 63.0459 li
223.071 61.6548 li
225.348 58.5337 li
cp
.2 .235294 .270588 rgb
f
224.118 63.6763 mo
226.847 65.252 li
229.123 62.1309 li
226.395 60.5552 li
224.118 62.2852 li
224.118 63.6763 li
cp
.160784 .188235 .219608 rgb
f
224.118 62.2852 mo
226.847 63.8608 li
229.123 60.7397 li
226.395 59.1641 li
224.118 62.2852 li
cp
.262745 .309804 .360784 rgb
f
229.123 60.7397 mo
229.123 62.1309 li
226.847 65.252 li
226.847 63.8608 li
229.123 60.7397 li
cp
.2 .235294 .270588 rgb
f
227.894 65.8823 mo
230.622 67.458 li
232.898 64.3369 li
230.17 62.7612 li
227.894 64.4912 li
227.894 65.8823 li
cp
.160784 .188235 .219608 rgb
f
227.894 64.4912 mo
230.622 66.0669 li
232.898 62.9458 li
230.17 61.3701 li
227.894 64.4912 li
cp
.262745 .309804 .360784 rgb
f
232.898 62.9458 mo
232.898 64.3369 li
230.622 67.458 li
230.622 66.0669 li
232.898 62.9458 li
cp
.2 .235294 .270588 rgb
f
184.881 91.9951 mo
183.604 92.4004 li
152.674 74.5435 li
152.674 73.4312 li
150.961 71.0693 li
150.961 73.5542 li
150.961 73.5542 150.013 94.729 190.824 96.5693 cv
190.824 94.084 li
184.881 91.9951 li
cp
.133333 .156863 .180392 rgb
f
150.961 71.0693 mo
150.961 71.0693 150.013 92.2441 190.824 94.084 cv
150.961 71.0693 li
cp
.156863 .184314 .211765 rgb
f
180.956 91.0425 mo
180.956 91.208 180.855 91.3657 180.652 91.4829 cv
180.184 91.7715 li
179.733 92.0308 178.946 91.9995 178.427 91.6987 cv
155.844 79.0469 li
155.56 78.8823 155.413 78.6719 155.413 78.4727 cv
155.431 78.3574 li
155.467 78.2354 155.563 78.1226 155.717 78.0322 cv
156.185 77.7437 li
156.636 77.4839 157.423 77.5156 157.942 77.8164 cv
180.525 90.4683 li
180.809 90.6328 180.956 90.8428 180.956 91.0425 cv
cp
.109804 .129412 .14902 rgb
f
180.957 91.0425 mo
180.957 91.2095 180.855 91.3657 180.652 91.4834 cv
180.393 91.6421 li
157.942 79.0654 li
157.668 78.9067 157.32 78.8218 156.986 78.8164 cv
156.688 78.8135 156.397 78.8711 156.184 78.9941 cv
155.976 79.123 li
155.844 79.0464 li
155.56 78.8818 155.415 78.6709 155.415 78.4712 cv
155.431 78.356 li
155.466 78.2358 155.563 78.1235 155.718 78.0332 cv
156.184 77.7427 li
156.373 77.6357 156.619 77.5786 156.877 77.5703 cv
157.244 77.5566 157.638 77.6416 157.942 77.8164 cv
180.524 90.4673 li
180.809 90.6318 180.957 90.8423 180.957 91.0425 cv
cp
.184314 .215686 .25098 rgb
f
156.986 78.8164 mo
156.688 78.8135 156.397 78.8711 156.184 78.9941 cv
155.976 79.123 li
155.844 79.0464 li
155.56 78.8818 155.415 78.6709 155.415 78.4712 cv
155.431 78.356 li
155.466 78.2358 155.563 78.1235 155.718 78.0332 cv
156.184 77.7427 li
156.373 77.6357 156.619 77.5786 156.877 77.5703 cv
156.962 77.981 157 78.3999 156.986 78.8164 cv
cp
.219608 .258824 .301961 rgb
f
168.966 79.959 mo
168.695 80.1831 li
169.477 81.709 li
169.756 82.2554 169.371 83.3281 168.771 83.6743 cv
165.349 85.646 li
165.115 86.626 li
163.765 85.8428 li
163.504 85.6924 163.397 85.2388 163.571 84.6753 cv
164.377 82.0615 li
165.017 79.9883 166.615 78.7275 167.629 79.1914 cv
167.631 79.1865 li
168.966 79.959 li
cp
.85098 .85098 .85098 rgb
f
169.535 80.5547 mo
170.399 82.2427 li
170.679 82.7891 170.293 83.8618 169.693 84.2075 cv
165.603 86.5645 li
165.011 86.9058 164.626 86.2979 164.891 85.439 cv
165.697 82.8252 li
166.483 80.2778 168.717 78.9561 169.535 80.5547 cv
cp
.74902 .74902 .74902 rgb
f
206.139 11.7319 mo
206.139 11.7319 246.451 -1.60742 254.165 39.8447 cv
206.139 11.7319 li
cp
.184314 .215686 .25098 rgb
f
209.622 12.2095 mo
212.158 11.6577 216.053 11.0181 220.48 11.0181 cv
232.497 11.0181 247.07 15.6528 252.24 37.1914 cv
209.622 12.2095 li
cp
.156863 .184314 .211765 rgb
f
220.48 12.2593 mo
232.218 12.2593 246.39 16.6904 251.86 36.9683 cv
252.24 37.1914 li
247.07 15.6528 232.497 11.0181 220.48 11.0181 cv
216.053 11.0181 212.158 11.6577 209.622 12.2095 cv
211.198 13.1338 li
213.648 12.6802 216.889 12.2593 220.48 12.2593 cv
cp
.109804 .129412 .14902 rgb
f
55.4619 254.231 mo
50.5107 254.359 li
51.3618 259.347 li
51.3628 259.347 li
51.3506 259.553 51.4609 259.761 51.7021 259.933 cv
52.2515 260.324 53.2705 260.377 53.9785 260.054 cv
54.3755 259.873 54.5903 259.611 54.6055 259.346 cv
55.4619 254.231 li
cp
.141176 .164706 .188235 rgb
f
54.5029 255.312 mo
53.4219 255.806 51.8652 255.723 51.0264 255.126 cv
50.1875 254.53 50.3838 253.645 51.4648 253.151 cv
52.5459 252.656 54.1025 252.739 54.9414 253.335 cv
55.7803 253.932 55.584 254.817 54.5029 255.312 cv
cp
.184314 .215686 .25098 rgb
f
10.6045 228.481 mo
5.65381 228.609 li
6.50439 233.596 li
6.50537 233.596 li
6.49365 233.803 6.604 234.011 6.84521 234.183 cv
7.39453 234.574 8.41357 234.627 9.12109 234.304 cv
9.51855 234.123 9.73291 233.861 9.74805 233.596 cv
10.6045 228.481 li
cp
.141176 .164706 .188235 rgb
f
9.646 229.562 mo
8.56494 230.056 7.0083 229.973 6.16895 229.376 cv
5.33008 228.78 5.52637 227.895 6.60742 227.401 cv
7.68848 226.906 9.24512 226.989 10.0845 227.585 cv
10.9233 228.182 10.7271 229.067 9.646 229.562 cv
cp
.184314 .215686 .25098 rgb
f
81.9189 238.934 mo
76.9678 239.063 li
77.8188 244.05 li
77.8198 244.05 li
77.8076 244.256 77.918 244.464 78.1592 244.636 cv
78.7085 245.027 79.7275 245.082 80.4355 244.757 cv
80.8325 244.576 81.0474 244.314 81.0625 244.05 cv
81.9189 238.934 li
cp
.141176 .164706 .188235 rgb
f
80.96 240.015 mo
79.8789 240.509 78.3223 240.426 77.4834 239.83 cv
76.6445 239.233 76.8408 238.348 77.9219 237.854 cv
79.0029 237.36 80.5596 237.443 81.3984 238.04 cv
82.2378 238.636 82.0415 239.52 80.96 240.015 cv
cp
.184314 .215686 .25098 rgb
f
55.9932 254.788 mo
55.9932 257.118 li
81.4414 242.506 li
81.4414 240.176 li
55.9932 254.788 li
cp
.85098 .85098 .85098 rgb
f
82.606 240.652 mo
82.6152 240.674 li
82.665 241.361 82.2832 242.02 81.4419 242.506 cv
81.4419 240.176 li
82.2285 239.721 82.6196 239.112 82.6196 238.471 cv
82.606 240.597 li
82.606 240.652 li
cp
.8 .8 .8 rgb
f
6.86328 229.857 mo
6.86328 232.188 li
5.76758 231.555 5.19922 230.747 5.19482 229.978 cv
5.19482 227.633 li
5.19482 228.407 5.76318 229.22 6.86328 229.857 cv
cp
.701961 .701961 .701961 rgb
f
82.6196 238.471 mo
82.6196 239.112 82.2285 239.721 81.4419 240.176 cv
55.9937 254.788 li
54.248 255.792 51.2017 255.669 49.1919 254.505 cv
6.86328 229.857 li
5.76318 229.22 5.19482 228.407 5.19482 227.633 cv
5.19482 227.484 5.21729 227.333 5.2627 227.188 cv
5.40381 226.715 5.77197 226.279 6.37256 225.928 cv
31.8203 211.317 li
33.5664 210.312 36.6128 210.435 38.6226 211.599 cv
80.9512 236.248 li
82.0513 236.884 82.6196 237.698 82.6196 238.471 cv
cp
.921569 .921569 .921569 rgb
f
55.9937 254.788 mo
55.9937 257.118 li
54.248 258.123 51.2017 258 49.1919 256.836 cv
49.1919 254.505 li
51.2017 255.669 54.248 255.792 55.9937 254.788 cv
cp
.8 .8 .8 rgb
f
49.1919 254.505 mo
49.1919 256.836 li
6.86328 232.188 li
6.86328 229.857 li
49.1919 254.505 li
cp
.74902 .74902 .74902 rgb
f
37.3941 189.478 mo
34.9922 190.873 li
8.09037 206.442 li
6.68411 206.21 li
35.6635 189.466 li
35.7154 189.432 li
36.1495 189.125 36.7397 189.113 37.3941 189.478 cv
.8 .184314 .184314 rgb
f
74.9683 216.247 mo
59.4688 225.194 li
45.6299 233.181 li
36.5317 222.96 li
46.0757 217.433 li
65.835 205.997 li
65.8755 206.019 li
68.1157 207.31 70.3325 209.214 72.3638 211.605 cv
73.5215 212.964 74.3896 214.55 74.9683 216.247 cv
cp
f
65.8584 205.985 mo
65.835 205.997 li
46.0757 217.433 li
36.5317 222.96 li
8.09037 206.442 li
34.9922 190.873 li
37.3941 189.478 li
37.417 189.466 li
65.8584 205.985 li
.921569 .168627 .164706 rgb
f
45.6299 233.181 mo
74.9683 216.247 li
82.6196 238.611 li
53.2759 255.549 li
45.6299 233.181 li
cp
.690196 .203922 .203922 rgb
f
53.2759 255.549 mo
7.92236 229.267 li
6.64941 228.526 5.61328 226.546 5.61328 224.845 cv
5.61328 208.315 li
5.61328 206.486 6.72461 205.647 8.09033 206.44 cv
36.5317 222.958 li
38.7759 224.25 40.9927 226.152 43.0249 228.544 cv
44.1821 229.907 45.0498 231.493 45.6284 233.184 cv
53.2759 255.549 li
cp
.560784 .121569 .117647 rgb
f
47.0332 233.708 mo
74.3286 217.953 li
81.2163 238.084 li
53.916 253.843 li
47.0332 233.708 li
cp
.611765 .14902 .14902 rgb
f
74.3286 217.953 mo
73.6372 218.351 li
80.2397 237.65 li
53.6309 253.01 li
53.916 253.843 li
81.2163 238.084 li
74.3286 217.953 li
cp
.8 .184314 .184314 rgb
f
74.3286 217.953 mo
73.6372 218.351 li
80.2397 237.65 li
81.2163 238.084 li
74.3286 217.953 li
cp
.45098 .0666667 .0627451 rgb
f
43.7256 222.214 mo
64.582 210.322 li
70.0601 216.025 li
48.9346 227.737 li
43.7256 222.214 li
cp
.2 .235294 .270588 rgb
f
64.582 211.262 mo
69.4702 216.352 li
70.0601 216.025 li
64.582 210.322 li
43.7256 222.214 li
44.3022 222.827 li
64.582 211.262 li
cp
.0745098 .0901961 .12549 rgb
f
64.582 210.322 mo
64.582 211.262 li
44.3022 222.827 li
43.7256 222.214 li
64.582 210.322 li
cp
.317647 .372549 .431373 rgb
f
36.618 215.241 mo
31.1082 215.241 25.67 213.835 22.0952 211.162 cv
19.48 209.206 18.292 206.89 18.4258 204.612 cv
18.4121 204.612 li
18.4145 200.467 li
18.4151 199.432 li
18.4154 199.016 li
18.4839 201.119 19.6849 203.227 22.0952 205.03 cv
22.817 205.57 23.6149 206.058 24.4739 206.493 cv
27.3369 207.945 30.8795 208.809 34.5565 209.043 cv
35.2401 209.087 35.9286 209.109 36.618 209.109 cv
40.4652 209.109 44.3483 208.423 47.6563 207.005 cv
48.2741 206.74 48.8545 206.457 49.3957 206.159 cv
49.4627 206.122 49.529 206.085 49.5947 206.048 cv
49.6476 206.018 49.7002 205.987 49.7526 205.957 cv
49.8813 205.882 50.0075 205.806 50.1315 205.729 cv
50.3085 205.62 50.4809 205.509 50.6469 205.396 cv
53.4058 203.534 54.8635 201.213 54.9136 198.866 cv
54.9137 199.628 li
54.915 205.36 li
54.8936 205.359 li
54.6484 208.32 52.1651 211.204 47.6563 213.137 cv
44.3478 214.555 40.4657 215.241 36.618 215.241 cv
level3{
gsave
clp
[36.5029 0 0 36.5029 18.4121 204.916 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[36.5029 0 0 36.5029 18.4121 204.916 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
47.6563 207.005 mo
39.6104 210.455 28.1665 209.57 22.0952 205.03 cv
16.0244 200.489 17.625 194.012 25.6709 190.562 cv
33.7168 187.112 45.1607 187.997 51.232 192.538 cv
57.3028 197.078 55.7022 203.555 47.6563 207.005 cv
.262745 .309804 .360784 rgb
f
13.6548 155.97 mo
13.5428 155.467 13.4828 154.961 13.4741 154.456 cv
13.4726 154.455 li
13.4726 154.427 li
13.4726 154.327 li
13.4716 152.02 li
13.6177 155.179 li
13.6297 155.443 13.6421 155.707 13.6548 155.97 cv
59.6754 155.837 mo
59.6858 155.617 59.6961 155.399 59.7061 155.179 cv
59.8452 152.166 li
59.854 154.114 li
59.855 154.219 li
59.8569 154.489 li
59.8452 154.5 li
59.8285 154.947 59.7718 155.393 59.6754 155.837 cv
level3{
gsave
clp
[46.3867 0 0 46.3867 13.4702 153.151 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0901961 .12549 ]
/C1 [.0745098 .0901961 .12549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0901961 .12549 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.156863 .184314 .211765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.156863 .184314 .211765 ]
/C1 [.156863 .184314 .211765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.156863 .184314 .211765 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
]
/Bounds [.130088 .131992 .38831 .394624 .789895 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[46.3867 0 0 46.3867 13.4702 153.151 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)E.*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D+X\Zd-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jh+!)IE*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
~>
<~(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((De>B,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\-n[/+0/"t30/"t30/"t30/"t30/"t30/"t3
0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t3
0/"t30/"t30/"t.,pX`],U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
~>
<~+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<W*^.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p/N#FE2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HO2E!HO2E!HI.Oceq.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
50.6328 159.618 mo
40.4087 164.001 25.8657 162.877 18.1509 157.107 cv
10.4355 151.337 12.4702 143.106 22.6943 138.722 cv
32.9184 134.338 47.4615 135.462 55.1763 141.232 cv
62.8916 147.002 60.8575 155.234 50.6328 159.618 cv
.184314 .215686 .25098 rgb
f
39.9702 199.616 mo
37.5503 200.653 34.1079 200.387 32.2818 199.022 cv
30.4556 197.656 30.937 195.708 33.3569 194.67 cv
35.7773 193.632 39.2197 193.898 41.0454 195.264 cv
42.8715 196.629 42.3901 198.578 39.9702 199.616 cv
.34902 .411765 .478431 rgb
f
34.5565 209.043 mo
30.8795 208.809 27.3369 207.945 24.4739 206.493 cv
27.3372 207.944 30.8791 208.808 34.5565 209.043 cv
level3{
gsave
clp
[36.5029 0 0 36.5029 18.4121 204.916 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=
+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q
1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%O*\=+u9]Q1Ck]d%jNnA,;]oU1_1ff%ja%D,r?/Z1_:rk&1'4G-8lD^2A%8o&LKCJ-oMYc3"[Pu&L]UO
-o_hg3"dZ"&h,dQ.6/"i3>*i&&h>sT.le4m3>*i&'.c3Y/3=Lr3tj/,'.c3Y/isb"3ts;0'J;K^/j'h$
4;BM3'e_Za00Bt&4r#e9'eqle0g6=,4r#h:'f%rf1-cR05Sc+?(,S8l1dDg55Sc1A(,S;n2*i$95o2CE
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp
2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$9
5o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(H"Jp2*i$95o2II(cOf!2a\E@6PqaL(cOi"3(+WD6l@sP))t#%3(=cF7N"6V)*15)3_1,L8/XHZ)*1;+
4%L5N8K'Z^)EUM/4%U>R8K'`b)Eg_44\H_W9,g#e)a6q75"lnZ9H65i*'R%95#*(_:)lMo*'d7>5Y`=b
:`Vhu*C3LB5u8Rf:`Vi!*C3OC6W"jk;&r#&*CEaG6W5$n;]\>**^isK6rY3q<$"G,+%0'M7TLU#<Zae3
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q
7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#
<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+%B9Q7TLU#<Za_/*^isK6rY3q<$"G,*^ipJ6W5!m;]S5(*CEaG6W"jk;&qr"*C3OC5u8Rf:`Vhu*C3LB
5YrId:)lMo*'d7=5Y`:_:)lGk*'R%85"lnZ9H-/h)a-h54\H_W9,]rd)Eg_34\6PR8K'Z^)EUM.4%U;O
8/XHZ)*1;+3_1,L8/XHX)*15)3(=cF7N"0R))t#%3(+TC6l7jN(cOf!2a\E@6PqaL(H4\t2*i$95o2CE
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp
2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$9
5o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.130088 .146278 .38831 .404148 .789895 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[36.5029 0 0 36.5029 18.4121 204.916 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1Ng[',;8u()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$
()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$(`=;6*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@A(D[c%()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$
~>
<~+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&*Z/i,=@1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G
1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G2`a/j77BX677BX677BX677BX677BX677BX6
77BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX6
77BX677BX677BX02Dd6I1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G
~>
<~1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:^H4$Ptq5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"
5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"6V'pM<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!
<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!
<E3%!<E3%!<E3$n6U3n%5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
50.5018 192.026 mo
49.5996 191.433 48.6001 190.911 47.5262 190.463 cv
52.1263 187.854 li
51.6428 191.381 li
50.5018 192.026 li
23.2736 191.79 mo
21.7959 181.01 li
20.9937 175.157 20.3724 169.284 19.9334 163.395 cv
24.3974 166.023 30.4663 167.397 36.6049 167.397 cv
41.4945 167.397 46.4287 166.526 50.6328 164.723 cv
52.316 164.002 53.7766 163.176 55.0081 162.274 cv
54.5661 168.538 53.9175 174.786 53.0644 181.01 cv
52.9654 181.732 li
52.9 181.688 52.822 181.663 52.7413 181.663 cv
52.6759 181.663 52.6088 181.679 52.5454 181.715 cv
44.6138 186.199 li
44.4239 186.307 44.3062 186.508 44.3062 186.726 cv
44.3062 187.026 li
44.3062 187.259 44.4972 187.426 44.7058 187.426 cv
44.7714 187.426 44.8387 187.41 44.9023 187.373 cv
52.8067 182.891 li
52.323 186.419 li
46.1128 189.929 li
43.2575 188.958 39.9969 188.458 36.71 188.458 cv
32.8623 188.458 28.9793 189.144 25.6709 190.562 cv
24.7948 190.938 23.9953 191.349 23.2736 191.79 cv
.392157 .74902 .8 rgb
f
36.6122 209.109 mo
35.9246 209.109 35.2383 209.087 34.5565 209.043 cv
30.8791 208.808 27.3372 207.944 24.4739 206.493 cv
23.6155 206.058 22.8182 205.57 22.0967 205.03 cv
25.6692 207.703 31.101 209.105 36.6061 209.105 cv
37.5875 209.105 38.5709 209.06 39.5469 208.97 cv
39.5464 208.97 39.546 208.97 39.5455 208.97 cv
42.4 208.709 45.1872 208.062 47.6558 207.003 cv
44.3463 208.422 40.4612 209.109 36.6122 209.109 cv
37.3762 208.698 mo
33.7304 208.107 30.3822 206.872 27.9194 205.03 cv
25.4189 203.16 24.2207 200.96 24.2382 198.785 cv
24.2324 198.785 li
23.2736 191.79 li
23.9953 191.349 24.7948 190.938 25.6709 190.562 cv
28.9793 189.144 32.8623 188.458 36.71 188.458 cv
39.9969 188.458 43.2575 188.958 46.1128 189.929 cv
44.6138 190.777 li
44.4239 190.884 44.3062 191.085 44.3062 191.304 cv
44.3062 191.604 li
44.3062 191.837 44.4974 192.004 44.7061 192.004 cv
44.7715 192.004 44.8388 191.987 44.9023 191.951 cv
47.5262 190.463 li
48.6001 190.911 49.5996 191.433 50.5018 192.026 cv
44.6138 195.354 li
44.4239 195.461 44.3062 195.664 44.3062 195.881 cv
44.3062 196.181 li
44.3062 196.415 44.4974 196.581 44.7061 196.581 cv
44.7715 196.581 44.8388 196.565 44.9023 196.529 cv
51.4459 192.818 li
51.1554 194.937 li
51.1528 194.521 li
51.1521 194.387 51.0419 194.291 50.9217 194.291 cv
50.8838 194.291 50.8448 194.301 50.8081 194.322 cv
46.5454 196.75 li
46.3892 196.838 46.2925 197.004 46.2925 197.184 cv
46.2925 197.833 li
46.2925 197.968 46.4026 198.065 46.523 198.065 cv
46.5613 198.065 46.6006 198.055 46.6377 198.034 cv
50.9048 195.59 li
50.984 195.545 51.0478 195.48 51.0914 195.403 cv
50.944 196.479 li
44.6138 200.058 li
44.4239 200.166 44.3062 200.367 44.3062 200.584 cv
44.3062 200.885 li
44.3062 201.118 44.4977 201.285 44.7065 201.285 cv
44.7718 201.285 44.8389 201.269 44.9023 201.233 cv
50.7467 197.918 li
50.6279 198.785 li
50.6275 198.839 50.6264 198.893 50.6244 198.948 cv
46.5454 201.271 li
46.3892 201.36 46.2925 201.526 46.2925 201.706 cv
46.2925 202.356 li
46.2925 202.49 46.4031 202.587 46.5237 202.587 cv
46.5618 202.587 46.6008 202.577 46.6377 202.556 cv
50.3905 200.406 li
50.3249 200.635 50.2458 200.863 50.1533 201.088 cv
44.6138 204.22 li
44.4239 204.328 44.3062 204.529 44.3062 204.747 cv
44.3062 205.047 li
44.3062 205.28 44.4971 205.447 44.7057 205.447 cv
44.7713 205.447 44.8386 205.43 44.9023 205.394 cv
48.9219 203.115 li
48.2888 203.886 47.4823 204.619 46.5069 205.295 cv
46.1362 205.556 45.7314 205.805 45.3086 206.048 cv
44.7124 206.384 44.0645 206.708 43.3702 207.003 cv
41.517 207.798 39.483 208.358 37.3762 208.698 cv
31.1748 197.212 mo
31.1738 198.896 li
31.1777 198.896 li
31.1377 199.582 31.4951 200.278 32.2818 200.866 cv
33.357 201.67 34.9929 202.093 36.6501 202.093 cv
37.8075 202.093 38.9752 201.887 39.9702 201.46 cv
41.3262 200.878 42.0732 200.011 42.1469 199.121 cv
42.1533 199.121 li
42.1533 197.143 li
42.1532 197.143 li
42.1581 196.487 41.7974 195.826 41.0454 195.264 cv
39.9704 194.46 38.3353 194.037 36.678 194.037 cv
35.5206 194.037 34.3522 194.243 33.3569 194.67 cv
31.8983 195.295 31.1439 196.252 31.1748 197.212 cv
.203922 .462745 .576471 rgb
f
36.6049 167.397 mo
30.4663 167.397 24.3974 166.023 19.9334 163.395 cv
19.8015 161.625 19.686 159.853 19.5871 158.081 cv
24.0811 160.845 30.3051 162.291 36.6049 162.291 cv
41.4937 162.291 46.4293 161.42 50.6328 159.618 cv
52.4669 158.831 54.0371 157.921 55.3351 156.924 cv
55.2429 158.708 55.1338 160.492 55.0081 162.274 cv
53.7766 163.176 52.316 164.002 50.6328 164.723 cv
46.4287 166.526 41.4945 167.397 36.6049 167.397 cv
level3{
gsave
clp
[46.3867 0 0 46.3867 13.4702 153.151 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=
+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q
1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb%O*\=+u9]Q1CbTb
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~%O*\=+u9]Q1Ck]d%jNnA,;]oU1_1ff%ja%D,r?/Z1_:rk&1'4G-8lD^2A%8o&LKCJ-oMYc3"[Pu&L]UO
-o_hg3"dZ"&h,dQ.6/"i3>*i&&h>sT.le4m3>*i&'.c3Y/3=Lr3tj/,'.c3Y/isb"3ts;0'J;K^/j'h$
4;BM3'e_Za00Bt&4r#e9'eqle0g6=,4r#h:'f%rf1-cR05Sc+?(,S8l1dDg55Sc1A(,S;n2*i$95o2CE
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp
2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$9
5o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(H"Jp2*i$95o2II(cOf!2a\E@6PqaL(cOi"3(+WD6l@sP))t#%3(=cF7N"6V)*15)3_1,L8/XHZ)*1;+
4%L5N8K'Z^)EUM/4%U>R8K'`b)Eg_44\H_W9,g#e)a6q75"lnZ9H65i*'R%95#*(_:)lMo*'d7>5Y`=b
:`Vhu*C3LB5u8Rf:`Vi!*C3OC6W"jk;&r#&*CEaG6W5$n;]\>**^isK6rY3q<$"G,+%0'M7TLU#<Zae3
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q
7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#
<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3+%B9Q7TLU#<Zae3
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+%B9Q7TLU#<Za_/*^isK6rY3q<$"G,*^ipJ6W5!m;]S5(*CEaG6W"jk;&qr"*C3OC5u8Rf:`Vhu*C3LB
5YrId:)lMo*'d7=5Y`:_:)lGk*'R%85"lnZ9H-/h)a-h54\H_W9,]rd)Eg_34\6PR8K'Z^)EUM.4%U;O
8/XHZ)*1;+3_1,L8/XHX)*15)3(=cF7N"0R))t#%3(+TC6l7jN(cOf!2a\E@6PqaL(H4\t2*i$95o2CE
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp
2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$9
5o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE(H"Jp2*i$95o2CE
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.130088 .131992 .38831 .394624 .789895 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[46.3867 0 0 46.3867 13.4702 153.151 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1O'g()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$
()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$)'0h?*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@A(D[c%()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$
~>
<~+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&!P+X&[!1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G
1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G3^lJ+77BX677BX677BX677BX677BX677BX6
77BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX677BX6
77BX677BX677BX02Dd6I1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G1c.$G
~>
<~1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,:U?1,;*[5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"
5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"86&Yi<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!
<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!
<E3%!<E3%!<E3$n6U3n%5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"5X7S"
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
36.6049 162.291 mo
30.3051 162.291 24.0811 160.845 19.5871 158.081 cv
19.5331 157.114 19.4841 156.147 19.4399 155.179 cv
19.1103 148.043 li
13.5639 148.043 li
13.5639 148.043 li
59.7793 148.043 li
59.7793 148.043 li
55.75 148.043 li
55.42 155.179 li
55.3935 155.761 55.3652 156.342 55.3351 156.924 cv
54.0371 157.921 52.4669 158.831 50.6328 159.618 cv
46.4293 161.42 41.4937 162.291 36.6049 162.291 cv
.141176 .321569 .4 rgb
f
36.6501 202.093 mo
34.9929 202.093 33.357 201.67 32.2818 200.866 cv
31.4951 200.278 31.1377 199.582 31.1777 198.896 cv
31.1738 198.896 li
31.1748 197.212 li
31.1951 197.845 31.5564 198.479 32.2818 199.022 cv
33.357 199.826 34.9922 200.248 36.6494 200.248 cv
37.8068 200.248 38.9752 200.042 39.9702 199.616 cv
41.3936 199.005 42.1463 198.08 42.1532 197.143 cv
42.1533 197.143 li
42.1533 199.121 li
42.1469 199.121 li
42.0732 200.011 41.3262 200.878 39.9702 201.46 cv
38.9752 201.887 37.8075 202.093 36.6501 202.093 cv
level3{
gsave
clp
[10.9795 0 0 10.9795 31.1738 198.987 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.9795 0 0 10.9795 31.1738 198.987 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
36.6494 200.248 mo
34.9922 200.248 33.357 199.826 32.2818 199.022 cv
31.5564 198.479 31.1951 197.845 31.1748 197.212 cv
31.1439 196.252 31.8983 195.295 33.3569 194.67 cv
34.3522 194.243 35.5206 194.037 36.678 194.037 cv
38.3353 194.037 39.9704 194.46 41.0454 195.264 cv
41.7974 195.826 42.1581 196.487 42.1532 197.143 cv
42.1463 198.08 41.3936 199.005 39.9702 199.616 cv
38.9752 200.042 37.8068 200.248 36.6494 200.248 cv
.270588 .615686 .764706 rgb
f
44.3062 196.181 mo
44.3062 195.881 li
44.3062 195.664 44.4239 195.461 44.6138 195.354 cv
52.5454 190.871 li
52.8105 190.721 53.1391 190.911 53.1406 191.215 cv
53.1425 191.499 li
53.144 191.718 53.0263 191.921 52.8359 192.029 cv
44.9023 196.529 li
44.6363 196.679 44.3062 196.488 44.3062 196.181 cv
.156863 .184314 .211765 rgb
f
44.3062 200.885 mo
44.3062 200.584 li
44.3062 200.367 44.4239 200.166 44.6138 200.058 cv
52.5454 195.574 li
52.8105 195.424 53.1391 195.615 53.1406 195.919 cv
53.1425 196.203 li
53.144 196.422 53.0263 196.625 52.8359 196.733 cv
44.9023 201.233 li
44.6363 201.383 44.3062 201.191 44.3062 200.885 cv
f
46.2925 197.833 mo
46.2925 197.184 li
46.2925 197.004 46.3892 196.838 46.5454 196.75 cv
50.8081 194.322 li
50.9614 194.235 51.1518 194.345 51.1528 194.521 cv
51.1567 195.153 li
51.1582 195.333 51.0615 195.501 50.9048 195.59 cv
46.6377 198.034 li
46.4839 198.123 46.2925 198.011 46.2925 197.833 cv
f
44.3062 191.604 mo
44.3062 191.304 li
44.3062 191.085 44.4239 190.884 44.6138 190.777 cv
52.5454 186.293 li
52.8105 186.143 53.1391 186.333 53.1406 186.638 cv
53.1425 186.921 li
53.144 187.141 53.0263 187.343 52.8359 187.452 cv
44.9023 191.951 li
44.6363 192.102 44.3062 191.91 44.3062 191.604 cv
f
46.2925 193.256 mo
46.2925 192.607 li
46.2925 192.427 46.3892 192.261 46.5454 192.172 cv
50.8081 189.745 li
50.9614 189.657 51.1519 189.767 51.1528 189.943 cv
51.1567 190.575 li
51.1582 190.755 51.0615 190.923 50.9048 191.013 cv
46.6377 193.457 li
46.4839 193.544 46.2925 193.434 46.2925 193.256 cv
cp
f
44.3062 187.026 mo
44.3062 186.726 li
44.3062 186.508 44.4239 186.307 44.6138 186.199 cv
52.5454 181.715 li
52.8105 181.565 53.1391 181.756 53.1406 182.06 cv
53.1425 182.344 li
53.144 182.563 53.0263 182.766 52.8359 182.874 cv
44.9023 187.373 li
44.6363 187.524 44.3062 187.333 44.3062 187.026 cv
f
46.2925 188.679 mo
46.2925 188.029 li
46.2925 187.849 46.3892 187.683 46.5454 187.594 cv
50.8081 185.167 li
50.9614 185.08 51.1519 185.189 51.1528 185.366 cv
51.1567 185.998 li
51.1582 186.178 51.0615 186.345 50.9048 186.435 cv
46.6377 188.879 li
46.4839 188.967 46.2925 188.856 46.2925 188.679 cv
cp
f
44.3062 182.449 mo
44.3062 182.148 li
44.3062 181.93 44.4238 181.729 44.6138 181.622 cv
52.5454 177.138 li
52.8105 176.988 53.1392 177.178 53.1406 177.482 cv
53.1426 177.766 li
53.144 177.985 53.0264 178.188 52.8359 178.296 cv
44.9023 182.796 li
44.6362 182.947 44.3062 182.755 44.3062 182.449 cv
cp
f
46.2925 184.101 mo
46.2925 183.452 li
46.2925 183.271 46.3892 183.105 46.5454 183.017 cv
50.8081 180.589 li
50.9614 180.502 51.1519 180.612 51.1528 180.788 cv
51.1567 181.42 li
51.1582 181.601 51.0615 181.768 50.9048 181.857 cv
46.6377 184.301 li
46.4839 184.39 46.2925 184.278 46.2925 184.101 cv
cp
f
44.3062 177.871 mo
44.3062 177.571 li
44.3062 177.353 44.4238 177.151 44.6138 177.044 cv
52.5454 172.56 li
52.8105 172.41 53.1392 172.601 53.1406 172.905 cv
53.1426 173.188 li
53.144 173.408 53.0264 173.611 52.8359 173.719 cv
44.9023 178.218 li
44.6362 178.369 44.3062 178.177 44.3062 177.871 cv
cp
f
46.2925 179.523 mo
46.2925 178.874 li
46.2925 178.694 46.3892 178.528 46.5454 178.439 cv
50.8081 176.012 li
50.9614 175.924 51.1519 176.034 51.1528 176.21 cv
51.1567 176.842 li
51.1582 177.023 51.0615 177.19 50.9048 177.28 cv
46.6377 179.724 li
46.4839 179.812 46.2925 179.701 46.2925 179.523 cv
cp
f
44.3062 173.293 mo
44.3062 172.993 li
44.3062 172.775 44.4238 172.574 44.6138 172.466 cv
52.5454 167.982 li
52.8105 167.833 53.1392 168.023 53.1406 168.328 cv
53.1426 168.611 li
53.144 168.83 53.0264 169.033 52.8359 169.141 cv
44.9023 173.641 li
44.6362 173.792 44.3062 173.6 44.3062 173.293 cv
cp
f
46.2925 174.946 mo
46.2925 174.296 li
46.2925 174.117 46.3892 173.95 46.5454 173.861 cv
50.8081 171.434 li
50.9614 171.347 51.1519 171.457 51.1528 171.633 cv
51.1567 172.265 li
51.1582 172.445 51.0615 172.612 50.9048 172.702 cv
46.6377 175.146 li
46.4839 175.234 46.2925 175.123 46.2925 174.946 cv
cp
f
46.2925 202.356 mo
46.2925 201.706 li
46.2925 201.526 46.3892 201.36 46.5454 201.271 cv
50.8081 198.843 li
50.9614 198.756 51.1518 198.867 51.1528 199.042 cv
51.1567 199.674 li
51.1582 199.855 51.0615 200.022 50.9048 200.112 cv
46.6377 202.556 li
46.4839 202.644 46.2925 202.533 46.2925 202.356 cv
f
44.3062 205.047 mo
44.3062 204.747 li
44.3062 204.529 44.4239 204.328 44.6138 204.22 cv
52.5454 199.736 li
52.8105 199.586 53.1391 199.777 53.1406 200.082 cv
53.1425 200.365 li
53.144 200.584 53.0263 200.787 52.8359 200.895 cv
44.9023 205.394 li
44.6363 205.545 44.3062 205.353 44.3062 205.047 cv
f
46.2925 206.518 mo
46.2925 205.869 li
46.2925 205.688 46.3892 205.522 46.5454 205.433 cv
50.8081 203.005 li
50.9614 202.918 51.1518 203.029 51.1528 203.205 cv
51.1567 203.836 li
51.1582 204.017 51.0615 204.184 50.9048 204.274 cv
46.6377 206.718 li
46.4839 206.806 46.2925 206.695 46.2925 206.518 cv
f
49.3957 206.159 mo
49.5166 206.092 49.6355 206.025 49.7526 205.957 cv
49.7002 205.987 49.6476 206.018 49.5947 206.048 cv
49.529 206.085 49.4627 206.122 49.3957 206.159 cv
50.1315 205.729 mo
50.3081 205.62 50.4798 205.509 50.6469 205.396 cv
50.4809 205.509 50.3085 205.62 50.1315 205.729 cv
level3{
gsave
clp
[36.5029 0 0 36.5029 18.4121 204.916 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m
=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'
A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~869=m=(Fj'A4Tg586BFo=Ck$*AOop786KLq=_10-AP$$:8QfXs>%U?0AkH6=8m5h!>@pK3BM)KB8m>t%
>A-Z7BM2TD93c.'>\Hc8BM2ZF93u:)?>)u<BM2ZF93u@+?><,>C.hlJ93u@+?trACC.r#N9OMX0?u&GE
CJA5Q9jqg3@;ASGCe\AT9k%p5@VebJCe\DU9k/!6@r>"NDGF\Z:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<
ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7S
DGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~:1\<<ASt7SDGFh`:M4WBB5gXZE)1+c:M4ZCBQ6j^EDU=g:hXiFBQ?p_E_pIj:harHBlm0cFAQ[n:hb#J
C339eF\umr;/15NC3<BhF\upt;/:>QCN`TkG#E+!;J^PTCj/cnG>`7$;J^PTCj8iqGZ&F(;Jp_XDKo)t
H;e^-;f6n[DL,6!H;e^.;f6q\E-kN&HW+m2;fI+_E-tW(HrP*5<,m=cEICf+I8k37<H3FeEdh#/IT:E;
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<Og
Edh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/
IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~<H<OgEdh#/IT:B9<,m=cEICf+I8k37<,m:bE-tT'HrG!3;fI+_E-kN&HW+g/;f6q\DL,6!H;e^-;f6n[
DL,6!GZ&F(;Jp_WDKo&qGZ&@%;J^PTCj/cnG>`7$;JUGRCN`TkG#<$u;/:>PCNWKhF\umr;/15MC3<?f
FAQ[n:hb#JBlm0cFAQ[l:harHBQ?p_E_pFh:hXiFBQ6g]EDL4e:M4WBB5gXZE)1+c:1nN@ASt7SDGFb\
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<
ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7S
DGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.130088 .146278 .38831 .404148 .789895 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[36.5029 0 0 36.5029 18.4121 204.916 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6*B92/,T9he>V9he>V9he>V9he>V9he>V9he>V
9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V:Jaqf<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr
<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr
<)cgr<)cgr<)cgo:/+GW9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V
~>
<~<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W=,?t<eYA7T4]A7T4]A7T4]A7T4]A7T4]A7T4]
A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]B5)4%EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u8An5F_A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]
~>
<~@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0(_C2Ig)D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,
D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,E--;OI=6NlI=6NlI=6NlI=6NlI=6NlI=6Nl
I=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6Nl
I=6NlI=6NlI=6NfE,BH/D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
54.9148 198.776 mo
54.9269 196.688 53.8245 194.584 51.5323 192.769 cv
52.8359 192.029 li
53.0263 191.921 53.144 191.718 53.1425 191.499 cv
53.1406 191.215 li
53.1395 190.984 52.9491 190.818 52.7413 190.818 cv
52.676 190.818 52.6089 190.835 52.5454 190.871 cv
51.6428 191.381 li
52.1263 187.854 li
52.8359 187.452 li
53.0263 187.343 53.144 187.141 53.1425 186.921 cv
53.1406 186.638 li
53.1395 186.406 52.9491 186.241 52.7413 186.241 cv
52.6759 186.241 52.6088 186.257 52.5454 186.293 cv
52.323 186.419 li
52.8067 182.891 li
52.8359 182.874 li
53.0263 182.766 53.144 182.563 53.1425 182.344 cv
53.1406 182.06 li
53.1399 181.919 53.0684 181.802 52.9654 181.732 cv
53.0644 181.01 li
53.9175 174.786 54.5661 168.538 55.0081 162.274 cv
57.5971 160.378 59.1734 158.145 59.6754 155.837 cv
59.2723 164.257 58.4955 172.656 57.3501 181.01 cv
54.9148 198.776 li
59.8452 152.166 mo
59.8341 149.7 li
59.8773 149.148 59.8594 148.595 59.7793 148.043 cv
60.0356 148.043 li
59.8452 152.166 li
.537255 .807843 .847059 rgb
f
39.5455 208.97 mo
38.814 208.904 38.0893 208.813 37.3762 208.698 cv
39.483 208.358 41.517 207.798 43.3702 207.003 cv
44.0645 206.708 44.7124 206.384 45.3086 206.048 cv
45.7314 205.805 46.1362 205.556 46.5069 205.295 cv
47.4823 204.619 48.2888 203.886 48.9219 203.115 cv
52.8359 200.895 li
53.0263 200.787 53.144 200.584 53.1425 200.365 cv
53.1406 200.082 li
53.1395 199.85 52.9488 199.684 52.7409 199.684 cv
52.6757 199.684 52.6087 199.7 52.5454 199.736 cv
50.1533 201.088 li
50.2458 200.863 50.3249 200.635 50.3905 200.406 cv
50.9048 200.112 li
51.0615 200.022 51.1582 199.855 51.1567 199.674 cv
51.1528 199.042 li
51.1521 198.909 51.0417 198.813 50.9215 198.813 cv
50.8836 198.813 50.8448 198.822 50.8081 198.843 cv
50.6244 198.948 li
50.6264 198.893 50.6275 198.839 50.6279 198.785 cv
50.7467 197.918 li
52.8359 196.733 li
53.0263 196.625 53.144 196.422 53.1425 196.203 cv
53.1406 195.919 li
53.1395 195.687 52.9488 195.522 52.7409 195.522 cv
52.6757 195.522 52.6087 195.538 52.5454 195.574 cv
50.944 196.479 li
51.0914 195.403 li
51.1342 195.328 51.1575 195.242 51.1567 195.153 cv
51.1554 194.937 li
51.4459 192.818 li
51.5323 192.769 li
53.8245 194.584 54.9269 196.688 54.9148 198.776 cv
54.9135 198.785 li
54.896 201.117 53.4897 203.426 50.7925 205.295 cv
50.7445 205.329 50.696 205.363 50.6469 205.396 cv
50.4798 205.509 50.3081 205.62 50.1315 205.729 cv
50.0074 205.806 49.8809 205.882 49.7526 205.957 cv
49.6355 206.025 49.5166 206.092 49.3957 206.159 cv
48.855 206.455 48.2736 206.74 47.6558 207.003 cv
47.6558 207.003 li
45.1872 208.062 42.4 208.709 39.5455 208.97 cv
50.9215 202.975 mo
50.8836 202.975 50.8448 202.985 50.8081 203.005 cv
46.5454 205.433 li
46.3892 205.522 46.2925 205.688 46.2925 205.869 cv
46.2925 206.518 li
46.2925 206.652 46.4031 206.749 46.5237 206.749 cv
46.5618 206.749 46.6008 206.739 46.6377 206.718 cv
50.9048 204.274 li
51.0615 204.184 51.1582 204.017 51.1567 203.836 cv
51.1528 203.205 li
51.1521 203.071 51.0417 202.975 50.9215 202.975 cv
.396078 .592157 .678431 rgb
f
55.0081 162.274 mo
55.1338 160.492 55.2429 158.708 55.3351 156.924 cv
58.1038 154.796 59.6329 152.27 59.8341 149.7 cv
59.8452 152.166 li
59.7061 155.179 li
59.6961 155.399 59.6858 155.617 59.6754 155.837 cv
59.1734 158.145 57.5971 160.378 55.0081 162.274 cv
level3{
gsave
clp
[46.3867 0 0 46.3867 13.4702 153.151 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m
=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'
A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4869=m=(Fj'A4Td4
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~869=m=(Fj'A4Tg586BFo=Ck$*AOop786KLq=_10-AP$$:8QfXs>%U?0AkH6=8m5h!>@pK3BM)KB8m>t%
>A-Z7BM2TD93c.'>\Hc8BM2ZF93u:)?>)u<BM2ZF93u@+?><,>C.hlJ93u@+?trACC.r#N9OMX0?u&GE
CJA5Q9jqg3@;ASGCe\AT9k%p5@VebJCe\DU9k/!6@r>"NDGF\Z:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<
ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7S
DGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~:1\<<ASt7SDGFh`:M4WBB5gXZE)1+c:M4ZCBQ6j^EDU=g:hXiFBQ?p_E_pIj:harHBlm0cFAQ[n:hb#J
C339eF\umr;/15NC3<BhF\upt;/:>QCN`TkG#E+!;J^PTCj/cnG>`7$;J^PTCj8iqGZ&F(;Jp_XDKo)t
H;e^-;f6n[DL,6!H;e^.;f6q\E-kN&HW+m2;fI+_E-tW(HrP*5<,m=cEICf+I8k37<H3FeEdh#/IT:E;
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<Og
Edh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/
IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;<H<OgEdh#/IT:E;
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~<H<OgEdh#/IT:B9<,m=cEICf+I8k37<,m:bE-tT'HrG!3;fI+_E-kN&HW+g/;f6q\DL,6!H;e^-;f6n[
DL,6!GZ&F(;Jp_WDKo&qGZ&@%;J^PTCj/cnG>`7$;JUGRCN`TkG#<$u;/:>PCNWKhF\umr;/15MC3<?f
FAQ[n:hb#JBlm0cFAQ[l:harHBQ?p_E_pFh:hXiFBQ6g]EDL4e:M4WBB5gXZE)1+c:1nN@ASt7SDGFb\
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<
ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7S
DGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\:1\<<ASt7SDGFb\
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.130088 .131992 .38831 .394624 .789895 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[46.3867 0 0 46.3867 13.4702 153.151 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>7n69J9he>V9he>V9he>V9he>V9he>V9he>V9he>V
9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V:fLCn<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr
<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr<)cgr
<)cgr<)cgr<)cgo:/+GW9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V9he>V
~>
<~<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`W7%<`WaAA7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]
A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]BlS-4EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<EH,u<
EH,u<EH,u<EH,u8An5F_A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]A7T4]
~>
<~@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@q0@mD/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,
D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,FFARcI=6NlI=6NlI=6NlI=6NlI=6NlI=6Nl
I=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6Nl
I=6NlI=6NlI=6NfE,BH/D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,D/F-,
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
55.3351 156.924 mo
55.3652 156.342 55.3935 155.761 55.42 155.179 cv
55.75 148.043 li
59.7793 148.043 li
59.8594 148.595 59.8773 149.148 59.8341 149.7 cv
59.6329 152.27 58.1038 154.796 55.3351 156.924 cv
.345098 .482353 .545098 rgb
f
51.4459 192.818 mo
51.6428 191.381 li
52.5454 190.871 li
52.6089 190.835 52.676 190.818 52.7413 190.818 cv
52.9491 190.818 53.1395 190.984 53.1406 191.215 cv
53.1425 191.499 li
53.144 191.718 53.0263 191.921 52.8359 192.029 cv
51.5323 192.769 li
51.4459 192.818 li
.356863 .380392 .4 rgb
f
50.7467 197.918 mo
50.944 196.479 li
52.5454 195.574 li
52.6087 195.538 52.6757 195.522 52.7409 195.522 cv
52.9488 195.522 53.1395 195.687 53.1406 195.919 cv
53.1425 196.203 li
53.144 196.422 53.0263 196.625 52.8359 196.733 cv
50.7467 197.918 li
f
51.0914 195.403 mo
51.1554 194.937 li
51.1567 195.153 li
51.1575 195.242 51.1342 195.328 51.0914 195.403 cv
f
52.1263 187.854 mo
52.323 186.419 li
52.5454 186.293 li
52.6088 186.257 52.6759 186.241 52.7413 186.241 cv
52.9491 186.241 53.1395 186.406 53.1406 186.638 cv
53.1425 186.921 li
53.144 187.141 53.0263 187.343 52.8359 187.452 cv
52.1263 187.854 li
f
52.8067 182.891 mo
52.9654 181.732 li
53.0684 181.802 53.1399 181.919 53.1406 182.06 cv
53.1425 182.344 li
53.144 182.563 53.0263 182.766 52.8359 182.874 cv
52.8067 182.891 li
f
50.3905 200.406 mo
50.5289 199.924 50.6072 199.437 50.6244 198.948 cv
50.8081 198.843 li
50.8448 198.822 50.8836 198.813 50.9215 198.813 cv
51.0417 198.813 51.1521 198.909 51.1528 199.042 cv
51.1567 199.674 li
51.1582 199.855 51.0615 200.022 50.9048 200.112 cv
50.3905 200.406 li
f
48.9219 203.115 mo
49.4574 202.462 49.8688 201.783 50.1533 201.088 cv
52.5454 199.736 li
52.6087 199.7 52.6757 199.684 52.7409 199.684 cv
52.9488 199.684 53.1395 199.85 53.1406 200.082 cv
53.1425 200.365 li
53.144 200.584 53.0263 200.787 52.8359 200.895 cv
48.9219 203.115 li
f
46.5237 206.749 mo
46.4031 206.749 46.2925 206.652 46.2925 206.518 cv
46.2925 205.869 li
46.2925 205.688 46.3892 205.522 46.5454 205.433 cv
50.8081 203.005 li
50.8448 202.985 50.8836 202.975 50.9215 202.975 cv
51.0417 202.975 51.1521 203.071 51.1528 203.205 cv
51.1567 203.836 li
51.1582 204.017 51.0615 204.184 50.9048 204.274 cv
46.6377 206.718 li
46.6008 206.739 46.5618 206.749 46.5237 206.749 cv
f
18.4124 198.785 mo
18.4101 198.785 li
15.9731 181.01 li
14.8342 172.7 14.0596 164.346 13.6548 155.97 cv
14.1436 158.168 15.6228 160.322 18.1509 162.213 cv
18.7107 162.632 19.3059 163.026 19.9334 163.395 cv
20.3724 169.284 20.9937 175.157 21.7959 181.01 cv
23.2736 191.79 li
20.0957 193.732 18.4301 196.246 18.4124 198.785 cv
13.4716 152.02 mo
13.2876 148.043 li
13.5639 148.043 li
13.5044 148.418 13.4732 148.794 13.4705 149.17 cv
13.4702 149.17 li
13.4716 152.02 li
.34902 .666667 .713725 rgb
f
36.6061 209.105 mo
31.101 209.105 25.6692 207.703 22.0967 205.03 cv
22.0967 205.03 li
19.6162 203.174 18.4172 200.995 18.4158 198.836 cv
18.4158 198.819 18.4159 198.802 18.416 198.785 cv
18.416 198.785 li
18.416 198.785 li
18.4124 198.785 li
18.4301 196.246 20.0957 193.732 23.2736 191.79 cv
24.2324 198.785 li
24.2382 198.785 li
24.2207 200.96 25.4189 203.16 27.9194 205.03 cv
30.3822 206.872 33.7304 208.107 37.3762 208.698 cv
36.4071 208.854 35.4226 208.964 34.4331 209.029 cv
35.1586 209.078 35.89 209.103 36.6221 209.103 cv
37.5977 209.103 38.5755 209.059 39.5455 208.97 cv
39.546 208.97 39.5464 208.97 39.5469 208.97 cv
38.5709 209.06 37.5875 209.105 36.6061 209.105 cv
.180392 .411765 .513725 rgb
f
19.9334 163.395 mo
19.3059 163.026 18.7107 162.632 18.1509 162.213 cv
15.6228 160.322 14.1436 158.168 13.6548 155.97 cv
13.6421 155.707 13.6297 155.443 13.6177 155.179 cv
13.4716 152.02 li
13.4702 149.17 li
13.4705 149.17 li
13.4508 151.94 14.9746 154.732 18.1509 157.107 cv
18.6067 157.448 19.0859 157.773 19.5871 158.081 cv
19.686 159.853 19.8015 161.625 19.9334 163.395 cv
level3{
gsave
clp
[46.3867 0 0 46.3867 13.4702 153.151 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/
*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA
/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P$m$u/*\@dA/IW[P
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~$m$u/*\@dA/I`dR%3I23+"e!E/e&mT%3[>6+YF6J/e0$Y%O!M9+tsKN0Fo?]%jE\<,VT`S1(PWc%jWnA
,VfoV1(Y]d&0s"B,VouW1Ctlh&101E-8Q2[1Ctlh&LTFJ-T)J`2%_2n&LTFJ.5__e2%h>q&h,[N.5__f
2%qGs'.PjQ.Q%kh2\R`$'.c'U/2n4n2\Rc%'.l-V/NFIr3>=&*'J;B[/iaUu3>=)+'J;E\000e#3YX5.
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]
000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#
3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~'JDK]000e#3YX;2'eqfc0g$1*4;BS5'eqid1-HC.4Vfe9(,A#g1-QI/4r,t=(,S2j1dDg55Sc1A(,S8l
2*_p75o2CE(H"Jp2*i$:5o2FH(H+Vt2FA<>6Pq^K(cOi"2aeKA6l@pO))jr$2anTE72\*S)*(,(3COiH
7iFEY)ELA,3_()L7iFEZ)ELD-4@gAQ8/aT_)E^V14A$PT8fKoc)a-h54\H_W9,g#e*'Hq75#!"\9cQ>k
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:
5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\
9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k*'R(:5#!"\9cQ>k
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~*'R(:5#!"\9cQ;h)a-h54\H_W9,g#e)a-e44A$MS8fBfa)E^V14@gAQ8/aN[)ELD-3_()L7iFEY)ELA,
3CauJ72\*S)*(,'3COfE72\$P))jr#2aeKA6l7jN(cF_u2FA<>6PhXJ(H+Vs2F/-:5o2CE(H"Jo2*i!8
5Sc1A(,S8l1dDg55Sc1?(,S2j1-QI/4r,n:(,A#g1-H@-4V]\7'eqfc0g$1*4;BS5'JV]a000e#3YX5.
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]
000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#
3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.'JDK]000e#3YX5.
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.130088 .131992 .38831 .394624 .789895 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[46.3867 0 0 46.3867 13.4702 153.151 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[U]',)#m',)#m',)#m',)#m',)#m',)#m',)#m
',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m()n23)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8
)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8)]K_8
)]K_8)]K_8)]K_5'GD,n',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m
~>
<~*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??ab/hSb//hSb//hSb//hSb//hSb//hSb//hSb/
/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/1d*ub4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk
4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk
4Ztqk4Ztqk4Ztqf0J4t1/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb/
~>
<~/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`>'/1`eA3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[
3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[5YOjF9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R
9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R9MA,R
9MA,R9MA,R9MA,J4?5D^3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[3B9)[
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
19.5871 158.081 mo
19.0859 157.773 18.6067 157.448 18.1509 157.107 cv
14.9746 154.732 13.4508 151.94 13.4705 149.17 cv
13.4732 148.794 13.5044 148.418 13.5639 148.043 cv
19.1103 148.043 li
19.4399 155.179 li
19.4841 156.147 19.5331 157.114 19.5871 158.081 cv
.12549 .286274 .356863 rgb
f
36.6221 209.103 mo
35.89 209.103 35.1586 209.078 34.4331 209.029 cv
35.4226 208.964 36.4071 208.854 37.3762 208.698 cv
38.0893 208.813 38.814 208.904 39.5455 208.97 cv
38.5755 209.059 37.5977 209.103 36.6221 209.103 cv
.352941 .52549 .603922 rgb
f
50.7427 158.574 mo
40.438 162.992 25.7808 161.859 18.0054 156.043 cv
10.2295 150.228 12.2798 141.932 22.5845 137.514 cv
32.8892 133.096 47.5464 134.229 55.3218 140.044 cv
63.0977 145.859 61.0474 154.155 50.7427 158.574 cv
cp
.831373 .447059 0 rgb
f
60.9863 148.708 mo
60.9858 148.598 li
60.959 145.045 li
60.4287 145.792 li
59.7041 143.908 58.27 142.081 56.0796 140.442 cv
47.9883 134.391 32.7358 133.212 22.0127 137.81 cv
17.022 139.95 13.8945 142.964 12.7896 146.185 cv
12.3384 145.771 li
12.3408 148.821 li
12.3408 148.926 li
12.3413 148.956 li
12.3423 148.956 li
12.3911 151.798 13.9883 154.655 17.2476 157.092 cv
25.3389 163.144 40.5913 164.322 51.3145 159.725 cv
57.5039 157.071 60.8242 153.073 60.9761 149.003 cv
60.9888 148.991 li
60.9863 148.708 li
cp
level3{
gsave
clp
[48.6504 0 0 48.6504 12.3384 148.767 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.6504 0 0 48.6504 12.3384 148.767 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
51.3145 156.729 mo
40.5913 161.327 25.3389 160.148 17.2476 154.096 cv
9.15576 148.044 11.2896 139.412 22.0127 134.814 cv
32.7358 130.216 47.9883 131.395 56.0796 137.447 cv
64.1714 143.499 62.0381 152.131 51.3145 156.729 cv
cp
.184314 .215686 .25098 rgb
f
42.6733 150.48 mo
38.2749 152.366 32.0181 151.883 28.6992 149.4 cv
25.3799 146.918 26.2549 143.377 30.6538 141.491 cv
35.0522 139.605 41.3091 140.088 44.6279 142.571 cv
47.9473 145.053 47.0723 148.595 42.6733 150.48 cv
cp
.0745098 .0901961 .12549 rgb
f
45.583 145.53 mo
45.5825 145.49 li
45.5728 142.496 li
45.3784 142.77 li
45.1128 142.079 44.5869 141.409 43.7837 140.808 cv
40.8164 138.589 35.2231 138.157 31.291 139.843 cv
29.4609 140.627 28.314 141.733 27.9092 142.914 cv
27.7437 142.762 li
27.7441 145.571 li
27.7441 145.61 li
27.7446 145.621 li
27.7451 145.621 li
27.7627 146.663 28.3486 147.71 29.5435 148.604 cv
32.5107 150.824 38.104 151.256 42.0361 149.57 cv
44.3057 148.597 45.5234 147.13 45.5791 145.638 cv
45.5835 145.634 li
45.583 145.53 li
cp
level3{
gsave
clp
[17.8398 0 0 17.8398 27.7437 144.707 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[17.8398 0 0 17.8398 27.7437 144.707 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
42.0361 146.78 mo
38.104 148.466 32.5107 148.034 29.5435 145.815 cv
26.5767 143.596 27.3589 140.43 31.291 138.744 cv
35.2231 137.058 40.8164 137.491 43.7837 139.709 cv
46.751 141.929 45.9683 145.095 42.0361 146.78 cv
cp
.262745 .309804 .360784 rgb
f
48.7246 234.264 mo
54.02 231.167 li
55.3984 235.205 li
50.1021 238.303 li
48.7246 234.264 li
cp
.45098 .0666667 .0627451 rgb
f
49.1919 234.382 mo
53.6343 231.79 li
54.4009 232.123 li
54.6318 234.705 li
50.9556 237.631 li
50.189 237.298 li
49.1919 234.382 li
cp
.0745098 .0901961 .12549 rgb
f
49.9585 234.715 mo
54.4009 232.123 li
55.3984 235.038 li
50.9556 237.631 li
49.9585 234.715 li
cp
.141176 .164706 .188235 rgb
f
53.6343 231.79 mo
54.4009 232.123 li
49.9585 234.715 li
49.1919 234.382 li
53.6343 231.79 li
cp
.262745 .309804 .360784 rgb
f
51.0078 240.704 mo
56.3027 237.605 li
57.6816 241.643 li
52.3853 244.742 li
51.0078 240.704 li
cp
.45098 .0666667 .0627451 rgb
f
51.4751 240.821 mo
55.9175 238.229 li
56.6841 238.561 li
56.915 241.144 li
53.2383 244.07 li
52.4717 243.737 li
51.4751 240.821 li
cp
.0745098 .0901961 .12549 rgb
f
52.2417 241.154 mo
56.6841 238.561 li
57.6816 241.477 li
53.2383 244.07 li
52.2417 241.154 li
cp
.141176 .164706 .188235 rgb
f
55.9175 238.229 mo
56.6841 238.561 li
52.2417 241.154 li
51.4751 240.821 li
55.9175 238.229 li
cp
.262745 .309804 .360784 rgb
f
53.2905 247.142 mo
58.5859 244.044 li
59.9644 248.083 li
54.6685 251.181 li
53.2905 247.142 li
cp
.45098 .0666667 .0627451 rgb
f
53.7583 247.26 mo
58.2007 244.667 li
58.9673 245 li
59.1978 247.583 li
55.5215 250.508 li
54.7549 250.176 li
53.7583 247.26 li
cp
.0745098 .0901961 .12549 rgb
f
54.5249 247.593 mo
58.9673 245 li
59.9644 247.916 li
55.5215 250.508 li
54.5249 247.593 li
cp
.141176 .164706 .188235 rgb
f
58.2007 244.667 mo
58.9673 245 li
54.5249 247.593 li
53.7583 247.26 li
58.2007 244.667 li
cp
.262745 .309804 .360784 rgb
f
71.707 230.517 mo
72.8618 234.375 71.6606 238.856 69.0244 240.526 cv
66.3882 242.196 63.3154 240.423 62.1606 236.566 cv
61.0059 232.708 62.207 228.227 64.8433 226.557 cv
67.4795 224.886 70.5522 226.66 71.707 230.517 cv
cp
.45098 .0666667 .0627451 rgb
f
71.9355 226.794 mo
72.0508 226.217 li
71.8262 226.086 71.415 225.862 71.1802 225.776 cv
69.3096 225.353 li
68.2065 225.055 66.9072 225.208 65.8188 225.898 cv
63.1826 227.568 61.9814 232.049 63.1362 235.907 cv
63.7979 238.118 64.8965 238.955 66.3755 239.54 cv
68.6211 240.572 li
68.6465 240.199 li
68.9971 240.095 69.3452 239.939 69.686 239.723 cv
72.3223 238.053 73.5234 233.572 72.3687 229.714 cv
72.0732 228.727 71.6504 227.878 71.1431 227.187 cv
71.9355 226.794 li
cp
level3{
gsave
clp
[-1.66127 15.1423 -18.1244 -5.71331 68.8535 222.767 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.262745 .309804 .360784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.262745 .309804 .360784 ]
/C1 [.262745 .309804 .360784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.262745 .309804 .360784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.0745098 .0901961 .12549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0901961 .12549 ]
/C1 [.0745098 .0901961 .12549 ]
/N 1 
>>
]
/Bounds [.202174 .205343 .595852 .602166 .853722 .869912 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.66127 15.1423 -18.1244 -5.71331 68.8535 222.767 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D.76Hi6UO4.6UO4.
6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.
6UO4.6UO4.6UO4.6UO4.6UO4.6UO4.6T?51*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@B)Aa)$',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m
~>
<~,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\0MbJ?:JXb^:JXb^
:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^
:JXb^:JXb^:JXb^:JXb^:JXb^:JXb^:I6HT,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=WZ*ul.7(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl(
~>
<~.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p3*]]n>[1N=>[1N=
>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=
>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=>YQe!.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\o,pOQU+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
74.6655 230.119 mo
75.8203 233.977 74.6191 238.458 71.9829 240.128 cv
69.3467 241.798 66.2739 240.026 65.1191 236.167 cv
63.9644 232.31 65.1655 227.83 67.8018 226.159 cv
70.438 224.489 73.5107 226.261 74.6655 230.119 cv
cp
.141176 .164706 .188235 rgb
f
23.3818 199.74 mo
23.3008 199.924 23.1963 200.07 23.0752 200.179 cv
22.936 200.29 li
22.9243 200.301 li
19.8452 202.732 li
19.1274 203.299 18.2939 203.658 17.4316 203.78 cv
16.5635 203.907 15.6665 203.802 14.8101 203.467 cv
13.1025 202.784 11.9277 201.296 11.667 199.473 cv
8.09619 175.419 li
7.72021 172.832 8.76172 170.216 10.8105 168.595 cv
16.4248 164.173 li
16.5693 164.052 li
16.5869 164.041 li
17.0498 163.751 17.6636 163.959 18.1611 164.654 cv
18.8555 165.626 19.0698 167.171 18.6475 168.121 cv
18.5664 168.3 18.4619 168.451 18.3403 168.555 cv
18.2017 168.671 li
18.1899 168.676 li
13.6758 172.23 li
12.9233 172.832 12.5352 173.799 12.6743 174.753 cv
16.2456 198.808 li
16.2744 198.975 16.3667 199.097 16.5288 199.161 cv
16.6445 199.19 li
16.7603 199.212 16.876 199.178 16.9805 199.097 cv
18.9658 197.535 li
18.9712 197.529 li
21.1362 195.821 li
21.3501 195.648 li
21.8076 195.375 22.4038 195.589 22.8955 196.279 cv
23.0518 196.522 li
23.1675 196.718 23.2603 196.926 23.3413 197.147 cv
23.6597 198.027 23.6943 199.045 23.3818 199.74 cv
cp
.184314 .215686 .25098 rgb
f
23.3413 197.147 mo
22.936 196.782 22.4961 196.701 22.1431 196.916 cv
21.9292 197.083 li
20.8984 197.905 19.8511 198.917 18.5835 199.34 cv
18.0859 199.502 17.542 199.554 17.0439 199.416 cv
16.7954 199.317 li
16.6445 199.19 li
16.7603 199.212 16.876 199.178 16.9805 199.097 cv
19.2524 197.267 li
19.9932 196.607 21.3501 195.648 21.3501 195.648 cv
21.8076 195.375 22.4038 195.589 22.8955 196.279 cv
23.0518 196.522 li
23.1675 196.718 23.2603 196.926 23.3413 197.147 cv
cp
.262745 .309804 .360784 rgb
f
12.46 200.736 mo
8.88965 176.682 li
8.51318 174.093 9.55469 171.479 11.606 169.86 cv
17.2212 165.435 li
17.3677 165.314 li
17.3838 165.306 li
17.7402 165.078 18.189 165.155 18.6055 165.525 cv
18.4922 165.21 18.3452 164.913 18.1626 164.657 cv
17.6631 163.957 17.0479 163.748 16.5879 164.043 cv
16.5718 164.051 li
16.4253 164.172 li
10.8105 168.597 li
8.75879 170.216 7.71777 172.83 8.09375 175.419 cv
11.6646 199.472 li
11.8066 200.452 12.2192 201.329 12.8291 202.042 cv
12.6523 201.633 12.5269 201.195 12.46 200.736 cv
cp
f
342.332 253.177 mo
331.68 253.177 321.166 250.458 314.255 245.29 cv
309.198 241.507 306.901 237.031 307.16 232.626 cv
307.134 232.626 li
307.139 229.214 li
307.262 233.288 309.584 237.375 314.255 240.869 cv
321.167 246.039 331.678 248.756 342.332 248.756 cv
349.77 248.756 357.279 247.43 363.675 244.688 cv
372.732 240.805 377.565 234.936 377.705 228.978 cv
377.708 234.072 li
377.667 234.071 li
377.193 239.795 372.392 245.372 363.675 249.109 cv
357.278 251.851 349.772 253.177 342.332 253.177 cv
level3{
gsave
clp
[70.5742 0 0 70.5742 307.134 236.93 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .74902 .74902 ]
/C1 [.74902 .74902 .74902 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .74902 .74902 ]
/C1 [.8 .8 .8 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.8 .8 .8 ]
/C1 [.8 .8 .8 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.8 .8 .8 ]
/C1 [.85098 .85098 .85098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.85098 .85098 .85098 ]
/C1 [.85098 .85098 .85098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.85098 .85098 .85098 ]
/C1 [.8 .8 .8 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.8 .8 .8 ]
/C1 [.8 .8 .8 ]
/N 1 
>>
]
/Bounds [.177707 .193897 .469263 .475577 .780371 .78354 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[70.5742 0 0 70.5742 307.134 236.93 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@S%`lcNLbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;TbgP1tg"G'3
g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3
g"G'3g"G'3e]c7]bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@S%`lcNLbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;TbgP1tg"G'3
g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3
g"G'3g"G'3e]c7]bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@S%`lcNLbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;TbgP1tg"G'3
g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3
g"G'3g"G'3e]c7]bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
363.675 244.688 mo
348.119 251.358 325.993 249.648 314.255 240.869 cv
302.517 232.09 305.612 219.567 321.168 212.898 cv
336.724 206.228 358.85 207.938 370.587 216.716 cv
382.325 225.496 379.23 238.019 363.675 244.688 cv
.921569 .921569 .921569 rgb
f
374.892 225.979 mo
374.892 226.184 li
374.883 226.363 li
374.883 226.46 374.883 226.568 374.864 226.657 cv
374.864 226.827 374.847 226.996 374.829 227.166 cv
373.839 237.686 359.708 246.031 342.42 246.031 cv
336.099 246.031 330.188 244.917 325.194 242.982 cv
316.028 239.442 309.931 233.148 309.931 225.979 cv
309.931 225.81 309.948 225.649 309.948 225.48 cv
309.939 224.696 309.957 223.884 310.046 223.01 cv
310.046 222.93 li
310.367 213.684 314.816 205.588 321.646 200.204 cv
321.646 200.195 li
322.118 199.829 322.6 199.472 323.09 199.133 cv
323.206 199.053 323.314 198.973 323.429 198.902 cv
323.875 198.599 324.329 198.304 324.784 198.019 cv
324.953 197.913 li
325.497 197.591 326.06 197.27 326.621 196.976 cv
326.701 196.94 li
326.853 196.86 li
327.352 196.611 327.86 196.361 328.368 196.138 cv
328.528 196.067 li
329.59 195.594 330.678 195.184 331.792 194.836 cv
331.935 194.783 332.077 194.738 332.22 194.693 cv
332.318 194.667 li
335.225 193.793 338.31 193.303 341.511 193.276 cv
342.187 193.267 342.865 193.276 343.552 193.312 cv
344.765 193.365 345.959 193.49 347.136 193.686 cv
347.198 193.695 li
347.412 193.713 347.626 193.766 347.841 193.793 cv
348.126 193.855 li
348.482 193.918 348.839 193.989 349.186 194.069 cv
349.508 194.149 349.829 194.23 350.141 194.292 cv
350.168 194.301 li
350.712 194.444 351.255 194.586 351.79 194.756 cv
352.04 194.836 352.29 194.916 352.521 194.997 cv
353.297 195.255 354.037 195.523 354.786 195.843 cv
355.151 195.977 355.508 196.138 355.865 196.307 cv
355.945 196.343 li
356.293 196.503 356.641 196.672 356.979 196.842 cv
357.345 197.021 357.692 197.216 358.058 197.404 cv
358.949 197.894 359.823 198.42 360.671 198.999 cv
360.929 199.161 361.179 199.33 361.419 199.508 cv
361.535 199.588 361.643 199.668 361.758 199.757 cv
362.008 199.927 362.249 200.115 362.48 200.301 cv
363.318 200.935 364.121 201.63 364.896 202.352 cv
365.262 202.7 365.637 203.075 366.002 203.458 cv
371.727 209.369 375.159 217.339 374.892 225.979 cv
.403922 .662745 .811765 rgb
f
356.686 239.363 mo
351.542 239.363 346.673 235.816 344.426 229.748 cv
341.311 221.338 344.412 211.274 351.352 207.267 cv
352.581 206.557 353.849 206.085 355.12 205.836 cv
354.564 206.058 354.013 206.325 353.469 206.639 cv
346.529 210.646 343.429 220.71 346.543 229.12 cv
348.79 235.188 353.659 238.735 358.804 238.735 cv
358.963 238.735 359.123 238.732 359.283 238.725 cv
359.458 238.733 359.632 238.737 359.807 238.737 cv
360.022 238.737 360.239 238.731 360.456 238.718 cv
359.206 239.153 357.937 239.363 356.686 239.363 cv
.305882 .505882 .615686 rgb
f
366.002 203.46 mo
365.64 203.075 365.266 202.702 364.893 202.35 cv
364.123 201.626 363.319 200.936 362.482 200.302 cv
362.245 200.11 362.007 199.929 361.758 199.759 cv
361.644 199.668 361.532 199.589 361.419 199.51 cv
361.182 199.33 360.933 199.16 360.672 199.001 cv
359.823 198.424 358.952 197.892 358.058 197.406 cv
357.696 197.213 357.345 197.021 356.983 196.839 cv
356.644 196.67 356.293 196.5 355.942 196.342 cv
355.862 196.308 li
355.512 196.138 355.149 195.98 354.788 195.844 cv
354.041 195.527 353.294 195.255 352.524 194.996 cv
352.287 194.916 352.038 194.837 351.789 194.758 cv
351.257 194.588 350.714 194.441 350.171 194.305 cv
349.843 194.226 349.515 194.147 349.186 194.067 cv
348.836 193.988 348.485 193.92 348.123 193.852 cv
348.032 193.83 347.931 193.818 347.84 193.796 cv
347.625 193.762 347.41 193.717 347.195 193.694 cv
347.139 193.683 li
345.962 193.49 344.762 193.366 343.552 193.309 cv
342.493 193.257 341.445 193.259 340.41 193.304 cv
340.585 193.309 li
341.796 193.366 342.995 193.49 344.172 193.683 cv
344.229 193.694 li
344.443 193.717 344.658 193.762 344.874 193.796 cv
345.156 193.852 li
345.519 193.92 345.869 193.988 346.221 194.067 cv
346.549 194.147 346.877 194.226 347.205 194.305 cv
347.748 194.441 348.291 194.588 348.823 194.758 cv
349.071 194.837 349.32 194.916 349.559 194.996 cv
350.328 195.255 351.075 195.527 351.821 195.844 cv
352.184 195.98 352.546 196.138 352.896 196.308 cv
352.976 196.342 li
353.326 196.5 353.678 196.67 354.017 196.839 cv
354.379 197.021 354.729 197.213 355.092 197.406 cv
355.985 197.892 356.857 198.424 357.706 199.001 cv
357.966 199.16 358.215 199.33 358.452 199.51 cv
358.565 199.589 358.679 199.668 358.792 199.759 cv
359.041 199.929 359.278 200.11 359.516 200.302 cv
360.354 200.936 361.157 201.626 361.927 202.35 cv
362.3 202.702 362.673 203.075 363.035 203.46 cv
368.761 209.366 372.189 217.343 371.93 225.977 cv
371.93 226.181 li
371.918 226.362 li
371.918 226.464 371.918 226.566 371.895 226.657 cv
371.895 226.826 371.884 226.996 371.861 227.166 cv
370.909 237.343 357.657 245.478 341.145 246 cv
341.569 246.011 341.991 246.029 342.42 246.029 cv
359.71 246.029 373.844 237.689 374.828 227.166 cv
374.851 226.996 374.861 226.826 374.861 226.657 cv
374.885 226.566 374.885 226.464 374.885 226.362 cv
374.896 226.181 li
374.896 225.977 li
375.156 217.343 371.728 209.366 366.002 203.46 cv
.439216 .717647 .878431 rgb
f
331.884 242.985 mo
322.719 239.443 316.619 233.152 316.619 225.977 cv
316.619 225.812 316.632 225.647 316.639 225.481 cv
316.624 224.699 316.64 223.887 316.729 223.011 cv
316.731 222.932 li
317.051 213.687 321.506 205.588 328.328 200.203 cv
328.335 200.198 li
328.804 199.827 329.287 199.474 329.777 199.13 cv
329.889 199.052 330.001 198.975 330.114 198.899 cv
330.56 198.594 331.013 198.3 331.475 198.018 cv
331.638 197.917 li
332.185 197.586 332.743 197.274 333.312 196.976 cv
333.39 196.936 li
333.935 196.654 334.49 196.387 335.054 196.134 cv
335.212 196.063 li
336.407 195.535 337.642 195.077 338.91 194.692 cv
339.005 194.664 li
341.015 194.062 343.109 193.651 345.265 193.438 cv
344.697 193.38 344.126 193.336 343.552 193.309 cv
339.624 193.117 335.843 193.608 332.318 194.664 cv
332.223 194.692 li
330.954 195.077 329.72 195.535 328.525 196.063 cv
328.366 196.134 li
327.804 196.387 327.248 196.654 326.703 196.936 cv
326.625 196.976 li
326.056 197.274 325.498 197.586 324.95 197.917 cv
324.788 198.018 li
324.325 198.3 323.872 198.594 323.427 198.899 cv
323.314 198.975 323.202 199.052 323.09 199.13 cv
322.6 199.474 322.116 199.827 321.648 200.198 cv
321.642 200.203 li
314.818 205.588 310.364 213.687 310.045 222.932 cv
310.042 223.011 li
309.953 223.887 309.936 224.699 309.952 225.481 cv
309.944 225.647 309.933 225.812 309.933 225.977 cv
309.933 233.152 316.032 239.443 325.197 242.985 cv
330.188 244.919 336.095 246.029 342.42 246.029 cv
343.573 246.029 344.711 245.989 345.834 245.916 cv
340.748 245.604 336.001 244.582 331.884 242.985 cv
.329412 .580392 .721569 rgb
f
335.786 202.726 mo
330.037 198.951 li
330.063 198.934 330.088 198.916 330.114 198.899 cv
330.56 198.594 331.013 198.3 331.475 198.018 cv
331.638 197.917 li
332.185 197.586 332.743 197.274 333.312 196.976 cv
333.39 196.936 li
333.529 196.864 333.669 196.793 333.81 196.723 cv
334.209 196.805 334.613 196.883 335.021 196.955 cv
335.735 197.423 li
335.735 202.418 li
335.736 202.419 li
335.73 202.522 335.747 202.625 335.786 202.726 cv
.305882 .505882 .615686 rgb
f
330.037 198.951 mo
326.853 196.86 li
327.352 196.611 327.86 196.361 328.368 196.138 cv
328.528 196.067 li
328.893 195.905 329.26 195.75 329.631 195.602 cv
330.96 196.045 332.358 196.421 333.81 196.723 cv
333.669 196.793 333.529 196.864 333.39 196.936 cv
333.312 196.976 li
332.743 197.274 332.185 197.586 331.638 197.917 cv
331.475 198.018 li
331.013 198.3 330.56 198.594 330.114 198.899 cv
330.088 198.916 330.063 198.934 330.037 198.951 cv
.25098 .443137 .54902 rgb
f
339.687 203.765 mo
338.405 204.314 336.583 204.173 335.616 203.451 cv
334.649 202.727 334.904 201.696 336.186 201.146 cv
337.467 200.597 339.289 200.738 340.256 201.46 cv
341.223 202.184 340.968 203.215 339.687 203.765 cv
cp
.184314 .215686 .25098 rgb
f
337.93 203.701 mo
337.266 203.701 336.61 203.531 336.179 203.208 cv
335.982 203.061 335.852 202.896 335.786 202.726 cv
335.747 202.625 335.73 202.522 335.736 202.419 cv
335.735 202.418 li
335.735 197.423 li
335.735 197.073 li
337.161 197.298 338.631 197.452 340.137 197.53 cv
340.137 202.509 li
340.134 202.509 li
340.104 202.866 339.805 203.213 339.262 203.447 cv
338.862 203.618 338.394 203.701 337.93 203.701 cv
level3{
gsave
clp
[4.40137 0 0 4.40137 335.735 192.093 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.239216 .466667 .6 ]
/C1 [.239216 .466667 .6 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.239216 .466667 .6 ]
/C1 [.294118 .517647 .65098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.294118 .517647 .65098 ]
/C1 [.294118 .517647 .65098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.294118 .517647 .65098 ]
/C1 [.34902 .572549 .701961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.34902 .572549 .701961 ]
/C1 [.34902 .572549 .701961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.34902 .572549 .701961 ]
/C1 [.294118 .517647 .65098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.294118 .517647 .65098 ]
/C1 [.294118 .517647 .65098 ]
/N 1 
>>
]
/Bounds [.177707 .179611 .469263 .470815 .780371 .78354 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.40137 0 0 4.40137 335.735 192.093 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4ZuG291qoN91qoN91qoN91qoN
91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN93GD#=]nm1
=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1
=]nm1=]nm1<D,tX91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN91qoN
~>
<~GB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\^nKS5#3KS5#3KS5#3KS5#3
KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KT_L]P*1uk
P*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1ukP*1uk
P*1ukP*1ukNeE(=KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3
~>
<~R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0qLVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVR*V8Za7!E
Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
Za7!EZa7!EYGS1oVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
339.262 181.983 mo
338.291 182.399 336.911 182.292 336.179 181.745 cv
335.447 181.197 335.641 180.416 336.61 180.001 cv
337.58 179.584 338.96 179.691 339.692 180.238 cv
340.425 180.786 340.231 181.567 339.262 181.983 cv
.415686 .635294 .760784 rgb
f
350.539 197.542 mo
349.258 198.09 347.436 197.95 346.469 197.227 cv
345.502 196.503 345.757 195.472 347.038 194.922 cv
348.319 194.374 350.142 194.514 351.108 195.237 cv
352.075 195.96 351.82 196.992 350.539 197.542 cv
cp
.184314 .215686 .25098 rgb
f
348.783 197.477 mo
348.367 197.477 347.955 197.41 347.599 197.282 cv
348.678 197.152 349.736 196.982 350.765 196.776 cv
350.618 196.946 350.4 197.1 350.114 197.223 cv
349.715 197.394 349.247 197.477 348.783 197.477 cv
level3{
gsave
clp
[4.40137 0 0 4.40137 346.588 185.87 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.40137 0 0 4.40137 346.588 185.87 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
350.114 175.759 mo
349.145 176.175 347.765 176.069 347.032 175.521 cv
346.3 174.974 346.493 174.193 347.463 173.777 cv
348.434 173.361 349.813 173.467 350.545 174.015 cv
351.277 174.563 351.084 175.343 350.114 175.759 cv
.415686 .635294 .760784 rgb
f
358.804 238.735 mo
353.659 238.735 348.79 235.188 346.543 229.12 cv
343.429 220.71 346.529 210.646 353.469 206.639 cv
354.013 206.325 354.564 206.058 355.12 205.836 cv
356.538 205.268 357.986 204.996 359.412 204.996 cv
359.586 204.996 359.761 205 359.935 205.008 cv
358.105 205.087 356.248 205.616 354.472 206.641 cv
347.532 210.648 344.432 220.712 347.546 229.122 cv
349.717 234.983 354.334 238.494 359.283 238.725 cv
359.123 238.732 358.963 238.735 358.804 238.735 cv
level3{
gsave
clp
[-2.75022 29.4564 -29.4564 -2.75022 360.193 210.247 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.75022 29.4564 -29.4564 -2.75022 360.193 210.247 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
372.677 214.613 mo
375.791 223.022 372.689 233.086 365.75 237.093 cv
358.81 241.1 350.66 237.531 347.546 229.122 cv
344.432 220.712 347.532 210.648 354.472 206.641 cv
361.412 202.635 369.563 206.204 372.677 214.613 cv
.184314 .215686 .25098 rgb
f
372.957 222.716 mo
372.608 228.502 369.773 233.923 365.209 236.562 cv
364.094 237.205 362.935 237.65 361.749 237.874 cv
361.099 238.006 360.447 238.069 359.788 238.069 cv
358.754 238.069 357.746 237.909 356.766 237.606 cv
355.937 237.347 355.134 236.982 354.376 236.518 cv
353.502 236.001 352.682 235.359 351.924 234.583 cv
351.282 233.95 350.685 233.228 350.158 232.425 cv
349.454 231.391 348.875 230.241 348.411 228.993 cv
348.18 228.36 347.983 227.727 347.822 227.076 cv
347.564 226.095 347.403 225.096 347.314 224.098 cv
347.127 222.208 347.226 220.309 347.582 218.49 cv
348.482 213.693 351.112 209.422 355.009 207.175 cv
355.49 206.899 355.98 206.65 356.48 206.462 cv
357.764 205.927 359.093 205.66 360.438 205.66 cv
360.608 205.66 360.769 205.66 360.937 205.669 cv
361.758 205.713 362.561 205.856 363.345 206.088 cv
364.941 206.57 366.439 207.434 367.759 208.62 cv
368.428 209.217 369.052 209.904 369.613 210.662 cv
370.272 211.536 370.852 212.516 371.334 213.586 cv
371.512 213.96 371.673 214.344 371.815 214.737 cv
372.029 215.316 372.217 215.905 372.368 216.501 cv
372.903 218.543 373.09 220.657 372.957 222.716 cv
.85098 .85098 .85098 rgb
f
363.368 233.267 mo
362.152 233.973 360.888 234.327 359.607 234.327 cv
356.166 234.327 352.956 231.682 351.437 227.577 cv
349.047 221.114 351.289 213.436 356.437 210.463 cv
357.661 209.765 358.926 209.404 360.207 209.404 cv
363.647 209.404 366.85 212.056 368.369 216.163 cv
370.767 222.617 368.517 230.294 363.368 233.267 cv
369.141 215.875 mo
367.499 211.449 363.992 208.583 360.207 208.583 cv
358.777 208.583 357.374 208.977 356.027 209.757 cv
350.55 212.918 348.144 221.041 350.673 227.864 cv
352.307 232.291 355.813 235.148 359.607 235.148 cv
361.027 235.148 362.432 234.753 363.778 233.982 cv
369.264 230.812 371.67 222.691 369.141 215.875 cv
.184314 .215686 .25098 rgb
f
371.811 214.74 mo
370.485 211.159 368.134 208.409 365.317 206.915 cv
367.738 208.486 369.741 211.021 370.926 214.219 cv
373.956 222.403 370.995 232.192 364.324 236.042 cv
362.59 237.043 360.765 237.552 358.897 237.552 cv
357.192 237.552 355.539 237.106 354.019 236.299 cv
355.77 237.437 357.74 238.072 359.784 238.072 cv
361.65 238.072 363.477 237.564 365.211 236.562 cv
371.881 232.712 374.842 222.922 371.811 214.74 cv
.117647 .141176 .160784 rgb
f
358.96 225.068 mo
358.685 224.778 358.464 224.383 358.299 223.831 cv
358.082 223.105 358.042 222.332 358.151 221.614 cv
358.914 220.582 li
358.534 221.538 358.462 222.742 358.789 223.839 cv
358.892 224.183 359.028 224.491 359.188 224.76 cv
358.96 225.068 li
level3{
gsave
clp
[-2.45593 6.50907 -6.50907 -2.45593 362.124 218.02 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.45593 6.50907 -6.50907 -2.45593 362.124 218.02 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
358.755 219.944 mo
357.66 209.885 li
361.405 218.74 li
358.755 219.944 li
.141176 .164706 .188235 rgb
f
359.108 220.167 mo
357.66 209.885 li
361.758 218.962 li
359.108 220.167 li
f
362.034 225.711 mo
361.66 225.944 361.268 226.033 360.893 225.998 cv
360.751 225.979 li
360.456 225.926 360.162 225.784 359.895 225.578 cv
359.422 225.212 359.021 224.615 358.789 223.839 cv
358.245 222.011 358.807 219.89 360.056 219.105 cv
360.367 218.909 360.689 218.811 361.009 218.802 cv
361.268 218.802 361.518 218.856 361.758 218.962 cv
362.017 219.079 362.258 219.248 362.472 219.471 cv
362.828 219.836 363.113 220.353 363.301 220.977 cv
363.845 222.796 363.283 224.918 362.034 225.711 cv
f
359.108 220.167 mo
358.755 219.944 li
357.66 209.885 li
359.108 220.167 li
.0745098 .0901961 .12549 rgb
f
347.314 224.098 mo
347.314 224.098 li
347.252 223.47 347.221 222.842 347.221 222.215 cv
347.221 220.956 347.344 219.705 347.582 218.49 cv
356.48 206.462 li
357.764 205.927 359.093 205.66 360.438 205.66 cv
360.608 205.66 360.769 205.66 360.937 205.669 cv
358.67 208.736 li
357.771 208.918 356.888 209.259 356.027 209.757 cv
352.374 211.866 350.087 216.18 349.719 220.845 cv
347.314 224.098 li
350.697 219.522 mo
351.339 215.668 353.374 212.232 356.437 210.463 cv
356.913 210.192 357.395 209.971 357.882 209.803 cv
357.721 210.02 li
357.66 209.885 li
357.681 210.075 li
350.697 219.522 li
.92549 .92549 .92549 rgb
f
349.719 220.845 mo
350.087 216.18 352.374 211.866 356.027 209.757 cv
356.888 209.259 357.771 208.918 358.67 208.736 cv
357.882 209.803 li
357.395 209.971 356.913 210.192 356.437 210.463 cv
353.374 212.232 351.339 215.668 350.697 219.522 cv
349.719 220.845 li
.592157 .607843 .627451 rgb
f
357.686 210.068 mo
357.66 209.885 li
357.721 210.02 li
357.686 210.068 li
.572549 .584314 .596078 rgb
f
357.681 210.075 mo
357.66 209.885 li
357.686 210.068 li
357.681 210.075 li
.537255 .545098 .564706 rgb
f
354.396 236.491 mo
354.275 236.432 354.154 236.371 354.035 236.308 cv
353.288 235.83 352.582 235.257 351.924 234.583 cv
353.517 232.428 li
354.281 233.197 355.129 233.821 356.034 234.277 cv
354.396 236.491 li
356.53 233.606 mo
355.622 233.169 354.772 232.545 354.011 231.761 cv
358.96 225.068 li
359.205 225.325 359.492 225.5 359.823 225.629 cv
360.208 225.783 li
360.384 225.879 360.568 225.946 360.751 225.979 cv
360.893 225.998 li
360.946 226.003 360.999 226.005 361.052 226.005 cv
361.377 226.005 361.713 225.911 362.034 225.711 cv
363.283 224.918 363.845 222.796 363.301 220.977 cv
363.175 220.558 363.005 220.187 362.798 219.878 cv
367.251 213.856 li
367.685 214.559 368.061 215.331 368.369 216.163 cv
368.49 216.489 368.6 216.819 368.698 217.151 cv
356.53 233.606 li
369.303 216.333 mo
369.251 216.18 369.197 216.027 369.141 215.875 cv
368.773 214.883 368.311 213.97 367.774 213.149 cv
369.342 211.029 li
369.954 211.981 370.482 213.031 370.906 214.165 cv
369.303 216.333 li
371.119 213.127 mo
370.68 212.238 370.175 211.414 369.612 210.663 cv
369.613 210.662 li
370.177 211.409 370.683 212.234 371.119 213.127 cv
.92549 .92549 .92549 rgb
f
356.034 234.277 mo
355.129 233.821 354.281 233.197 353.517 232.428 cv
354.011 231.761 li
354.772 232.545 355.622 233.169 356.53 233.606 cv
356.034 234.277 li
368.698 217.151 mo
368.6 216.819 368.49 216.489 368.369 216.163 cv
368.061 215.331 367.685 214.559 367.251 213.856 cv
367.774 213.149 li
368.311 213.97 368.773 214.883 369.141 215.875 cv
369.197 216.027 369.251 216.18 369.303 216.333 cv
368.698 217.151 li
.592157 .607843 .627451 rgb
f
354.376 236.518 mo
354.261 236.45 354.147 236.38 354.035 236.308 cv
354.035 236.308 li
354.154 236.371 354.275 236.432 354.396 236.491 cv
354.376 236.518 li
370.906 214.165 mo
370.482 213.031 369.954 211.981 369.342 211.029 cv
369.612 210.663 li
370.175 211.414 370.68 212.238 371.119 213.127 cv
371.192 213.278 371.264 213.431 371.334 213.586 cv
370.906 214.165 li
.560784 .572549 .580392 rgb
f
360.208 225.783 mo
359.823 225.629 li
359.492 225.5 359.205 225.325 358.96 225.068 cv
359.188 224.76 li
359.39 225.098 359.631 225.374 359.895 225.578 cv
359.996 225.656 360.101 225.724 360.208 225.783 cv
level3{
gsave
clp
[-2.45593 6.50907 -6.50907 -2.45593 362.124 218.02 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~O-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`g
P*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#j
P`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`Lul
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~O-5`gP*M)kQ&q2pOHYulPEq>qQ][N!Od)2pQ'd`"R$*c'P*VN"QC=#(RZj),PF%c'R%'>-S<TD2Q'n/-
R@TV2SX,_9QC=D2R\#h7T9l%>Q^aY7S=l7>TU;7CR%9q<SYDOCU7%UIR@^1BSthaHUmdpOR\-CFTV\-N
V44-TS=ugMTr+?RVk'Q[SYE'RU8XWXW1Kc`Sti9VUoL&_Wh6,gT;AT\V5p8dXIuGlTVeibVlcYjXeDYq
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Tr5&eVll_kY+_brTr5&eVll_kY+_brTr5&eVll_kY+_brTr5&eVll_kY+_brTr5&eVll_kY+_brTr5&e
Vll_kY+_brTr5&eVll_kY+_brTr5&eVll_kY+_brTr5&eVll_kY+_brTr5&eVll_kY+_brTr5&eVll_k
Y+_brTr5&eVll_kY+_brTr5&eVll_kY+_brTr5&eVll_kY+_brTr5&eVll_kY+_brTr5&eVll_kY+_br
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Tr5&eVlcYjXe;PnTVef`VQ?DdX.Q5hT;AT\UoL#^Wh,ubSti9UUSs`XW1BZ]SYE$PTr4ESVOX?WS"QXJ
TV\-NV4+$PR\-CET;7pIUR@^KR@^.@SYDLBU6qLFR%0k;S=l4=TU2.@Q^aV5S"H"8SsGh:QC=D1R@TV2
SX#V5PaIu*R%0D.S!02.PF%`%Q^X,(RZ`u)P*VN!Q'd]!R$!W"Od)2pPa@JqQB7;rOHYrjP*M)kQ&h)m
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~O-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`g
P*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#j
P`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`LulO-5`gP*D#jP`Lul
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~O-5`gP*D#jP`CljNffQdOd(lgP`CljNffQdOd(lgP`CliNffNcOHY]dPDtZfNKB?`OHYZcPDtZfNKB?`
OHYZbPDtWeNK99_O-5H_P)PHbN/s-\O-5H_P)PHbN/j'[Nfo?]P)PEaN/j'[Nfo<\P)G?_MiNpXNff6Z
Oc,3]MiEjWNKK-YOc,3]MiEjVNKK*XOc#*[MN![TN0&pUOG]!YMN!XSN0&pUOG]!YMN!XRMi`dROGSmW
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~M2RIPMi`dROGSmWM2RIPMi`dROGSmWM2RIPMi`dROGSmWM2RIPMi`dROGSmWM2RIPMi`dROGSmWM2RIP
Mi`dROGSmWM2RIPMi`dROGSmWM2RIPMi`dROGSmWM2RIPMi`dROGSmWM2RIPMi`dROGSmWM2RIPMi`dR
OGSmWM2RIPMi`dROGSmWM2RIPMi`dROGSmWM2RIPMi`dROGSmWM2RIPMi`dROGSmWM2RIPMi`dROGSmW
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.202174 .205343 .595852 .602166 .853722 .869912 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.45593 6.50907 -6.50907 -2.45593 362.124 218.02 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[PG"SATV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTUV%'NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[
NfK-[NfK-[NfK-[NfK-[NfK-[NfK-[NfK-ZN/NOKLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkCLkpkC
~>
<~OcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgQ_pXWVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP'-8OcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcg
OcbcgOcbcgOcbcgOcbcgOcbcgOcbcgOcbcfO,]'TMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:K
~>
<~PEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oS#rfpXf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-
Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xeh>IPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2o
PEV2oPEV2oPEV2oPEV2oPEV2oPEV2oPEV2oP*(ieO,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_O,o?_
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
361.052 226.005 mo
360.999 226.005 360.946 226.003 360.893 225.998 cv
360.751 225.979 li
360.568 225.946 360.384 225.879 360.208 225.783 cv
360.101 225.724 359.996 225.656 359.895 225.578 cv
359.631 225.374 359.39 225.098 359.188 224.76 cv
362.798 219.878 li
363.005 220.187 363.175 220.558 363.301 220.977 cv
363.845 222.796 363.283 224.918 362.034 225.711 cv
361.713 225.911 361.377 226.005 361.052 226.005 cv
.572549 .584314 .596078 rgb
f
357.232 237.739 mo
357.076 237.698 356.92 237.654 356.766 237.606 cv
356.767 237.604 li
356.921 237.653 357.076 237.697 357.232 237.739 cv
358.897 237.552 mo
358.239 237.552 357.588 237.486 356.949 237.357 cv
358.63 235.085 li
358.953 235.127 359.279 235.148 359.607 235.148 cv
361.027 235.148 362.432 234.753 363.778 233.982 cv
364.441 233.599 365.059 233.144 365.628 232.627 cv
362.456 236.918 li
361.296 237.339 360.105 237.552 358.897 237.552 cv
359.607 234.327 mo
359.471 234.327 359.335 234.322 359.199 234.314 cv
369.302 220.649 li
369.604 225.841 367.355 230.965 363.368 233.267 cv
362.152 233.973 360.888 234.327 359.607 234.327 cv
368.53 228.704 mo
369.842 226.024 370.401 222.821 370.038 219.653 cv
371.777 217.301 li
372.21 219.605 372.219 221.959 371.852 224.211 cv
368.53 228.704 li
372.929 219.787 mo
372.836 218.685 372.65 217.585 372.367 216.503 cv
372.368 216.501 li
372.652 217.583 372.837 218.684 372.929 219.787 cv
.92549 .92549 .92549 rgb
f
359.607 235.148 mo
359.279 235.148 358.953 235.127 358.63 235.085 cv
359.199 234.314 li
359.335 234.322 359.471 234.327 359.607 234.327 cv
360.888 234.327 362.152 233.973 363.368 233.267 cv
367.355 230.965 369.604 225.841 369.302 220.649 cv
370.038 219.653 li
370.401 222.821 369.842 226.024 368.53 228.704 cv
365.628 232.627 li
365.059 233.144 364.441 233.599 363.778 233.982 cv
362.432 234.753 361.027 235.148 359.607 235.148 cv
.592157 .607843 .627451 rgb
f
359.788 238.069 mo
358.917 238.069 358.065 237.955 357.232 237.739 cv
357.232 237.739 li
357.076 237.697 356.921 237.653 356.767 237.604 cv
356.949 237.357 li
357.588 237.486 358.239 237.552 358.897 237.552 cv
360.105 237.552 361.296 237.339 362.456 236.918 cv
361.749 237.874 li
361.099 238.006 360.447 238.069 359.788 238.069 cv
371.852 224.211 mo
372.219 221.959 372.21 219.605 371.777 217.301 cv
372.367 216.503 li
372.65 217.585 372.836 218.685 372.929 219.787 cv
373.011 220.766 373.019 221.747 372.957 222.716 cv
371.852 224.211 li
.560784 .572549 .580392 rgb
f
350.158 232.425 mo
350.158 232.425 li
349.454 231.391 348.875 230.241 348.411 228.993 cv
348.18 228.36 347.983 227.727 347.822 227.076 cv
349.812 224.385 li
349.969 225.561 350.253 226.731 350.673 227.864 cv
350.983 228.705 351.362 229.49 351.797 230.209 cv
350.158 232.425 li
352.326 229.494 mo
351.987 228.898 351.689 228.258 351.437 227.577 cv
350.937 226.225 350.639 224.82 350.529 223.416 cv
358.029 213.275 li
358.754 219.936 li
358.453 220.409 358.246 220.99 358.151 221.614 cv
352.326 229.494 li
361.134 217.58 mo
358.75 212.3 li
360.868 209.437 li
362.551 209.603 364.152 210.398 365.498 211.678 cv
361.134 217.58 li
365.988 211.015 mo
364.652 209.77 363.084 208.953 361.427 208.682 cv
363.345 206.088 li
364.941 206.57 366.439 207.434 367.759 208.62 cv
367.755 208.625 li
366.996 207.946 366.179 207.371 365.317 206.915 cv
366.134 207.444 366.903 208.084 367.609 208.822 cv
365.988 211.015 li
.92549 .92549 .92549 rgb
f
351.797 230.209 mo
351.362 229.49 350.983 228.705 350.673 227.864 cv
350.253 226.731 349.969 225.561 349.812 224.385 cv
350.529 223.416 li
350.639 224.82 350.937 226.225 351.437 227.577 cv
351.689 228.258 351.987 228.898 352.326 229.494 cv
351.797 230.209 li
365.498 211.678 mo
364.152 210.398 362.551 209.603 360.868 209.437 cv
361.427 208.682 li
363.084 208.953 364.652 209.77 365.988 211.015 cv
365.498 211.678 li
.592157 .607843 .627451 rgb
f
367.609 208.822 mo
366.903 208.084 366.134 207.444 365.317 206.915 cv
366.179 207.371 366.996 207.946 367.755 208.625 cv
367.609 208.822 li
.560784 .572549 .580392 rgb
f
358.151 221.614 mo
358.246 220.99 358.453 220.409 358.754 219.936 cv
358.755 219.944 li
359.107 220.167 li
359.036 220.299 358.972 220.437 358.914 220.582 cv
358.151 221.614 li
level3{
gsave
clp
[-2.45593 6.50907 -6.50907 -2.45593 362.124 218.02 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.45593 6.50907 -6.50907 -2.45593 362.124 218.02 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
359.108 220.165 mo
358.12 213.152 li
358.75 212.3 li
361.134 217.58 li
359.959 219.17 li
359.616 219.411 359.33 219.755 359.108 220.165 cv
.572549 .584314 .596078 rgb
f
358.914 220.582 mo
358.972 220.437 359.036 220.299 359.107 220.167 cv
359.108 220.167 li
359.108 220.165 li
359.108 220.165 li
359.33 219.755 359.616 219.411 359.959 219.17 cv
358.914 220.582 li
f
359.108 220.167 mo
359.107 220.167 li
358.755 219.944 li
358.754 219.936 li
358.029 213.275 li
358.12 213.152 li
359.108 220.165 li
359.108 220.167 li
.537255 .545098 .564706 rgb
f
369.393 180.938 mo
369.393 190.133 357.315 197.588 342.418 197.588 cv
327.519 197.588 315.443 190.133 315.443 180.938 cv
315.443 171.743 327.519 164.288 342.418 164.288 cv
357.315 164.288 369.393 171.743 369.393 180.938 cv
.301961 .498039 .611765 rgb
f
369.393 180.035 mo
369.393 189.23 357.315 196.684 342.418 196.684 cv
327.519 196.684 315.443 189.23 315.443 180.035 cv
315.443 170.839 327.519 163.384 342.418 163.384 cv
357.315 163.384 369.393 170.839 369.393 180.035 cv
.447059 .733333 .901961 rgb
f
342.418 195.793 mo
328.036 195.793 316.335 188.724 316.335 180.035 cv
316.335 171.345 328.036 164.276 342.418 164.276 cv
356.8 164.276 368.501 171.345 368.501 180.035 cv
368.501 188.724 356.8 195.793 342.418 195.793 cv
.372549 .611765 .74902 rgb
f
342.418 165.179 mo
356.549 165.179 368.084 172.005 368.482 180.486 cv
368.489 180.335 368.501 180.186 368.501 180.035 cv
368.501 171.345 356.8 164.276 342.418 164.276 cv
328.036 164.276 316.335 171.345 316.335 180.035 cv
316.335 180.186 316.348 180.335 316.354 180.486 cv
316.753 172.005 328.286 165.179 342.418 165.179 cv
.301961 .498039 .611765 rgb
f
377.828 161.592 mo
377.807 161.858 li
377.482 165.584 li
377.331 167.291 li
376.813 178.828 360.858 194.587 341.511 194.587 cv
323.013 194.587 307.765 179.765 306.007 168.38 cv
305.732 166.333 li
305.199 162.348 li
305.192 162.313 li
305.199 162.319 li
306.259 163.026 li
308.911 152.988 323.712 145.285 341.511 145.285 cv
358.963 145.285 373.526 152.692 376.581 162.442 cv
377.792 161.621 li
377.828 161.592 li
.811765 .811765 .811765 rgb
f
306.005 168.384 mo
305.728 166.314 li
305.379 165.095 305.192 163.84 305.192 162.557 cv
305.199 162.365 li
305.191 162.309 li
306.259 163.023 li
306.259 163.024 306.259 163.025 306.259 163.026 cv
305.199 162.319 li
305.192 162.313 li
305.199 162.348 li
305.732 166.333 li
306.007 168.38 li
306.007 168.381 306.007 168.382 306.007 168.382 cv
306.005 168.384 li
377.482 165.584 mo
377.482 165.584 li
377.807 161.858 li
377.821 162.096 377.828 162.327 377.828 162.557 cv
377.828 163.588 377.713 164.597 377.482 165.584 cv
377.482 165.584 li
376.581 162.442 mo
376.578 162.433 376.575 162.423 376.572 162.414 cv
376.575 162.423 376.578 162.433 376.581 162.442 cv
307.422 160.068 mo
311.904 151.552 325.384 145.339 341.302 145.285 cv
325.387 145.339 311.905 151.55 307.422 160.068 cv
341.302 145.285 mo
341.319 145.285 341.336 145.285 341.352 145.285 cv
341.336 145.285 341.319 145.285 341.302 145.285 cv
341.355 145.285 mo
341.372 145.285 341.388 145.285 341.405 145.285 cv
341.387 145.285 341.372 145.285 341.355 145.285 cv
341.407 145.285 mo
341.423 145.285 341.439 145.285 341.455 145.285 cv
341.439 145.285 341.423 145.285 341.407 145.285 cv
341.459 145.285 mo
341.476 145.285 341.492 145.285 341.51 145.285 cv
341.511 145.285 li
341.493 145.285 341.476 145.285 341.459 145.285 cv
.870588 .870588 .870588 rgb
f
341.51 194.585 mo
323.015 194.585 307.766 179.765 306.008 168.382 cv
306.007 168.382 li
306.007 168.382 306.007 168.381 306.007 168.38 cv
305.732 166.333 li
305.199 162.348 li
305.192 162.313 li
305.199 162.319 li
306.259 163.026 li
306.259 163.025 306.259 163.024 306.259 163.023 cv
306.26 163.023 li
306.262 163.017 li
306.344 162.706 306.438 162.396 306.544 162.09 cv
306.596 161.937 306.66 161.786 306.719 161.634 cv
306.776 161.483 306.834 161.334 306.892 161.184 cv
307.051 160.807 307.228 160.436 307.422 160.068 cv
311.905 151.55 325.387 145.339 341.302 145.285 cv
341.302 145.285 li
341.319 145.285 341.336 145.285 341.352 145.285 cv
341.353 145.285 341.354 145.285 341.355 145.285 cv
341.372 145.285 341.387 145.285 341.405 145.285 cv
341.407 145.285 li
341.423 145.285 341.439 145.285 341.455 145.285 cv
341.456 145.285 341.458 145.285 341.459 145.285 cv
341.476 145.285 341.493 145.285 341.511 145.285 cv
341.511 145.285 li
342.154 145.285 342.794 145.298 343.43 145.318 cv
343.579 145.324 li
360.086 145.882 373.621 153.066 376.572 162.414 cv
376.575 162.423 376.578 162.433 376.581 162.442 cv
376.581 162.442 li
377.792 161.621 li
377.807 161.858 li
377.482 165.584 li
375.032 176.256 359.835 184.5 341.511 184.5 cv
338.636 184.5 335.84 184.296 333.157 183.913 cv
332.987 183.889 332.821 183.877 332.66 183.877 cv
329.591 183.877 328.324 188.134 331.196 189.73 cv
335.458 192.099 340.288 193.787 345.445 194.361 cv
344.151 194.504 342.84 194.585 341.51 194.585 cv
.705882 .705882 .705882 rgb
f
341.51 183.331 mo
321.483 183.331 305.191 173.487 305.191 161.388 cv
305.191 149.288 321.483 139.445 341.51 139.445 cv
361.536 139.445 377.829 149.288 377.829 161.388 cv
377.829 173.487 361.536 183.331 341.51 183.331 cv
cp
.752941 .752941 .752941 rgb
f
341.51 182.385 mo
321.483 182.385 305.191 172.542 305.191 160.442 cv
305.191 148.342 321.483 138.499 341.51 138.499 cv
361.536 138.499 377.829 148.342 377.829 160.442 cv
377.829 172.542 361.536 182.385 341.51 182.385 cv
cp
.890196 .890196 .890196 rgb
f
376.387 160.438 mo
376.387 167.169 370.846 173.15 362.307 176.883 cv
362.055 176.998 361.802 177.099 361.55 177.207 cv
357.796 178.763 353.501 179.902 348.86 180.479 cv
346.489 180.788 344.032 180.947 341.511 180.947 cv
339.73 180.947 337.986 180.868 336.278 180.709 cv
336.271 180.709 li
331.631 180.298 327.3 179.347 323.445 177.971 cv
323.438 177.971 li
323.07 177.841 322.71 177.704 322.356 177.567 cv
312.896 173.899 306.634 167.594 306.634 160.438 cv
306.634 152.822 313.746 146.157 324.281 142.625 cv
329.368 140.911 335.248 139.938 341.511 139.938 cv
349.04 139.938 356.023 141.35 361.73 143.75 cv
370.601 147.468 376.387 153.564 376.387 160.438 cv
cp
.780392 .780392 .780392 rgb
f
376.387 160.438 mo
376.387 167.169 370.846 173.15 362.307 176.883 cv
362.055 176.998 361.802 177.099 361.55 177.207 cv
357.796 178.763 353.501 179.902 348.86 180.479 cv
346.086 179.606 343.946 178.59 342.944 177.409 cv
342.115 176.458 342.029 175.391 342.944 174.216 cv
343.563 173.417 344.659 172.559 346.302 171.644 cv
361.788 163.047 362.083 148.477 361.73 143.75 cv
370.601 147.468 376.387 153.564 376.387 160.438 cv
cp
.709804 .709804 .709804 rgb
f
342.944 177.409 mo
341.849 178.691 339.413 179.787 336.278 180.709 cv
336.271 180.709 li
331.631 180.298 327.3 179.347 323.445 177.971 cv
323.438 177.971 li
323.07 177.841 322.71 177.704 322.356 177.567 cv
312.896 173.899 306.634 167.594 306.634 160.438 cv
306.634 152.822 313.746 146.157 324.281 142.625 cv
323.913 145.415 322.501 162.161 339.586 171.644 cv
341.229 172.559 342.324 173.417 342.944 174.216 cv
343.859 175.391 343.78 176.458 342.944 177.409 cv
cp
.811765 .811765 .811765 rgb
f
362.335 176.335 mo
362.335 176.515 362.328 176.703 362.307 176.883 cv
362.055 176.998 361.802 177.099 361.55 177.207 cv
355.872 179.563 348.961 180.947 341.511 180.947 cv
334.902 180.947 328.72 179.859 323.445 177.971 cv
323.438 177.971 li
323.07 177.841 322.71 177.704 322.356 177.567 cv
322.277 177.164 322.241 176.753 322.241 176.335 cv
322.241 169.842 331.234 164.553 342.288 164.553 cv
353.343 164.553 362.335 169.842 362.335 176.335 cv
cp
.74902 .74902 .74902 rgb
f
348.242 95.873 mo
340.976 96.061 li
342.225 103.38 li
342.226 103.38 li
342.209 103.684 342.37 103.989 342.725 104.241 cv
343.53 104.814 345.026 104.894 346.065 104.418 cv
346.647 104.152 346.963 103.768 346.984 103.38 cv
348.242 95.873 li
cp
.141176 .164706 .188235 rgb
f
346.835 97.4585 mo
345.248 98.1846 342.964 98.0625 341.732 97.187 cv
340.501 96.3115 340.789 95.0132 342.376 94.2876 cv
343.963 93.5615 346.247 93.6836 347.479 94.5591 cv
348.71 95.4346 348.421 96.7329 346.835 97.4585 cv
cp
.686275 .760784 .396078 rgb
f
304.144 70.2173 mo
296.877 70.4053 li
298.126 77.7246 li
298.127 77.7246 li
298.109 78.0278 298.271 78.333 298.626 78.585 cv
299.432 79.1582 300.928 79.2378 301.966 78.7627 cv
302.549 78.4961 302.864 78.1118 302.886 77.7246 cv
304.144 70.2173 li
cp
.141176 .164706 .188235 rgb
f
302.736 71.8032 mo
301.149 72.5288 298.865 72.4072 297.634 71.5313 cv
296.402 70.6558 296.69 69.3574 298.277 68.6318 cv
299.864 67.9063 302.148 68.0278 303.379 68.9033 cv
304.61 69.7793 304.322 71.0776 302.736 71.8032 cv
cp
.686275 .760784 .396078 rgb
f
374.593 80.6821 mo
367.327 80.8696 li
368.576 88.189 li
368.577 88.189 li
368.56 88.4927 368.722 88.7979 369.076 89.0493 cv
369.882 89.623 371.378 89.7026 372.416 89.2275 cv
372.999 88.9609 373.313 88.5767 373.336 88.189 cv
374.593 80.6821 li
cp
.141176 .164706 .188235 rgb
f
373.187 82.2676 mo
371.6 82.9932 369.315 82.8716 368.084 81.9961 cv
366.853 81.1201 367.141 79.8218 368.728 79.0962 cv
370.313 78.3706 372.599 78.4922 373.829 79.3682 cv
375.061 80.2437 374.772 81.542 373.187 82.2676 cv
cp
.686275 .760784 .396078 rgb
f
296.241 68.73 mo
296.176 68.9404 296.143 69.1572 296.143 69.374 cv
296.241 68.73 li
cp
.701961 .701961 .701961 rgb
f
349.518 96.7446 mo
349.518 100.111 li
372.908 86.6064 li
372.908 83.2397 li
349.518 96.7446 li
cp
.156863 .184314 .211765 rgb
f
374.591 83.9268 mo
374.604 83.96 li
374.676 84.9517 374.124 85.9043 372.909 86.6069 cv
372.909 83.2402 li
374.045 82.583 374.61 81.7031 374.61 80.7769 cv
374.591 83.8481 li
374.591 83.9268 li
cp
.117647 .141176 .160784 rgb
f
298.554 72.5859 mo
298.554 75.9526 li
296.971 75.0396 296.149 73.8706 296.143 72.7607 cv
296.143 69.374 li
296.143 70.4907 296.964 71.6665 298.554 72.5859 cv
cp
f
374.61 80.7769 mo
374.61 81.7031 374.045 82.583 372.909 83.2402 cv
349.519 96.7451 li
346.996 98.1963 342.596 98.019 339.692 96.3374 cv
298.554 72.5859 li
296.964 71.6665 296.143 70.4907 296.143 69.374 cv
296.143 69.1572 296.176 68.9404 296.241 68.73 cv
296.445 68.0469 296.978 67.4165 297.844 66.9106 cv
321.234 53.4058 li
323.757 51.9541 328.158 52.1318 331.062 53.813 cv
372.199 77.5649 li
373.789 78.4844 374.61 79.6602 374.61 80.7769 cv
cp
.262745 .309804 .360784 rgb
f
349.519 96.7451 mo
349.519 100.112 li
346.996 101.563 342.596 101.386 339.692 99.7046 cv
339.692 96.3374 li
342.596 98.019 346.996 98.1963 349.519 96.7451 cv
cp
.117647 .141176 .160784 rgb
f
339.692 96.3374 mo
339.692 99.7046 li
298.554 75.9526 li
298.554 72.5859 li
339.692 96.3374 li
cp
.0745098 .0901961 .12549 rgb
f
373.678 79.23 mo
373.748 80.1982 373.21 81.1284 372.023 81.8145 cv
349.185 95.0005 li
346.722 96.418 342.425 96.2446 339.59 94.603 cv
299.423 71.4116 li
297.877 70.5205 297.075 69.3789 297.069 68.2949 cv
297.069 68.2759 li
297.069 67.3779 297.621 66.5186 298.73 65.8706 cv
299.423 65.4731 li
321.568 52.6846 li
324.031 51.2671 328.328 51.4404 331.163 53.082 cv
339.59 57.9502 li
349.185 63.4849 li
371.33 76.2734 li
371.58 76.4209 371.812 76.5684 372.023 76.7285 cv
373.004 77.4531 373.563 78.2998 373.665 79.1206 cv
373.678 79.23 li
cp
.85098 .85098 .85098 rgb
f
349.184 53.313 mo
349.184 95 li
372.022 81.814 li
372.022 40.127 li
349.184 53.313 li
cp
f
373.665 79.1978 mo
373.678 79.23 li
373.748 80.1982 373.21 81.1284 372.023 81.8145 cv
372.023 40.127 li
373.133 39.4858 373.685 38.6265 373.685 37.7222 cv
373.665 79.1206 li
373.665 79.1978 li
cp
.8 .8 .8 rgb
f
297.165 25.96 mo
297.102 26.165 297.069 26.3765 297.069 26.5884 cv
297.165 25.96 li
cp
.701961 .701961 .701961 rgb
f
299.423 29.7246 mo
299.423 71.4116 li
297.877 70.5205 297.075 69.3789 297.069 68.2949 cv
297.069 26.5884 li
297.069 27.6787 297.871 28.8267 299.423 29.7246 cv
cp
f
373.682 37.7212 mo
373.682 38.6245 373.13 39.4854 372.025 40.1294 cv
349.183 53.3149 li
349.082 53.3652 li
346.616 54.7197 342.394 54.5356 339.593 52.9136 cv
299.425 29.728 li
297.87 28.8247 297.067 27.6792 297.067 26.5923 cv
297.067 26.375 297.101 26.166 297.167 25.957 cv
297.368 25.2964 297.887 24.6777 298.73 24.1846 cv
321.565 10.9985 li
324.032 9.57715 328.33 9.75293 331.164 11.3916 cv
371.332 34.5859 li
372.394 35.2046 373.104 35.9404 373.447 36.6929 cv
373.447 36.7012 li
373.606 37.0439 373.682 37.3867 373.682 37.7212 cv
cp
.921569 .921569 .921569 rgb
f
349.185 53.313 mo
349.185 95.0005 li
346.722 96.418 342.425 96.2446 339.59 94.603 cv
339.59 52.9155 li
342.425 54.5571 346.722 54.7305 349.185 53.313 cv
cp
.8 .8 .8 rgb
f
339.59 52.9155 mo
339.59 94.603 li
299.423 71.4116 li
299.423 29.7246 li
339.59 52.9155 li
cp
.74902 .74902 .74902 rgb
f
371.041 56.6797 mo
368.916 55.4868 li
368.666 55.2939 367.466 54.6021 367.183 54.4775 cv
365.891 53.9077 364.281 54.0464 362.53 55.0576 cv
358.287 57.5068 354.849 64.0781 354.849 69.7349 cv
354.849 72.9775 355.981 75.2085 357.745 76.0669 cv
360.965 77.8882 li
361.164 76.3369 li
361.681 76.1846 362.215 75.9561 362.763 75.6392 cv
367.006 73.1899 370.445 66.6187 370.445 60.9624 cv
370.445 59.5137 370.217 58.2695 369.81 57.2554 cv
371.041 56.6797 li
cp
level3{
gsave
clp
[-10.4604 21.4395 -21.4395 -10.4604 367.803 54.7798 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.65098 .65098 .65098 ]
/C1 [.65098 .65098 .65098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.65098 .65098 .65098 ]
/C1 [.701961 .701961 .701961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.701961 .701961 .701961 ]
/C1 [.65098 .65098 .65098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.65098 .65098 .65098 ]
/C1 [.552941 .552941 .552941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.552941 .552941 .552941 ]
/C1 [.552941 .552941 .552941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.552941 .552941 .552941 ]
/C1 [.501961 .501961 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.501961 .501961 .501961 ]
/C1 [.501961 .501961 .501961 ]
/N 1 
>>
]
/Bounds [.202174 .205343 .595852 .597404 .853722 .86515 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-10.4604 21.4395 -21.4395 -10.4604 367.803 54.7798 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fWNrh8ZEgdAZE^[>
Z*CR=Yct@9Yct@9YHP.5YHP.5Y-+q1Y-+q1Xf\_-Xf\_,XK8M)XK8M(X/i;%X/i;$WiE)!WiE%tWMukr
WMuhpW2QYnW2QVlVl-GjVl$>gVP^5fVN$RpNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pW
NK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pUL4Xr+J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
~>
<~VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fWNrh8ZEgdAZE^[>
Z*CR=Yct@9Yct@9YHP.5YHP.5Y-+q1Y-+q1Xf\_-Xf\_,XK8M)XK8M(X/i;%X/i;$WiE)!WiE%tWMukr
WMuhpW2QYnW2QVlVl-GjVl$>gVP^5fVN$RpNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pW
NK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pUL4Xr+J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
~>
<~VP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fWNrh8ZEgdAZE^[>
Z*CR=Yct@9Yct@9YHP.5YHP.5Y-+q1Y-+q1Xf\_-Xf\_,XK8M)XK8M(X/i;%X/i;$WiE)!WiE%tWMukr
WMuhpW2QYnW2QVlVl-GjVl$>gVP^5fVN$RpNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pW
NK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pUL4Xr+J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
373.283 62.6167 mo
373.283 68.2734 369.845 74.8447 365.602 77.2939 cv
361.359 79.7437 357.92 77.1436 357.92 71.4868 cv
357.92 65.8301 361.359 59.2588 365.602 56.8096 cv
369.845 54.3604 373.283 56.96 373.283 62.6167 cv
cp
.74902 .74902 .74902 rgb
f
373.528 63.4316 mo
373.528 68.5518 370.415 74.499 366.575 76.7158 cv
362.735 78.9331 359.623 76.5796 359.623 71.46 cv
359.623 66.3403 362.735 60.3926 366.575 58.1758 cv
370.415 55.959 373.528 58.312 373.528 63.4316 cv
cp
.470588 .470588 .470588 rgb
f
393.674 70.3003 mo
372.265 59.1367 li
372.053 58.9736 371.038 58.3887 370.798 58.2832 cv
369.705 57.8008 368.344 57.9185 366.863 58.7739 cv
363.274 60.8452 360.366 66.4033 360.366 71.1875 cv
360.366 73.9302 361.324 75.8169 362.816 76.543 cv
385.151 88.2383 li
385.319 86.9263 li
385.756 86.7974 386.208 86.604 386.672 86.3364 cv
390.261 84.2646 393.169 78.7065 393.169 73.9224 cv
393.169 72.6978 392.977 71.645 392.632 70.7876 cv
393.674 70.3003 li
cp
level3{
gsave
clp
[-9.07893 18.608 -18.608 -9.07893 381.245 63.3794 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-9.07893 18.608 -18.608 -9.07893 381.245 63.3794 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
395.57 75.3218 mo
395.57 80.1064 392.661 85.6641 389.073 87.7358 cv
385.485 89.8071 382.576 87.6084 382.576 82.8242 cv
382.576 78.04 385.485 72.4819 389.073 70.4102 cv
392.661 68.3384 395.57 70.5376 395.57 75.3218 cv
cp
.74902 .74902 .74902 rgb
f
368.405 37.4077 mo
368.287 63.8413 li
368.25 64.043 368.206 64.9429 368.218 65.1445 cv
368.272 66.0654 368.831 66.9751 369.937 67.7256 cv
372.615 69.5439 377.442 69.7388 380.717 68.1616 cv
382.594 67.2573 383.549 65.9668 383.521 64.688 cv
383.679 37.4341 li
382.722 37.749 li
382.479 37.4873 382.188 37.2358 381.842 37.001 cv
379.163 35.1831 374.337 34.9878 371.063 36.5654 cv
370.224 36.9692 369.571 37.4507 369.104 37.9731 cv
368.405 37.4077 li
cp
level3{
gsave
clp
[16.0604 .78236 -.260688 16.0788 367.99 51.9771 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.501961 .501961 .501961 ]
/C1 [.501961 .501961 .501961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.501961 .501961 .501961 ]
/C1 [.552941 .552941 .552941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.552941 .552941 .552941 ]
/C1 [.552941 .552941 .552941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.552941 .552941 .552941 ]
/C1 [.65098 .65098 .65098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.65098 .65098 .65098 ]
/C1 [.701961 .701961 .701961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.701961 .701961 .701961 ]
/C1 [.65098 .65098 .65098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.65098 .65098 .65098 ]
/C1 [.65098 .65098 .65098 ]
/N 1 
>>
]
/Bounds [.13485 .146278 .402596 .404148 .794657 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[16.0604 .78236 -.260688 16.0788 367.99 51.9771 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0%L5V%NNK&pWNK&pWNK&pWNK&pWNK&pWNK&pW
NK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWVP^5fVP^5fVl-GjVl-GkW2QYnW2QYo
WMukrWMuksWiE)!WiE,#X/i;%X/i>'XK8M)XK8P+Xf\_-Xfeh0Y-+q1Y-5%4YHP.5YHY78Yct@9Yd(I<
Z*CR=ZEgdAZEgdAWMZPiVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
~>
<~J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0%L5V%NNK&pWNK&pWNK&pWNK&pWNK&pWNK&pW
NK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWVP^5fVP^5fVl-GjVl-GkW2QYnW2QYo
WMukrWMuksWiE)!WiE,#X/i;%X/i>'XK8M)XK8P+Xf\_-Xfeh0Y-+q1Y-5%4YHP.5YHY78Yct@9Yd(I<
Z*CR=ZEgdAZEgdAWMZPiVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
~>
<~J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0%L5V%NNK&pWNK&pWNK&pWNK&pWNK&pWNK&pW
NK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWNK&pWVP^5fVP^5fVl-GjVl-GkW2QYnW2QYo
WMukrWMuksWiE)!WiE,#X/i;%X/i>'XK8M)XK8P+Xf\_-Xfeh0Y-+q1Y-5%4YHP.5YHY78Yct@9Yd(I<
Z*CR=ZEgdAZEgdAWMZPiVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5fVP^5f
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
371.177 34.4302 mo
374.451 32.853 379.277 33.0479 381.956 34.8662 cv
384.636 36.6841 384.152 39.4365 380.878 41.0137 cv
377.603 42.5913 372.776 42.396 370.098 40.5781 cv
367.418 38.7603 367.901 36.0078 371.177 34.4302 cv
cp
.74902 .74902 .74902 rgb
f
367.483 37.3696 mo
367.351 41.668 li
367.309 41.894 367.26 42.9038 367.273 43.1304 cv
367.334 44.1636 367.961 45.1846 369.202 46.0269 cv
372.208 48.0669 377.624 48.2861 381.299 46.5156 cv
383.405 45.501 384.478 44.0532 384.446 42.6177 cv
384.623 37.3989 li
383.549 37.7524 li
383.277 37.4585 382.95 37.1768 382.562 36.9126 cv
379.556 34.8726 374.14 34.6538 370.465 36.4238 cv
369.523 36.877 368.791 37.4175 368.269 38.0039 cv
367.483 37.3696 li
cp
level3{
gsave
clp
[17.8161 .867884 -.289185 17.8364 367.104 41.0415 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.580392 .580392 .580392 ]
/C1 [.580392 .580392 .580392 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.580392 .580392 .580392 ]
/C1 [.631373 .631373 .631373 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.631373 .631373 .631373 ]
/C1 [.631373 .631373 .631373 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.631373 .631373 .631373 ]
/C1 [.729412 .729412 .729412 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.729412 .729412 .729412 ]
/C1 [.780392 .780392 .780392 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.780392 .780392 .780392 ]
/C1 [.729412 .729412 .729412 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.729412 .729412 .729412 ]
/C1 [.729412 .729412 .729412 ]
/N 1 
>>
]
/Bounds [.13485 .146278 .402596 .404148 .794657 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[17.8161 .867884 -.289185 17.8364 367.104 41.0415 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Pa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DuR\-:ITqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R]"5Ja]"5Ja]=Y\e]=Y\f]Y(ni]Y(nj
]tM+m]tM+n^:q=q^:q@s^V@Ou^V@S"^qdb$^qde&_83t(_8=(+_SX1,_Sa:/_o'C0_o0L3`5KU4`5T^7
`Pog8`l?$<`l?$<]t1ed]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja
~>
<~Pa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DuR\-:ITqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R]"5Ja]"5Ja]=Y\e]=Y\f]Y(ni]Y(nj
]tM+m]tM+n^:q=q^:q@s^V@Ou^V@S"^qdb$^qde&_83t(_8=(+_SX1,_Sa:/_o'C0_o0L3`5KU4`5T^7
`Pog8`l?$<`l?$<]t1ed]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja
~>
<~Pa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DsPa%DuR\-:ITqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R]"5Ja]"5Ja]=Y\e]=Y\f]Y(ni]Y(nj
]tM+m]tM+n^:q=q^:q@s^V@Ou^V@S"^qdb$^qde&_83t(_8=(+_SX1,_Sa:/_o'C0_o0L3`5KU4`5T^7
`Pog8`l?$<`l?$<]t1ed]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
370.593 34.0283 mo
374.268 32.2578 379.684 32.4771 382.69 34.5171 cv
385.696 36.5571 385.154 39.646 381.479 41.416 cv
377.805 43.186 372.388 42.9673 369.382 40.9272 cv
366.376 38.8867 366.918 35.7983 370.593 34.0283 cv
cp
.827451 .827451 .827451 rgb
f
396.961 69.334 mo
396.488 69.2144 li
391.914 68.0493 li
389.565 66.6909 li
391.198 66.0898 392.657 66.2783 393.768 67.127 cv
393.832 67.1772 li
394.75 67.8105 li
396.599 69.0815 li
396.961 69.334 li
cp
.65098 .65098 .65098 rgb
f
389.563 65.3901 mo
391.915 66.7476 li
389.536 68.1206 li
387.185 66.7632 li
389.563 65.3901 li
cp
.8 .8 .8 rgb
f
389.536 69.4326 mo
387.185 68.0757 li
387.185 66.7632 li
389.536 68.1206 li
389.536 69.4326 li
cp
.65098 .65098 .65098 rgb
f
389.537 69.4346 mo
384.592 76.3076 li
382.237 74.9497 li
383.403 72.1694 385.16 69.6689 387.184 68.0767 cv
389.537 69.4346 li
cp
.8 .8 .8 rgb
f
383.771 86.9155 mo
381.421 85.5576 li
380.994 84.5391 380.761 83.2773 380.761 81.8042 cv
380.761 80.6943 380.898 79.5518 381.146 78.4092 cv
383.495 79.7627 li
383.771 86.9155 li
cp
.65098 .65098 .65098 rgb
f
395.543 66.8516 mo
394.607 67.9805 li
396.96 69.3359 li
397.897 68.208 li
395.543 66.8516 li
cp
.8 .8 .8 rgb
f
398.342 74.3677 mo
398.342 73.332 398.225 72.4009 398.009 71.5845 cv
399.076 70.2808 li
397.897 68.208 li
396.96 69.3359 li
395.798 67.8022 393.997 67.2808 391.915 68.0474 cv
391.915 66.7476 li
389.536 68.1206 li
389.536 69.4326 li
387.511 71.0273 385.754 73.5259 384.591 76.3081 cv
383.529 76.0708 li
382.292 79.4937 li
383.495 79.7646 li
383.248 80.9067 383.11 82.0518 383.11 83.1616 cv
383.11 84.6357 383.348 85.8975 383.771 86.917 cv
382.647 88.4092 li
383.797 90.5215 li
385.072 88.8311 li
386.218 89.8618 387.786 90.1328 389.555 89.4756 cv
389.521 91.0415 li
391.9 89.7134 li
391.934 88.0815 li
393.682 86.6997 395.229 84.6455 396.365 82.3154 cv
397.375 82.521 li
398.584 79.0913 li
397.671 78.9063 li
398.099 77.3911 398.342 75.8481 398.342 74.3677 cv
cp
.74902 .74902 .74902 rgb
f
381.178 74.7109 mo
383.529 76.0708 li
384.591 76.3081 li
382.237 74.9497 li
381.178 74.7109 li
cp
.65098 .65098 .65098 rgb
f
382.292 79.4937 mo
379.938 78.1387 li
381.178 74.7109 li
383.529 76.0708 li
382.292 79.4937 li
cp
.8 .8 .8 rgb
f
383.771 86.917 mo
382.647 88.4092 li
380.297 87.0532 li
381.421 85.5576 li
383.771 86.917 li
cp
f
383.797 90.5215 mo
382.647 88.4092 li
380.297 87.0532 li
381.444 89.1636 li
383.797 90.5215 li
cp
.65098 .65098 .65098 rgb
f
396.753 75.3906 mo
396.753 79.8594 394.036 85.0513 390.685 86.9863 cv
387.332 88.9214 384.615 86.8672 384.615 82.3984 cv
384.615 77.9292 387.332 72.7378 390.685 70.8027 cv
394.036 68.8677 396.753 70.9214 396.753 75.3906 cv
cp
.470588 .470588 .470588 rgb
f
394.851 74.3457 mo
394.851 74.812 394.567 75.353 394.218 75.5552 cv
393.868 75.7568 393.585 75.5425 393.585 75.0767 cv
393.585 74.6104 393.868 74.0693 394.218 73.8672 cv
394.567 73.6655 394.851 73.8799 394.851 74.3457 cv
cp
.301961 .301961 .301961 rgb
f
391.915 71.8267 mo
391.915 72.293 391.632 72.8345 391.282 73.0361 cv
390.933 73.2378 390.649 73.0239 390.649 72.5576 cv
390.649 72.0918 390.933 71.5503 391.282 71.3486 cv
391.632 71.1465 391.915 71.3608 391.915 71.8267 cv
cp
f
389.462 73.8789 mo
389.462 74.3452 389.178 74.8867 388.829 75.0884 cv
388.479 75.29 388.195 75.0762 388.195 74.6099 cv
388.195 74.144 388.479 73.6025 388.829 73.4009 cv
389.178 73.1987 389.462 73.4131 389.462 73.8789 cv
cp
f
387.421 76.7368 mo
387.421 77.2031 387.138 77.7446 386.788 77.9463 cv
386.438 78.1479 386.155 77.9341 386.155 77.4678 cv
386.155 77.0015 386.438 76.4604 386.788 76.2583 cv
387.138 76.0566 387.421 76.271 387.421 76.7368 cv
cp
f
386.521 80.3164 mo
386.521 80.7827 386.237 81.3242 385.888 81.5259 cv
385.538 81.7275 385.255 81.5137 385.255 81.0474 cv
385.255 80.5815 385.538 80.04 385.888 79.8379 cv
386.237 79.6362 386.521 79.8506 386.521 80.3164 cv
cp
f
392.952 76.293 mo
392.952 76.7593 392.669 77.3008 392.319 77.5024 cv
391.97 77.7041 391.687 77.4902 391.687 77.0239 cv
391.687 76.5581 391.97 76.0166 392.319 75.8149 cv
392.669 75.6128 392.952 75.8271 392.952 76.293 cv
cp
f
390.646 81.2363 mo
390.646 81.7026 390.362 82.2441 390.013 82.4458 cv
389.663 82.6475 389.38 82.4331 389.38 81.9673 cv
389.38 81.501 389.663 80.96 390.013 80.7578 cv
390.362 80.5562 390.646 80.7705 390.646 81.2363 cv
cp
f
388.993 82.9048 mo
388.993 83.3706 388.71 83.9121 388.36 84.1138 cv
388.011 84.3159 387.728 84.1016 387.728 83.6357 cv
387.728 83.1694 388.011 82.6279 388.36 82.4263 cv
388.71 82.2246 388.993 82.4385 388.993 82.9048 cv
cp
f
388.993 80.4009 mo
388.993 80.8667 388.71 81.4082 388.36 81.6099 cv
388.011 81.812 387.728 81.5977 387.728 81.1318 cv
387.728 80.6655 388.011 80.124 388.36 79.9224 cv
388.71 79.7207 388.993 79.9346 388.993 80.4009 cv
cp
f
388.195 78.561 mo
388.195 79.0273 387.912 79.5688 387.563 79.7705 cv
387.213 79.9722 386.93 79.7578 386.93 79.292 cv
386.93 78.8257 387.213 78.2842 387.563 78.0825 cv
387.912 77.8809 388.195 78.0952 388.195 78.561 cv
cp
f
389.462 76.1855 mo
389.462 76.6514 389.178 77.1929 388.829 77.3945 cv
388.479 77.5967 388.195 77.3823 388.195 76.916 cv
388.195 76.4502 388.479 75.9087 388.829 75.707 cv
389.178 75.5049 389.462 75.7192 389.462 76.1855 cv
cp
f
391.279 74.2246 mo
391.279 74.6904 390.995 75.2319 390.646 75.4336 cv
390.297 75.6357 390.013 75.4214 390.013 74.9551 cv
390.013 74.4893 390.297 73.9478 390.646 73.7461 cv
390.995 73.5444 391.279 73.7583 391.279 74.2246 cv
cp
f
393.041 74.2246 mo
393.041 74.6904 392.757 75.2319 392.407 75.4336 cv
392.059 75.6357 391.774 75.4214 391.774 74.9551 cv
391.774 74.4893 392.059 73.9478 392.407 73.7461 cv
392.757 73.5444 393.041 73.7583 393.041 74.2246 cv
cp
f
394.218 72.0396 mo
394.218 72.5054 393.935 73.0469 393.585 73.249 cv
393.235 73.4507 392.952 73.2363 392.952 72.7705 cv
392.952 72.3042 393.235 71.7627 393.585 71.561 cv
393.935 71.3594 394.218 71.5732 394.218 72.0396 cv
cp
f
386.521 83.4312 mo
386.521 83.897 386.237 84.4385 385.888 84.6406 cv
385.538 84.8423 385.255 84.6279 385.255 84.1621 cv
385.255 83.6958 385.538 83.1543 385.888 82.9526 cv
386.237 82.751 386.521 82.9653 386.521 83.4312 cv
cp
f
388.195 85.3218 mo
388.195 85.7876 387.912 86.3291 387.563 86.5308 cv
387.213 86.7329 386.93 86.5186 386.93 86.0522 cv
386.93 85.5864 387.213 85.0449 387.563 84.8433 cv
387.912 84.6411 388.195 84.8555 388.195 85.3218 cv
cp
f
390.646 83.8247 mo
390.646 84.2905 390.362 84.832 390.013 85.0337 cv
389.663 85.2358 389.38 85.0215 389.38 84.5552 cv
389.38 84.0894 389.663 83.5479 390.013 83.3462 cv
390.362 83.144 390.646 83.3584 390.646 83.8247 cv
cp
f
392.548 81.5913 mo
392.548 82.0576 392.265 82.5991 391.915 82.8008 cv
391.565 83.0024 391.282 82.7886 391.282 82.3223 cv
391.282 81.8564 391.565 81.3149 391.915 81.1128 cv
392.265 80.9111 392.548 81.1255 392.548 81.5913 cv
cp
f
393.812 79.3267 mo
393.812 79.7925 393.528 80.334 393.179 80.5361 cv
392.829 80.7378 392.546 80.5234 392.546 80.0576 cv
392.546 79.5913 392.829 79.0498 393.179 78.8481 cv
393.528 78.6465 393.812 78.8608 393.812 79.3267 cv
cp
f
394.307 77.0195 mo
394.307 77.4854 394.023 78.0269 393.674 78.2285 cv
393.324 78.4307 393.041 78.2163 393.041 77.75 cv
393.041 77.2842 393.324 76.7427 393.674 76.541 cv
394.023 76.3389 394.307 76.5532 394.307 77.0195 cv
cp
f
393.46 70.1016 mo
394.5 70.9536 395.142 72.5459 395.142 74.7119 cv
395.142 79.1812 392.425 84.3726 389.073 86.3076 cv
388.071 86.8857 387.13 87.1006 386.297 87.0088 cv
387.402 87.9146 388.957 87.9834 390.685 86.9863 cv
394.036 85.0513 396.753 79.8594 396.753 75.3906 cv
396.753 72.2568 395.414 70.3174 393.46 70.1016 cv
cp
.8 .8 .8 rgb
f
391.357 77.3784 mo
391.072 77.2183 li
390.839 77.0825 li
390.666 77.0059 390.449 77.0249 390.214 77.1606 cv
389.644 77.4897 389.182 78.3726 389.182 79.1328 cv
389.182 79.5684 389.334 79.8682 389.571 79.9834 cv
390.004 80.2285 li
390.03 80.02 li
390.245 79.9263 li
390.815 79.5972 391.277 78.7139 391.277 77.9541 cv
391.277 77.7593 391.247 77.5923 391.192 77.4561 cv
391.357 77.3784 li
cp
level3{
gsave
clp
[-1.40556 2.88082 -2.88082 -1.40556 390.923 77.1235 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.40556 2.88082 -2.88082 -1.40556 390.923 77.1235 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
391.659 78.1763 mo
391.659 78.9365 391.197 79.8193 390.627 80.1484 cv
390.057 80.4775 389.595 80.1284 389.595 79.3682 cv
389.595 78.6079 390.057 77.7251 390.627 77.396 cv
391.197 77.0669 391.659 77.416 391.659 78.1763 cv
cp
.74902 .74902 .74902 rgb
f
397.16 25.0435 mo
397.16 31.8247 li
397.144 31.8247 li
397.052 33.2378 395.99 34.7173 393.983 35.8799 cv
379.61 44.1743 li
378.85 44.6172 378.005 44.9771 377.127 45.2529 cv
374.1 46.2227 370.571 46.2646 367.946 45.311 cv
367.47 45.144 367.026 44.9434 366.616 44.709 cv
330.981 24.1323 li
329.468 23.2627 328.731 22.0918 328.731 20.8711 cv
328.731 20.7456 328.74 20.6118 328.757 20.4785 cv
328.757 14.6924 li
333.648 15.6289 li
335.086 14.8008 li
346.282 8.33789 li
350.128 6.11377 355.939 5.87939 359.268 7.79443 cv
392.763 27.1338 li
397.16 25.0435 li
cp
.686275 .686275 .686275 rgb
f
367.946 38.8647 mo
367.946 45.311 li
367.47 45.144 367.026 44.9434 366.616 44.709 cv
330.981 24.1323 li
329.468 23.2627 328.731 22.0918 328.731 20.8711 cv
328.731 20.7456 328.74 20.6118 328.757 20.4785 cv
328.757 14.6924 li
333.648 15.6289 li
335.086 14.8008 li
343.372 19.0151 355.212 25.0435 355.212 25.0435 cv
367.946 38.8647 li
cp
.501961 .501961 .501961 rgb
f
377.127 31.7241 mo
377.127 45.2529 li
374.1 46.2227 370.571 46.2646 367.946 45.311 cv
367.946 31.7241 li
377.127 31.7241 li
cp
.552941 .552941 .552941 rgb
f
366.618 38.2109 mo
330.978 17.6333 li
327.647 15.7109 328.064 12.353 331.91 10.1328 cv
346.28 1.83643 li
350.125 -.383301 355.941 -.624512 359.271 1.29785 cv
394.912 21.8755 li
398.242 23.7979 397.824 27.1563 393.979 29.376 cv
379.609 37.6724 li
375.765 39.8921 369.948 40.1333 366.618 38.2109 cv
cp
.74902 .74902 .74902 rgb
f
372.262 38.6729 mo
370.218 38.6729 368.361 38.2515 367.037 37.4863 cv
331.396 16.9092 li
330.561 16.4272 329.565 15.5967 329.565 14.3755 cv
329.565 13.1528 330.572 11.8711 332.328 10.8574 cv
346.698 2.56104 li
348.597 1.46533 351.122 .836426 353.629 .836426 cv
355.673 .836426 357.528 1.25684 358.853 2.02197 cv
394.494 22.6001 li
395.329 23.082 396.324 23.9121 396.324 25.1328 cv
396.324 26.3555 395.317 27.6382 393.562 28.6514 cv
379.191 36.9482 li
377.294 38.0439 374.768 38.6729 372.262 38.6729 cv
cp
.8 .8 .8 rgb
f
396.324 25.1357 mo
396.324 25.729 396.082 26.3481 395.622 26.9331 cv
395.287 26.5654 394.878 26.2725 394.493 26.0469 cv
358.849 5.46973 li
358.214 5.10205 357.444 4.80908 356.6 4.6167 cv
355.688 4.39941 354.686 4.28271 353.632 4.28271 cv
352.395 4.28271 351.156 4.43311 349.986 4.72559 cv
348.782 5.01807 347.662 5.46143 346.7 6.01318 cv
332.327 14.3076 li
331.433 14.8262 330.738 15.4111 330.262 16.0215 cv
329.86 15.5786 329.568 15.0352 329.568 14.3745 cv
329.568 13.1538 330.571 11.8745 332.327 10.8545 cv
346.7 2.56006 li
347.662 2.0083 348.782 1.57324 349.986 1.28076 cv
351.156 .988281 352.395 .837891 353.632 .837891 cv
354.686 .837891 355.688 .946289 356.6 1.16357 cv
357.444 1.36426 358.214 1.65723 358.849 2.0249 cv
394.493 22.6021 li
395.329 23.0786 396.324 23.9146 396.324 25.1357 cv
cp
.501961 .501961 .501961 rgb
f
356.6 1.16357 mo
356.6 4.6167 li
355.688 4.39941 354.686 4.28271 353.632 4.28271 cv
352.395 4.28271 351.156 4.43311 349.986 4.72559 cv
349.986 1.28076 li
351.156 .988281 352.395 .837891 353.632 .837891 cv
354.686 .837891 355.688 .946289 356.6 1.16357 cv
cp
.552941 .552941 .552941 rgb
f
349.986 1.28076 mo
349.986 4.72559 li
348.782 5.01807 347.662 5.46143 346.7 6.01318 cv
332.327 14.3076 li
331.433 14.8262 330.738 15.4111 330.262 16.0215 cv
329.86 15.5786 329.568 15.0352 329.568 14.3745 cv
329.568 13.1538 330.571 11.8745 332.327 10.8545 cv
346.7 2.56006 li
347.662 2.0083 348.782 1.57324 349.986 1.28076 cv
cp
.686275 .686275 .686275 rgb
f
375.702 35.729 mo
373.044 35.729 370.537 35.0615 368.824 33.8979 cv
367.229 32.8169 366.413 31.3887 366.524 29.8784 cv
366.649 28.1777 367.968 26.6016 370.142 25.5542 cv
371.854 24.7295 374.004 24.2744 376.192 24.2744 cv
378.851 24.2744 381.357 24.9414 383.071 26.105 cv
384.666 27.187 385.482 28.6143 385.37 30.125 cv
385.244 31.8257 383.927 33.4023 381.753 34.4492 cv
380.04 35.2739 377.891 35.729 375.702 35.729 cv
cp
.682353 .682353 .682353 rgb
f
370.504 26.3076 mo
374.179 24.5376 379.595 24.7568 382.602 26.7969 cv
385.607 28.8369 385.065 31.9258 381.391 33.6958 cv
377.716 35.4658 372.3 35.2471 369.293 33.207 cv
366.287 31.1665 366.829 28.0781 370.504 26.3076 cv
cp
level3{
gsave
clp
[17.1943 0 0 17.1943 367.351 30.002 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[17.1943 0 0 17.1943 367.351 30.002 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
324.581 52.4551 mo
326.702 53.7168 li
330.465 55.9609 li
333.881 54.0068 li
332.798 52.4995 331.515 51.3496 330.175 50.7915 cv
330.074 50.7466 329.984 50.7134 329.884 50.6909 cv
329.203 50.4453 328.566 50.4009 327.997 50.501 cv
324.581 52.4551 li
cp
.262745 .309804 .360784 rgb
f
333.881 54.0068 mo
330.462 55.9619 li
329.86 56.9785 li
333.278 55.0229 li
333.881 54.0068 li
cp
.156863 .184314 .211765 rgb
f
329.861 56.9766 mo
332.15 63.8877 li
335.567 61.9336 li
335.567 61.6548 335.567 61.3643 335.545 61.063 cv
335.366 58.9082 334.495 56.7085 333.278 55.0229 cv
329.861 56.9766 li
cp
.262745 .309804 .360784 rgb
f
330.297 69.7046 mo
331.47 69.2021 li
334.306 67.583 li
334.328 67.5718 li
334.886 67.2485 li
334.897 67.2485 li
335.064 67.1255 335.221 66.9917 335.377 66.8354 cv
336.215 65.9419 336.717 64.4907 336.739 62.626 cv
333.312 64.5801 li
332.44 66.0649 li
330.297 69.7046 li
cp
.109804 .129412 .168627 rgb
f
321.544 57.584 mo
326.825 54.52 li
326.825 54.52 328.046 59.9814 327.941 59.9814 cv
327.837 59.9814 322.717 58.2793 322.717 58.2793 cv
321.544 57.584 li
cp
.262745 .309804 .360784 rgb
f
324.407 66.2109 mo
327.83 64.2563 li
325.686 62.8076 li
324.407 66.2109 li
cp
.156863 .184314 .211765 rgb
f
322.717 58.2793 mo
322.744 55.9688 323.695 54.4312 325.143 54.167 cv
324.575 52.4556 li
325.148 52.3491 325.783 52.4023 326.468 52.6396 cv
326.562 52.6724 326.656 52.7051 326.751 52.7466 cv
328.09 53.2993 329.385 54.4585 330.462 55.9619 cv
329.86 56.9785 li
331.07 58.6592 331.945 60.8662 332.122 63.022 cv
332.146 63.3228 332.151 63.6084 332.148 63.8877 cv
333.317 64.585 li
333.297 66.4404 332.793 67.8945 331.953 68.7837 cv
331.806 68.9434 331.642 69.0825 331.474 69.2017 cv
331.47 69.2056 li
331.117 69.4595 330.724 69.6274 330.294 69.7051 cv
329.726 67.9937 li
329.201 68.0898 328.612 68.022 327.979 67.7603 cv
326.902 67.3159 325.872 66.3857 325.01 65.1914 cv
324.407 66.2109 li
322.896 64.1138 321.802 61.3525 321.585 58.6655 cv
321.552 58.2925 321.54 57.9321 321.544 57.584 cv
322.717 58.2793 li
cp
.0745098 .0901961 .12549 rgb
f
332.148 63.8877 mo
333.317 64.585 li
336.739 62.626 li
335.567 61.9336 li
332.148 63.8877 li
cp
.156863 .184314 .211765 rgb
f
301.504 66.1348 mo
301.504 67.957 302.611 70.0742 303.979 70.8633 cv
305.346 71.6528 306.453 70.8149 306.453 68.9922 cv
306.453 67.1699 305.346 65.0527 303.979 64.2637 cv
302.611 63.4746 301.504 64.312 301.504 66.1348 cv
cp
.45098 .45098 .45098 rgb
f
301.504 65.0332 mo
301.936 64.7827 li
302.427 64.4966 li
302.792 64.3354 303.248 64.3745 303.744 64.6611 cv
304.945 65.3545 305.919 67.2153 305.919 68.8169 cv
305.919 69.7354 305.598 70.3672 305.099 70.6104 cv
304.356 71.0386 li
304.301 70.5996 li
304.154 70.5566 304.003 70.4917 303.848 70.4019 cv
302.646 69.7085 301.673 67.8477 301.673 66.2456 cv
301.673 65.8359 301.737 65.4834 301.853 65.1963 cv
301.504 65.0332 li
cp
level3{
gsave
clp
[2.96016 6.0671 6.0671 -2.96016 302.337 64.5405 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.96016 6.0671 6.0671 -2.96016 302.337 64.5405 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
300.868 66.7144 mo
300.868 68.3159 301.843 70.1768 303.044 70.8706 cv
304.245 71.564 305.219 70.8276 305.219 69.2261 cv
305.219 67.6245 304.245 65.7637 303.044 65.0698 cv
301.843 64.3765 300.868 65.1123 300.868 66.7144 cv
cp
.0745098 .0901961 .12549 rgb
f
301.504 58.2427 mo
301.504 60.0649 302.611 62.1821 303.979 62.9712 cv
305.346 63.7607 306.453 62.9229 306.453 61.1006 cv
306.453 59.2778 305.346 57.1606 303.979 56.3716 cv
302.611 55.5825 301.504 56.4199 301.504 58.2427 cv
cp
.45098 .45098 .45098 rgb
f
301.504 57.1411 mo
301.936 56.8906 li
302.427 56.6045 li
302.792 56.4434 303.248 56.4824 303.744 56.769 cv
304.945 57.4624 305.919 59.3232 305.919 60.9253 cv
305.919 61.8433 305.598 62.4751 305.099 62.7183 cv
304.356 63.147 li
304.301 62.7075 li
304.154 62.6646 304.003 62.5996 303.848 62.5098 cv
302.646 61.8164 301.673 59.9556 301.673 58.354 cv
301.673 57.9438 301.737 57.5913 301.853 57.3042 cv
301.504 57.1411 li
cp
level3{
gsave
clp
[2.96069 6.0682 6.0682 -2.96069 302.337 56.6479 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.96069 6.0682 6.0682 -2.96069 302.337 56.6479 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
300.868 58.8223 mo
300.868 60.4243 301.843 62.2847 303.044 62.9785 cv
304.245 63.6719 305.219 62.936 305.219 61.334 cv
305.219 59.7324 304.245 57.8716 303.044 57.1777 cv
301.843 56.4844 300.868 57.2207 300.868 58.8223 cv
cp
.0745098 .0901961 .12549 rgb
f
301.504 50.3506 mo
301.504 52.1733 302.611 54.29 303.979 55.0796 cv
305.346 55.8687 306.453 55.0308 306.453 53.2085 cv
306.453 51.3857 305.346 49.2686 303.979 48.4795 cv
302.611 47.6904 301.504 48.5283 301.504 50.3506 cv
cp
.45098 .45098 .45098 rgb
f
301.504 49.249 mo
301.936 48.9985 li
302.427 48.7124 li
302.792 48.5513 303.248 48.5908 303.744 48.877 cv
304.945 49.5703 305.919 51.4312 305.919 53.0332 cv
305.919 53.9512 305.598 54.583 305.099 54.8262 cv
304.356 55.2549 li
304.301 54.8154 li
304.154 54.7725 304.003 54.7075 303.848 54.6177 cv
302.646 53.9243 301.673 52.0635 301.673 50.4619 cv
301.673 50.0518 301.737 49.6992 301.853 49.4121 cv
301.504 49.249 li
cp
level3{
gsave
clp
[2.96016 6.0671 6.0671 -2.96016 302.335 48.7568 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.96016 6.0671 6.0671 -2.96016 302.335 48.7568 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
300.868 50.9302 mo
300.868 52.5322 301.843 54.3931 303.044 55.0864 cv
304.245 55.7798 305.219 55.0439 305.219 53.4419 cv
305.219 51.8403 304.245 49.9795 303.044 49.2861 cv
301.843 48.5923 300.868 49.3286 300.868 50.9302 cv
cp
.0745098 .0901961 .12549 rgb
f
301.504 42.4585 mo
301.504 44.2813 302.611 46.3984 303.979 47.1875 cv
305.346 47.9766 306.453 47.1387 306.453 45.3164 cv
306.453 43.4941 305.346 41.3765 303.979 40.5874 cv
302.611 39.7983 301.504 40.6362 301.504 42.4585 cv
cp
.45098 .45098 .45098 rgb
f
301.504 41.3569 mo
301.936 41.1064 li
302.427 40.8208 li
302.792 40.6592 303.248 40.6987 303.744 40.9849 cv
304.945 41.6787 305.919 43.5396 305.919 45.1411 cv
305.919 46.0591 305.598 46.6909 305.099 46.9341 cv
304.356 47.3628 li
304.301 46.9233 li
304.154 46.8804 304.003 46.8154 303.848 46.7261 cv
302.646 46.0322 301.673 44.1714 301.673 42.5698 cv
301.673 42.1597 301.737 41.8071 301.853 41.52 cv
301.504 41.3569 li
cp
level3{
gsave
clp
[2.96026 6.06732 6.06732 -2.96026 302.335 40.8647 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.96026 6.06732 6.06732 -2.96026 302.335 40.8647 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
300.868 43.0381 mo
300.868 44.6401 301.843 46.501 303.044 47.1943 cv
304.245 47.8882 305.219 47.1519 305.219 45.5498 cv
305.219 43.9482 304.245 42.0874 303.044 41.394 cv
301.843 40.7002 300.868 41.4365 300.868 43.0381 cv
cp
.0745098 .0901961 .12549 rgb
f
237.425 300.889 mo
237.109 301.625 li
235.871 298.984 230.934 297.382 225.464 298.635 cv
217.72 300.41 li
216.98 300.579 216.38 300.857 215.934 301.188 cv
215.547 300.823 215.066 300.433 215.066 300.433 cv
215.066 302.469 li
215.066 302.553 li
215.066 302.565 li
215.055 303.034 215.321 303.489 215.925 303.837 cv
227.799 310.693 li
229.542 311.699 232.8 311.109 233.767 309.611 cv
236.755 304.983 li
237.259 304.202 237.453 303.444 237.407 302.733 cv
237.425 302.764 li
237.425 300.889 li
cp
level3{
gsave
clp
[22.3594 0 0 22.3594 215.065 304.698 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.3594 0 0 22.3594 215.065 304.698 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
236.755 302.851 mo
233.767 307.479 li
232.8 308.977 229.542 309.568 227.799 308.561 cv
215.925 301.706 li
214.205 300.712 215.175 298.861 217.72 298.278 cv
225.464 296.503 li
233.011 294.774 239.583 298.469 236.755 302.851 cv
cp
.74902 .74902 .74902 rgb
f
236.755 302.851 mo
233.767 307.479 li
232.8 308.977 229.542 309.568 227.799 308.561 cv
215.925 301.706 li
214.205 300.712 215.175 298.861 217.72 298.278 cv
225.464 296.503 li
233.011 294.774 239.583 298.469 236.755 302.851 cv
cp
level3{
gsave
clp
[22.3652 0 0 22.3652 215.06 302.565 ]ct
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0901961 .12549 ]
/C1 [.0745098 .0901961 .12549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0901961 .12549 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.156863 .184314 .211765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.156863 .184314 .211765 ]
/C1 [.156863 .184314 .211765 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.156863 .184314 .211765 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.117647 .141176 .160784 ]
/C1 [.117647 .141176 .160784 ]
/N 1 
>>
]
/Bounds [.144374 .146278 .393072 .404148 .789895 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.3652 0 0 22.3652 215.06 302.565 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)E.*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*ZlRQ-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Jl-n$Jh+!)IE*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D
~>
<~(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((DnDC,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,UFlk0/"t30/"t30/"t30/"t30/"t30/"t3
0/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t30/"t3
0/"t30/"t30/"t.,pX`],U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
~>
<~+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<W*^.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4Qu,2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HO2E!HO2E!HI.Oceq.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
236.755 301.673 mo
233.767 306.301 li
232.8 307.798 229.542 308.389 227.799 307.383 cv
215.925 300.528 li
214.205 299.535 215.175 297.682 217.72 297.099 cv
225.464 295.325 li
233.011 293.596 239.583 297.292 236.755 301.673 cv
cp
.160784 .188235 .219608 rgb
f
229.068 364.668 mo
229.068 368.604 li
229.068 373.679 225.02 378.709 217.319 382.036 cv
204.266 387.681 185.667 386.303 175.781 378.953 cv
171.728 375.938 169.769 372.392 169.769 368.864 cv
169.769 364.928 li
169.769 368.457 171.728 372.002 175.781 375.018 cv
185.667 382.369 204.266 383.747 217.319 378.1 cv
225.02 374.775 229.068 369.745 229.068 364.668 cv
cp
level3{
gsave
clp
[59.2998 0 0 59.2998 169.769 375.089 ]ct
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0901961 .12549 ]
/C1 [.0745098 .0901961 .12549 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0901961 .12549 ]
/C1 [.0745098 .0862745 .101961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0862745 .101961 ]
/C1 [.0745098 .0862745 .101961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0862745 .101961 ]
/C1 [.113725 .133333 .152941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.113725 .133333 .152941 ]
/C1 [.113725 .133333 .152941 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.113725 .133333 .152941 ]
/C1 [.0745098 .0862745 .101961 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.0745098 .0862745 .101961 ]
/C1 [.0745098 .0862745 .101961 ]
/N 1 
>>
]
/Bounds [.144374 .146278 .393072 .404148 .789895 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[59.2998 0 0 59.2998 169.769 375.089 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m
',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',26%*??.@*??.@*??.@*??.@*??.@*??.@
*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@*??.@
*??.@*??.@*??.<'GD,n',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m',)#m
~>
<~(Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((Ddl((D[c%()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$
()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()Io4+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3O(D[c%()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$()@Z$
~>
<~+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<VdL+<ML?)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4
)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B0eE-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h
-RU8h-RU8h-RU8b)]BV5)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4)B'M4
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
229.068 364.668 mo
229.068 369.745 225.02 374.775 217.319 378.1 cv
204.266 383.747 185.668 382.369 175.781 375.018 cv
171.728 372.002 169.768 368.457 169.768 364.928 cv
169.768 359.858 173.816 354.828 181.518 351.497 cv
194.571 345.85 213.169 347.234 223.056 354.58 cv
227.109 357.594 229.068 361.14 229.068 364.668 cv
.113725 .133333 .152941 rgb
f
231.044 360.397 mo
231.044 364.594 li
231.044 370.008 226.726 375.374 218.512 378.92 cv
204.588 384.943 184.751 383.473 174.207 375.632 cv
169.882 372.417 167.793 368.635 167.793 364.872 cv
167.793 360.673 li
167.793 364.438 169.882 368.219 174.207 371.435 cv
184.751 379.276 204.588 380.746 218.512 374.723 cv
226.726 371.176 231.044 365.811 231.044 360.397 cv
cp
level3{
gsave
clp
[63.251 0 0 63.251 167.793 371.512 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[63.251 0 0 63.251 167.793 371.512 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
231.044 360.397 mo
231.044 365.811 226.726 371.176 218.512 374.723 cv
204.588 380.746 184.751 379.276 174.207 371.435 cv
169.882 368.219 167.793 364.438 167.793 360.673 cv
167.793 355.266 172.111 349.9 180.325 346.347 cv
194.248 340.325 214.085 341.8 224.63 349.635 cv
228.954 352.851 231.044 356.633 231.044 360.397 cv
.156863 .184314 .211765 rgb
f
199.218 378.293 mo
189.73 378.293 180.378 375.887 174.207 371.298 cv
169.909 368.102 167.819 364.346 167.793 360.605 cv
167.793 360.582 167.793 360.56 167.793 360.537 cv
167.793 319.736 li
167.793 323.5 169.882 327.282 174.207 330.498 cv
180.378 335.086 189.731 337.493 199.219 337.493 cv
205.944 337.493 212.736 336.284 218.512 333.786 cv
226.726 330.239 231.044 324.872 231.044 319.459 cv
231.044 327.405 li
229.876 326.703 li
226.112 335.997 218.474 337.311 214.457 337.311 cv
212.874 337.311 211.852 337.107 211.852 337.107 cv
213.409 338.043 li
214.51 338.184 li
213.815 338.124 213.409 338.043 213.409 338.043 cv
213.409 372.248 li
230.864 362.171 li
229.971 366.914 225.757 371.457 218.512 374.586 cv
212.736 377.084 205.943 378.293 199.218 378.293 cv
level3{
gsave
clp
[63.251 0 0 63.251 167.793 348.876 ]ct
/17 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .74902 .74902 ]
/C1 [.74902 .74902 .74902 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.74902 .74902 .74902 ]
/C1 [.8 .8 .8 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.8 .8 .8 ]
/C1 [.8 .8 .8 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.8 .8 .8 ]
/C1 [.85098 .85098 .85098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.85098 .85098 .85098 ]
/C1 [.85098 .85098 .85098 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.85098 .85098 .85098 ]
/C1 [.8 .8 .8 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.8 .8 .8 ]
/C1 [.8 .8 .8 ]
/N 1 
>>
]
/Bounds [.13485 .146278 .402596 .40891 .794657 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[63.251 0 0 63.251 167.793 348.876 ]ct
clp
/17 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@P"`QHEKbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Te(NF-g"G'3g"G'3g"G'3g"G'3g"G'3
g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3
g"G'3g"G'3g"G'3ccjVWbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@P"`QHEKbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Te(NF-g"G'3g"G'3g"G'3g"G'3g"G'3
g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3
g"G'3g"G'3g"G'3ccjVWbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
~>
<~^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@Ou^V@P"`QHEKbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Te(NF-g"G'3g"G'3g"G'3g"G'3g"G'3
g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3
g"G'3g"G'3g"G'3ccjVWbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /17 /Gradient get_res exec grestore
}if
np
231.044 319.459 mo
231.044 324.873 226.726 330.239 218.512 333.786 cv
204.588 339.808 184.751 338.338 174.207 330.498 cv
169.882 327.282 167.793 323.5 167.793 319.736 cv
167.793 314.328 172.111 308.962 180.325 305.41 cv
194.248 299.387 214.085 300.863 224.63 308.698 cv
228.954 311.914 231.044 315.695 231.044 319.459 cv
cp
.921569 .921569 .921569 rgb
f
231.044 315.516 mo
231.044 319.713 li
231.044 325.127 226.726 330.493 218.512 334.04 cv
204.588 340.062 184.751 338.593 174.207 330.751 cv
169.882 327.536 167.793 323.754 167.793 319.99 cv
167.793 315.793 li
167.793 319.557 169.882 323.338 174.207 326.554 cv
184.751 334.395 204.588 335.865 218.512 329.842 cv
226.726 326.295 231.044 320.93 231.044 315.516 cv
cp
level3{
gsave
clp
[63.251 0 0 63.251 167.793 326.631 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[63.251 0 0 63.251 167.793 326.631 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
231.044 315.802 mo
231.044 321.216 226.726 326.582 218.512 330.128 cv
204.588 336.151 184.751 334.681 174.207 326.84 cv
169.882 323.625 167.793 319.843 167.793 316.079 cv
167.793 310.671 172.111 305.305 180.325 301.752 cv
194.248 295.73 214.085 297.206 224.63 305.041 cv
228.954 308.256 231.044 312.039 231.044 315.802 cv
cp
.184314 .215686 .25098 rgb
f
231.044 307.65 mo
231.044 315.802 li
231.044 321.216 226.726 326.582 218.512 330.128 cv
204.588 336.151 184.751 334.681 174.207 326.84 cv
169.882 323.625 167.793 319.843 167.793 316.079 cv
167.793 307.926 li
167.793 311.69 169.882 315.472 174.207 318.688 cv
184.751 326.529 204.588 327.999 218.512 321.976 cv
226.726 318.429 231.044 313.063 231.044 307.65 cv
cp
level3{
gsave
clp
[63.251 0 0 63.251 167.793 320.743 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[63.251 0 0 63.251 167.793 320.743 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
231.044 307.935 mo
231.044 313.349 226.726 318.715 218.512 322.262 cv
204.588 328.285 184.751 326.815 174.207 318.974 cv
169.882 315.758 167.793 311.976 167.793 308.212 cv
167.793 302.804 172.111 297.439 180.325 293.886 cv
194.248 287.864 214.085 289.339 224.63 297.174 cv
228.954 300.39 231.044 304.171 231.044 307.935 cv
cp
.901961 .901961 .901961 rgb
f
231.044 305.836 mo
231.044 307.935 li
231.044 313.349 226.726 318.715 218.512 322.262 cv
204.588 328.285 184.751 326.815 174.207 318.974 cv
169.882 315.758 167.793 311.976 167.793 308.212 cv
167.793 306.114 li
167.793 309.877 169.882 313.66 174.207 316.875 cv
184.751 324.716 204.588 326.186 218.512 320.164 cv
226.726 316.617 231.044 311.25 231.044 305.836 cv
cp
level3{
gsave
clp
[63.251 0 0 63.251 167.793 315.903 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[63.251 0 0 63.251 167.793 315.903 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
231.044 306.123 mo
231.044 311.537 226.726 316.903 218.512 320.45 cv
204.588 326.472 184.751 325.002 174.207 317.162 cv
169.882 313.946 167.793 310.164 167.793 306.4 cv
167.793 300.992 172.111 295.626 180.325 292.073 cv
194.248 286.051 214.085 287.527 224.63 295.361 cv
228.954 298.578 231.044 302.359 231.044 306.123 cv
cp
.184314 .215686 .25098 rgb
f
199.252 318.619 mo
191.644 318.619 184.427 316.628 179.946 313.297 cv
177.124 311.198 175.631 308.804 175.631 306.376 cv
175.631 302.779 178.958 299.193 184.532 296.782 cv
188.882 294.9 194.085 293.907 199.58 293.907 cv
207.188 293.907 214.407 295.895 218.892 299.226 cv
221.713 301.325 223.205 303.718 223.205 306.146 cv
223.205 309.748 219.879 313.334 214.306 315.741 cv
209.952 317.624 204.748 318.619 199.252 318.619 cv
cp
.14902 .172549 .2 rgb
f
184.532 297.937 mo
188.882 296.055 194.085 295.061 199.58 295.061 cv
207.188 295.061 214.407 297.049 218.892 300.381 cv
221.521 302.336 222.979 304.549 223.167 306.807 cv
223.192 306.586 223.205 306.367 223.205 306.146 cv
223.205 303.718 221.713 301.325 218.892 299.226 cv
214.407 295.895 207.188 293.907 199.58 293.907 cv
194.085 293.907 188.882 294.9 184.532 296.782 cv
178.958 299.193 175.631 302.779 175.631 306.376 cv
175.631 306.542 175.655 306.707 175.669 306.872 cv
176.048 303.5 179.3 300.2 184.532 297.937 cv
cp
.117647 .141176 .160784 rgb
f
215.06 303.487 mo
215.06 305.64 li
215.06 308.196 213.021 310.728 209.145 312.402 cv
202.573 315.245 193.21 314.551 188.233 310.85 cv
186.192 309.333 185.206 307.547 185.206 305.771 cv
185.206 303.618 li
185.206 305.394 186.192 307.179 188.233 308.697 cv
193.21 312.398 202.573 313.091 209.145 310.249 cv
213.021 308.575 215.06 306.042 215.06 303.487 cv
cp
level3{
gsave
clp
[29.8535 0 0 29.8535 185.206 308.819 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[29.8535 0 0 29.8535 185.206 308.819 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
215.06 303.622 mo
215.06 306.177 213.021 308.709 209.145 310.383 cv
202.573 313.226 193.21 312.533 188.233 308.832 cv
186.192 307.314 185.206 305.529 185.206 303.752 cv
185.206 301.2 187.244 298.667 191.121 296.991 cv
197.693 294.148 207.056 294.844 212.032 298.542 cv
214.073 300.06 215.06 301.845 215.06 303.622 cv
cp
.219608 .258824 .301961 rgb
f
200.039 311.116 mo
195.638 311.116 191.451 309.957 188.84 308.015 cv
187.128 306.743 186.223 305.268 186.223 303.752 cv
186.223 301.54 188.206 299.36 191.526 297.923 cv
194.044 296.834 197.051 296.259 200.224 296.259 cv
204.626 296.259 208.813 297.418 211.426 299.359 cv
213.138 300.631 214.043 302.106 214.043 303.623 cv
214.043 305.838 212.062 308.016 208.742 309.451 cv
206.221 310.541 203.213 311.116 200.039 311.116 cv
cp
.156863 .184314 .211765 rgb
f
191.526 298.75 mo
194.044 297.661 197.051 297.085 200.224 297.085 cv
204.626 297.085 208.813 298.245 211.426 300.185 cv
212.951 301.319 213.831 302.614 214.006 303.955 cv
214.016 303.843 214.043 303.734 214.043 303.623 cv
214.043 302.106 213.138 300.631 211.426 299.359 cv
208.813 297.418 204.626 296.259 200.224 296.259 cv
197.051 296.259 194.044 296.834 191.526 297.923 cv
188.206 299.36 186.223 301.54 186.223 303.752 cv
186.223 303.917 186.238 304.083 186.26 304.247 cv
186.447 302.15 188.372 300.115 191.526 298.75 cv
cp
.117647 .141176 .160784 rgb
f
162.126 334.75 mo
163.083 335.105 li
165.785 330.92 li
166.751 329.423 170.009 328.833 171.752 329.839 cv
181.687 335.575 li
184.492 334.737 li
184.485 337.06 li
184.486 337.934 183.502 338.863 181.832 339.246 cv
174.087 341.02 li
167.945 342.427 162.45 340.242 162.141 337.017 cv
162.126 337.02 li
162.126 334.75 li
cp
level3{
gsave
clp
[22.3652 0 0 22.3652 162.126 335.397 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.3652 0 0 22.3652 162.126 335.397 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
162.796 332.454 mo
165.785 327.825 li
166.751 326.328 170.009 325.737 171.752 326.744 cv
183.626 333.599 li
185.346 334.592 184.376 336.444 181.832 337.027 cv
174.087 338.801 li
166.541 340.531 159.968 336.835 162.796 332.454 cv
cp
.701961 .701961 .701961 rgb
f
162.126 333.627 mo
163.083 333.982 li
165.785 329.797 li
166.751 328.3 170.009 327.709 171.752 328.716 cv
181.687 334.452 li
184.492 333.614 li
184.485 334.844 li
184.486 335.718 183.502 336.647 181.832 337.03 cv
174.087 338.804 li
167.945 340.211 162.45 338.026 162.141 334.801 cv
162.126 334.804 li
162.126 333.627 li
cp
level3{
gsave
clp
[22.3652 0 0 22.3652 162.126 333.727 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[22.3652 0 0 22.3652 162.126 333.727 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
162.796 331.331 mo
165.785 326.702 li
166.751 325.205 170.009 324.614 171.752 325.621 cv
183.626 332.476 li
185.346 333.469 184.376 335.321 181.832 335.904 cv
174.087 337.678 li
166.541 339.408 159.968 335.712 162.796 331.331 cv
cp
.160784 .188235 .219608 rgb
f
212.743 299.204 mo
185.826 283.495 li
183.82 284.452 181.814 285.408 179.808 286.365 cv
178.263 287.101 176.718 287.838 175.173 288.575 cv
174.47 288.91 173.767 289.246 173.063 289.581 cv
172.223 289.981 171.359 290.131 170.7 290.861 cv
170.208 291.406 169.875 292.071 169.547 292.728 cv
169.372 293.08 169.195 293.435 169.089 293.814 cv
168.992 294.164 168.957 294.528 168.939 294.891 cv
168.899 295.738 168.844 296.944 168.9 297.79 cv
168.977 298.964 168.875 300.218 169.071 301.375 cv
169.287 300.894 169.634 300.446 169.916 299.999 cv
170.032 299.813 170.149 299.626 170.285 299.455 cv
170.874 298.71 171.797 298.275 172.738 298.159 cv
174.105 297.989 175.571 298.423 176.746 299.11 cv
195.741 310.21 li
198.025 311.529 200.838 311.529 203.121 310.21 cv
212.743 304.656 li
214.841 303.444 214.841 300.415 212.743 299.204 cv
cp
.701961 .701961 .701961 rgb
f
195.741 308.398 mo
195.567 308.296 li
191.885 306.144 188.203 303.992 184.52 301.839 cv
182.12 300.436 177.417 297.541 175.018 296.137 cv
174.246 295.686 173.509 295.04 172.646 294.769 cv
171.957 294.553 170.824 294.437 170.182 294.828 cv
169.71 295.115 169.448 295.651 169.3 296.183 cv
169.152 296.715 169.093 297.272 168.9 297.79 cv
168.751 296.569 168.719 295.335 168.804 294.109 cv
168.831 293.726 168.869 293.34 168.985 292.975 cv
169.348 291.829 170.271 290.898 171.279 290.316 cv
172.415 289.66 173.55 289.004 174.686 288.349 cv
178.05 286.407 181.413 284.465 184.776 282.523 cv
185.642 282.023 186.709 282.025 187.573 282.527 cv
212.743 297.391 li
214.841 298.602 214.841 301.631 212.743 302.843 cv
203.121 308.398 li
200.838 309.716 198.025 309.716 195.741 308.398 cv
cp
.85098 .85098 .85098 rgb
f
206.956 300.304 mo
206.956 301.355 206.118 302.396 204.524 303.083 cv
201.824 304.252 197.976 303.967 195.93 302.446 cv
195.091 301.822 194.686 301.088 194.686 300.358 cv
194.686 299.309 195.523 298.268 197.117 297.579 cv
199.818 296.411 203.666 296.697 205.712 298.217 cv
206.551 298.84 206.956 299.575 206.956 300.304 cv
cp
.65098 .65098 .65098 rgb
f
205.524 288.651 mo
205.524 300.187 li
205.524 300.992 204.882 301.79 203.66 302.317 cv
201.59 303.213 198.64 302.995 197.071 301.829 cv
196.428 301.35 196.117 300.788 196.117 300.228 cv
196.117 288.693 li
196.117 289.252 196.428 289.815 197.071 290.293 cv
198.64 291.459 201.59 291.677 203.66 290.782 cv
204.882 290.254 205.524 289.457 205.524 288.651 cv
cp
level3{
gsave
clp
[9.40723 0 0 9.40723 196.117 295.76 ]ct
/18 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.690196 .690196 .690196 ]
/C1 [.690196 .690196 .690196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.690196 .690196 .690196 ]
/C1 [.741176 .741176 .741176 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.741176 .741176 .741176 ]
/C1 [.741176 .741176 .741176 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.741176 .741176 .741176 ]
/C1 [.792157 .792157 .792157 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.792157 .792157 .792157 ]
/C1 [.792157 .792157 .792157 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.792157 .792157 .792157 ]
/C1 [.741176 .741176 .741176 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.741176 .741176 .741176 ]
/C1 [.741176 .741176 .741176 ]
/N 1 
>>
]
/Bounds [.13485 .146278 .402596 .40891 .794657 .797826 ]
/Encode [0 1 0 1 0 1 0 1 0 1 0 1 0 1 ]
>>
>>/Gradient add_res /18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[9.40723 0 0 9.40723 196.117 295.76 ]ct
clp
/18 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@;[_'5d]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m`6-6Fb0%lLb0%lLb0%lLb0%lLb0%lL
b0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lL
b0%lLb0%lLb0%lL^qIFp]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
~>
<~Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@;[_'5d]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m`6-6Fb0%lLb0%lLb0%lLb0%lLb0%lL
b0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lL
b0%lLb0%lLb0%lL^qIFp]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
~>
<~Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@9Yct@;[_'5d]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m`6-6Fb0%lLb0%lLb0%lLb0%lLb0%lL
b0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lL
b0%lLb0%lLb0%lL^qIFp]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /18 /Gradient get_res exec grestore
}if
np
205.524 288.651 mo
205.524 289.457 204.882 290.254 203.66 290.782 cv
201.59 291.677 198.64 291.459 197.071 290.293 cv
196.428 289.815 196.117 289.252 196.117 288.693 cv
196.117 287.888 196.759 287.09 197.981 286.562 cv
200.052 285.667 203.002 285.885 204.57 287.051 cv
205.214 287.529 205.524 288.091 205.524 288.651 cv
cp
.862745 .862745 .862745 rgb
f
207.644 287.84 mo
207.644 292.346 li
207.644 293.514 206.712 294.672 204.94 295.437 cv
201.937 296.737 197.657 296.419 195.381 294.728 cv
194.449 294.034 193.998 293.218 193.998 292.406 cv
193.998 287.9 li
193.998 288.712 194.449 289.528 195.381 290.222 cv
197.657 291.914 201.937 292.231 204.94 290.931 cv
206.712 290.167 207.644 289.008 207.644 287.84 cv
cp
level3{
gsave
clp
[13.6455 0 0 13.6455 193.998 292.039 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[13.6455 0 0 13.6455 193.998 292.039 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
207.644 287.84 mo
207.644 289.008 206.712 290.167 204.94 290.931 cv
201.937 292.231 197.657 291.914 195.381 290.222 cv
194.449 289.528 193.998 288.712 193.998 287.9 cv
193.998 286.734 194.929 285.576 196.702 284.809 cv
199.705 283.51 203.985 283.829 206.26 285.519 cv
207.193 286.212 207.644 287.029 207.644 287.84 cv
cp
.921569 .921569 .921569 rgb
f
231.432 327.638 mo
230.242 333.029 li
229.876 333.446 li
224.536 339.467 li
213.409 338.043 li
211.852 337.107 li
211.852 337.107 224.628 339.661 229.876 326.703 cv
231.432 327.638 li
.184314 .215686 .25098 rgb
f
231.432 327.638 mo
231.432 361.843 li
213.409 372.248 li
213.409 338.043 li
213.409 338.043 226.184 340.596 231.432 327.638 cv
.156863 .184314 .211765 rgb
f
213.409 338.043 mo
213.409 372.246 li
211.85 371.311 li
211.85 337.11 li
213.409 338.043 li
cp
.117647 .141176 .160784 rgb
f
230.495 334.777 mo
230.495 342.232 li
227.911 343.666 li
227.575 343.86 li
226.376 344.531 li
223.69 346.015 li
223.273 346.249 li
222.032 346.931 li
219.103 348.558 li
217.873 349.24 li
216.987 349.728 li
215.432 350.592 li
214.333 351.203 li
214.333 343.757 li
216.439 342.588 li
218.025 341.704 li
219.551 340.859 li
220.069 340.574 li
222.389 339.283 li
223.944 338.418 li
225.063 337.797 li
225.938 337.309 li
226.061 337.238 li
230.495 334.777 li
.2 .235294 .270588 rgb
f
229.786 335.177 mo
229.786 341.769 li
214.338 350.336 li
214.338 351.211 li
230.505 342.238 li
230.505 334.771 li
229.786 335.177 li
.6 .6 .6 rgb
f
230.505 334.771 mo
229.786 335.177 li
229.786 341.769 li
230.505 342.238 li
230.505 334.771 li
.0745098 .0901961 .12549 rgb
f
214.333 349.891 mo
214.333 346.015 li
216.439 342.588 li
218.025 341.704 li
219.551 340.859 li
220.069 340.574 li
214.333 349.891 li
.258824 .305882 .360784 rgb
f
219.91 347.246 mo
226.061 337.238 li
230.46 334.796 li
229.786 335.177 li
229.786 336.111 li
224.499 344.701 li
219.91 347.246 li
f
219.103 348.558 mo
219.91 347.246 li
224.499 344.701 li
223.69 346.015 li
223.273 346.249 li
222.032 346.931 li
219.103 348.558 li
.631373 .635294 .65098 rgb
f
229.786 336.111 mo
229.786 335.177 li
230.46 334.796 li
230.495 334.777 li
230.495 334.959 li
229.786 336.111 li
.145098 .172549 .235294 rgb
f
216.237 349.283 mo
222.389 339.283 li
223.944 338.418 li
217.791 348.421 li
216.237 349.283 li
.258824 .305882 .360784 rgb
f
215.432 350.592 mo
216.237 349.283 li
217.791 348.421 li
216.987 349.728 li
215.432 350.592 li
.631373 .635294 .65098 rgb
f
226.376 344.531 mo
226.377 344.529 li
226.628 344.39 li
226.376 344.531 li
227.187 343.21 mo
229.786 338.981 li
229.786 340.626 li
228.715 342.363 li
227.187 343.21 li
.258824 .305882 .360784 rgb
f
226.377 344.529 mo
227.187 343.21 li
228.715 342.363 li
227.911 343.666 li
227.575 343.86 li
226.628 344.39 li
226.377 344.529 li
.631373 .635294 .65098 rgb
f
229.786 340.626 mo
229.786 338.981 li
230.495 337.828 li
230.495 339.476 li
229.786 340.626 li
.145098 .172549 .235294 rgb
f
214.338 353.079 mo
218.57 350.657 li
218.57 353.576 li
214.338 355.994 li
214.338 353.079 li
cp
.8 .8 .8 rgb
f
218.448 350.95 mo
218.448 353.42 li
214.46 355.702 li
214.46 353.235 li
218.448 350.95 li
cp
.117647 .141176 .160784 rgb
f
220.328 349.675 mo
224.562 347.284 li
224.562 350.203 li
220.328 352.59 li
220.328 349.675 li
cp
.8 .8 .8 rgb
f
224.439 347.577 mo
224.439 350.047 li
220.45 352.298 li
220.45 349.831 li
224.439 347.577 li
cp
.117647 .141176 .160784 rgb
f
226.318 346.271 mo
230.552 343.911 li
230.552 346.83 li
226.318 349.186 li
226.318 346.271 li
cp
.8 .8 .8 rgb
f
230.43 344.204 mo
230.43 346.674 li
226.441 348.895 li
226.441 346.427 li
230.43 344.204 li
cp
.117647 .141176 .160784 rgb
f
214.338 357.804 mo
218.57 355.382 li
218.57 358.301 li
214.338 360.719 li
214.338 357.804 li
cp
.8 .8 .8 rgb
f
218.448 355.674 mo
218.448 358.145 li
214.46 360.427 li
214.46 357.959 li
218.448 355.674 li
cp
.117647 .141176 .160784 rgb
f
220.328 354.4 mo
224.562 352.009 li
224.562 354.928 li
220.328 357.315 li
220.328 354.4 li
cp
.8 .8 .8 rgb
f
224.439 352.301 mo
224.439 354.772 li
220.45 357.024 li
220.45 354.556 li
224.439 352.301 li
cp
.117647 .141176 .160784 rgb
f
226.318 350.997 mo
230.552 348.636 li
230.552 351.555 li
226.318 353.912 li
226.318 350.997 li
cp
.8 .8 .8 rgb
f
230.43 348.928 mo
230.43 351.399 li
226.441 353.62 li
226.441 351.153 li
230.43 348.928 li
cp
.117647 .141176 .160784 rgb
f
214.338 362.529 mo
218.57 360.108 li
218.57 363.026 li
214.338 365.444 li
214.338 362.529 li
cp
.8 .8 .8 rgb
f
218.448 360.4 mo
218.448 362.871 li
214.46 365.153 li
214.46 362.685 li
218.448 360.4 li
cp
.117647 .141176 .160784 rgb
f
220.328 359.125 mo
224.562 356.735 li
224.562 359.653 li
220.328 362.041 li
220.328 359.125 li
cp
.8 .8 .8 rgb
f
224.439 357.027 mo
224.439 359.498 li
220.45 361.749 li
220.45 359.282 li
224.439 357.027 li
cp
.117647 .141176 .160784 rgb
f
226.318 355.722 mo
230.552 353.362 li
230.552 356.28 li
226.318 358.636 li
226.318 355.722 li
cp
.8 .8 .8 rgb
f
230.43 353.654 mo
230.43 356.125 li
226.441 358.345 li
226.441 355.877 li
230.43 353.654 li
cp
.117647 .141176 .160784 rgb
f
214.338 367.218 mo
218.57 364.796 li
218.57 367.715 li
214.338 370.133 li
214.338 367.218 li
cp
.8 .8 .8 rgb
f
218.448 365.089 mo
218.448 367.56 li
214.46 369.841 li
214.46 367.375 li
218.448 365.089 li
cp
.117647 .141176 .160784 rgb
f
220.328 363.815 mo
224.562 361.423 li
224.562 364.342 li
220.328 366.729 li
220.328 363.815 li
cp
.8 .8 .8 rgb
f
224.439 361.716 mo
224.439 364.187 li
220.45 366.438 li
220.45 363.97 li
224.439 361.716 li
cp
.117647 .141176 .160784 rgb
f
226.318 360.411 mo
230.552 358.05 li
230.552 360.969 li
226.318 363.326 li
226.318 360.411 li
cp
.8 .8 .8 rgb
f
230.43 358.343 mo
230.43 360.814 li
226.441 363.035 li
226.441 360.567 li
230.43 358.343 li
cp
.117647 .141176 .160784 rgb
f
360.864 393.513 mo
314.991 367.028 li
314.991 364.939 li
343.876 352.5 li
389.748 376.852 li
360.864 393.513 li
cp
.74902 .74902 .74902 rgb
f
360.864 391.423 mo
314.991 364.939 li
343.876 348.279 li
389.748 374.763 li
360.864 391.423 li
cp
.921569 .921569 .921569 rgb
f
389.748 374.763 mo
389.748 376.852 li
360.864 393.513 li
360.864 391.423 li
389.748 374.763 li
cp
.85098 .85098 .85098 rgb
f
360.864 391.423 mo
314.991 364.939 li
314.991 355.116 li
343.876 342.678 li
389.748 374.763 li
360.864 391.423 li
cp
.117647 .141176 .160784 rgb
f
360.864 381.6 mo
314.991 355.116 li
343.876 338.456 li
389.748 364.94 li
360.864 381.6 li
cp
.184314 .215686 .25098 rgb
f
389.748 364.94 mo
389.748 374.763 li
360.864 391.423 li
360.864 381.6 li
389.748 364.94 li
cp
.156863 .184314 .211765 rgb
f
363.426 381.896 mo
386.398 368.646 li
387.205 368.18 388.213 368.762 388.213 369.694 cv
388.213 372.692 li
388.213 373.424 387.822 374.102 387.187 374.468 cv
364.214 387.718 li
363.407 388.184 362.399 387.602 362.399 386.67 cv
362.399 383.672 li
362.399 382.939 362.791 382.262 363.426 381.896 cv
cp
.117647 .141176 .160784 rgb
f
334.375 366.381 mo
314.991 355.133 li
314.991 316.994 li
343.876 304.555 li
363.26 349.721 li
334.375 366.381 li
cp
f
334.375 328.242 mo
314.991 316.994 li
343.876 300.333 li
363.26 311.582 li
334.375 328.242 li
cp
.184314 .215686 .25098 rgb
f
363.26 311.582 mo
363.26 349.721 li
334.375 366.381 li
334.375 328.242 li
363.26 311.582 li
cp
.156863 .184314 .211765 rgb
f
370.158 341.68 mo
370.158 347.506 li
370.158 348.375 369.466 349.237 368.146 349.806 cv
365.912 350.773 362.728 350.537 361.034 349.278 cv
360.34 348.762 360.005 348.155 360.005 347.55 cv
360.005 341.724 li
360.005 342.329 360.34 342.936 361.034 343.452 cv
362.728 344.71 365.912 344.947 368.146 343.98 cv
369.466 343.411 370.158 342.549 370.158 341.68 cv
cp
level3{
gsave
clp
[10.1533 0 0 10.1533 360.005 346.041 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.1533 0 0 10.1533 360.005 346.041 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
368.486 344.099 mo
368.486 344.682 368.021 345.259 367.138 345.641 cv
365.639 346.29 363.503 346.131 362.367 345.288 cv
361.901 344.941 361.677 344.534 361.677 344.128 cv
361.677 343.546 362.142 342.969 363.026 342.586 cv
364.525 341.938 366.661 342.097 367.796 342.94 cv
368.262 343.287 368.486 343.694 368.486 344.099 cv
cp
.156863 .184314 .211765 rgb
f
374.605 334.43 mo
374.605 341.12 li
374.605 342.866 373.213 344.596 370.563 345.74 cv
366.074 347.682 359.677 347.208 356.276 344.679 cv
354.882 343.642 354.208 342.422 354.208 341.208 cv
354.208 334.519 li
354.208 335.733 354.882 336.953 356.276 337.99 cv
359.677 340.518 366.074 340.992 370.563 339.05 cv
373.213 337.906 374.605 336.175 374.605 334.43 cv
cp
level3{
gsave
clp
[20.3975 0 0 20.3975 354.208 340.682 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.3975 0 0 20.3975 354.208 340.682 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
374.605 334.43 mo
374.605 336.175 373.213 337.906 370.563 339.05 cv
366.074 340.992 359.677 340.518 356.276 337.99 cv
354.882 336.953 354.208 335.733 354.208 334.519 cv
354.208 332.775 355.601 331.044 358.249 329.899 cv
362.739 327.957 369.137 328.433 372.537 330.959 cv
373.932 331.997 374.605 333.216 374.605 334.43 cv
cp
.156863 .184314 .211765 rgb
f
345.509 358.626 mo
344.27 350.963 li
339.438 350.984 li
338.195 358.674 li
338.162 358.788 338.141 358.902 338.141 359.017 cv
338.141 359.459 338.386 359.903 338.894 360.281 cv
340.132 361.202 342.461 361.374 344.096 360.667 cv
345.061 360.25 345.567 359.621 345.567 358.985 cv
345.567 358.865 345.546 358.746 345.509 358.626 cv
cp
level3{
gsave
clp
[7.42676 0 0 7.42676 338.141 356.033 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.42676 0 0 7.42676 338.141 356.033 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
344.27 350.963 mo
344.27 351.376 343.939 351.787 343.312 352.057 cv
342.249 352.517 340.733 352.405 339.928 351.806 cv
339.598 351.561 339.438 351.272 339.438 350.984 cv
339.438 350.571 339.769 350.162 340.396 349.89 cv
341.459 349.43 342.974 349.542 343.779 350.141 cv
344.109 350.387 344.27 350.675 344.27 350.963 cv
cp
.184314 .215686 .25098 rgb
f
349.349 327.125 mo
349.349 336.25 li
349.349 337.938 348.464 339.512 347.023 340.386 cv
344.308 342.033 li
343.793 342.341 343.464 342.917 343.464 343.524 cv
343.464 350.829 li
343.464 351.085 343.258 351.353 342.857 351.528 cv
342.178 351.816 341.211 351.744 340.696 351.363 cv
340.48 351.209 340.378 351.024 340.378 350.838 cv
340.378 343.524 li
340.378 341.847 341.272 340.263 342.713 339.388 cv
345.419 337.752 li
345.943 337.434 346.262 336.858 346.262 336.25 cv
346.262 327.125 li
349.349 327.125 li
cp
.501961 .501961 .501961 rgb
f
340.728 351.317 mo
340.728 344.002 li
340.728 342.326 341.622 340.742 343.063 339.868 cv
345.768 338.231 li
346.293 337.913 346.611 337.336 346.611 336.729 cv
346.611 327.604 li
349.349 327.604 li
349.349 327.125 li
346.262 327.125 li
346.262 336.25 li
346.262 336.858 345.943 337.434 345.419 337.752 cv
342.713 339.388 li
341.272 340.263 340.378 341.847 340.378 343.524 cv
340.378 350.838 li
340.378 351.024 340.48 351.209 340.696 351.364 cv
340.747 351.388 li
340.728 351.317 li
cp
.74902 .74902 .74902 rgb
f
360.864 343.601 mo
314.991 317.117 li
314.991 295.239 li
343.876 282.8 li
389.748 326.941 li
360.864 343.601 li
.117647 .141176 .160784 rgb
f
360.864 321.723 mo
314.991 295.239 li
343.876 278.579 li
389.748 305.063 li
360.864 321.723 li
cp
.184314 .215686 .25098 rgb
f
318.063 295.24 mo
343.875 280.351 li
386.676 305.063 li
360.865 319.951 li
318.063 295.24 li
cp
.160784 .188235 .219608 rgb
f
343.875 280.351 mo
318.063 295.24 li
318.583 295.54 li
343.875 280.951 li
386.156 305.362 li
386.676 305.063 li
343.875 280.351 li
cp
.117647 .141176 .160784 rgb
f
389.748 305.063 mo
389.748 326.941 li
360.864 343.601 li
360.864 321.723 li
389.748 305.063 li
.156863 .184314 .211765 rgb
f
361.278 344.477 mo
358.983 343.401 li
358.983 321.01 li
388.798 308.171 li
391.093 327.281 li
361.278 344.477 li
.74902 .74902 .74902 rgb
f
361.278 322.087 mo
358.983 321.01 li
388.798 303.813 li
391.093 304.89 li
361.278 322.087 li
cp
.921569 .921569 .921569 rgb
f
391.096 304.889 mo
391.096 327.282 li
385.361 330.59 li
366.745 341.323 li
361.279 344.478 li
361.279 322.084 li
366.745 318.929 li
385.361 308.198 li
391.096 304.889 li
.85098 .85098 .85098 rgb
f
381.502 365.85 mo
361.851 377.161 li
360.769 377.785 359.437 377.786 358.353 377.163 cv
343.299 368.514 li
342.249 367.912 342.248 366.397 343.297 365.792 cv
362.947 354.482 li
364.03 353.858 365.362 353.857 366.446 354.479 cv
381.5 363.127 li
382.55 363.731 382.551 365.245 381.502 365.85 cv
cp
.65098 .65098 .65098 rgb
f
381.502 365.346 mo
361.851 376.657 li
360.769 377.281 359.437 377.282 358.353 376.66 cv
343.299 368.01 li
342.249 367.408 342.248 365.893 343.297 365.289 cv
362.947 353.978 li
364.03 353.354 365.362 353.353 366.446 353.975 cv
381.5 362.624 li
382.55 363.227 382.551 364.741 381.502 365.346 cv
cp
.8 .8 .8 rgb
f
360.1 376.358 mo
359.621 376.358 359.149 376.232 358.735 375.994 cv
343.682 367.345 li
343.318 367.136 343.279 366.789 343.279 366.649 cv
343.279 366.509 343.318 366.163 343.681 365.954 cv
363.33 354.643 li
363.747 354.403 364.22 354.277 364.699 354.277 cv
365.178 354.277 365.649 354.403 366.063 354.641 cv
381.117 363.29 li
381.48 363.499 381.52 363.845 381.52 363.985 cv
381.52 364.125 381.48 364.472 381.118 364.681 cv
361.468 375.992 li
361.053 376.231 360.579 376.358 360.1 376.358 cv
cp
.65098 .65098 .65098 rgb
f
343.681 366.458 mo
363.33 355.147 li
363.747 354.907 364.22 354.781 364.699 354.781 cv
365.178 354.781 365.649 354.907 366.063 355.145 cv
381.117 363.793 li
381.333 363.918 381.429 364.088 381.475 364.238 cv
381.507 364.135 381.52 364.042 381.52 363.985 cv
381.52 363.845 381.48 363.499 381.117 363.29 cv
366.063 354.641 li
365.649 354.403 365.178 354.277 364.699 354.277 cv
364.22 354.277 363.747 354.403 363.33 354.643 cv
343.681 365.954 li
343.318 366.163 343.279 366.509 343.279 366.649 cv
343.279 366.706 343.292 366.799 343.323 366.901 cv
343.37 366.751 343.465 366.582 343.681 366.458 cv
cp
.54902 .54902 .54902 rgb
f
346.127 367.488 mo
346.34 367.488 346.55 367.432 346.734 367.326 cv
355.213 362.464 li
355.374 362.372 355.392 362.216 355.392 362.155 cv
355.392 362.092 355.374 361.938 355.213 361.845 cv
354.595 361.478 li
354.41 361.372 354.199 361.315 353.986 361.315 cv
353.773 361.315 353.563 361.371 353.379 361.477 cv
344.9 366.339 li
344.739 366.431 344.722 366.586 344.722 366.648 cv
344.722 366.71 344.739 366.865 344.9 366.958 cv
345.519 367.325 li
345.703 367.431 345.914 367.488 346.127 367.488 cv
cp
.117647 .141176 .160784 rgb
f
348.955 369.12 mo
349.168 369.12 349.378 369.064 349.562 368.958 cv
358.041 364.096 li
358.202 364.003 358.22 363.849 358.22 363.787 cv
358.22 363.725 358.202 363.571 358.041 363.477 cv
357.423 363.11 li
357.237 363.003 357.027 362.947 356.813 362.947 cv
356.602 362.947 356.392 363.003 356.207 363.109 cv
347.729 367.971 li
347.567 368.064 347.55 368.218 347.55 368.281 cv
347.55 368.342 347.566 368.497 347.729 368.59 cv
348.346 368.958 li
348.531 369.064 348.741 369.12 348.955 369.12 cv
cp
f
351.783 370.752 mo
351.995 370.752 352.205 370.697 352.39 370.59 cv
360.868 365.729 li
361.03 365.636 361.048 365.481 361.048 365.419 cv
361.048 365.357 361.03 365.203 360.869 365.11 cv
360.251 364.743 li
360.065 364.635 359.855 364.58 359.642 364.58 cv
359.429 364.58 359.22 364.635 359.035 364.742 cv
350.557 369.603 li
350.395 369.696 350.377 369.85 350.377 369.913 cv
350.377 369.975 350.395 370.129 350.556 370.222 cv
351.174 370.589 li
351.359 370.696 351.569 370.752 351.783 370.752 cv
cp
f
354.61 372.384 mo
354.823 372.384 355.033 372.329 355.218 372.223 cv
363.696 367.361 li
363.857 367.268 363.875 367.114 363.875 367.051 cv
363.875 366.99 363.858 366.835 363.696 366.742 cv
363.078 366.375 li
362.894 366.268 362.683 366.211 362.47 366.211 cv
362.257 366.211 362.047 366.268 361.862 366.374 cv
353.384 371.236 li
353.223 371.329 353.205 371.483 353.205 371.544 cv
353.205 371.607 353.223 371.761 353.384 371.855 cv
354.002 372.222 li
354.187 372.329 354.397 372.384 354.61 372.384 cv
cp
f
357.438 374.017 mo
357.651 374.017 357.861 373.96 358.045 373.855 cv
366.524 368.993 li
366.686 368.901 366.703 368.746 366.703 368.684 cv
366.703 368.622 366.686 368.467 366.524 368.375 cv
365.906 368.007 li
365.721 367.9 365.511 367.844 365.298 367.844 cv
365.085 367.844 364.875 367.9 364.69 368.006 cv
356.212 372.868 li
356.051 372.96 356.033 373.115 356.033 373.177 cv
356.033 373.239 356.05 373.394 356.212 373.487 cv
356.829 373.854 li
357.015 373.96 357.225 374.017 357.438 374.017 cv
cp
f
360.267 375.649 mo
360.479 375.649 360.688 375.593 360.873 375.488 cv
369.352 370.625 li
369.513 370.533 369.531 370.378 369.531 370.316 cv
369.531 370.254 369.514 370.099 369.353 370.006 cv
368.734 369.639 li
368.549 369.533 368.339 369.476 368.125 369.476 cv
367.912 369.476 367.703 369.532 367.519 369.638 cv
359.04 374.5 li
358.878 374.593 358.86 374.748 358.86 374.809 cv
358.86 374.872 358.878 375.026 359.039 375.12 cv
359.657 375.487 li
359.843 375.593 360.053 375.649 360.267 375.649 cv
cp
f
356.674 361.412 mo
356.887 361.412 357.096 361.355 357.28 361.25 cv
365.759 356.387 li
365.921 356.294 365.938 356.14 365.938 356.078 cv
365.938 356.016 365.921 355.862 365.76 355.769 cv
365.142 355.401 li
364.956 355.294 364.746 355.239 364.532 355.239 cv
364.319 355.239 364.11 355.294 363.926 355.4 cv
355.447 360.262 li
355.286 360.355 355.268 360.509 355.268 360.572 cv
355.268 360.633 355.285 360.789 355.446 360.881 cv
356.064 361.249 li
356.25 361.355 356.46 361.412 356.674 361.412 cv
cp
f
359.501 363.043 mo
359.714 363.043 359.924 362.988 360.108 362.882 cv
368.587 358.02 li
368.748 357.927 368.766 357.772 368.766 357.71 cv
368.766 357.649 368.749 357.494 368.587 357.401 cv
367.97 357.034 li
367.784 356.927 367.574 356.871 367.36 356.871 cv
367.147 356.871 366.938 356.926 366.754 357.033 cv
358.274 361.895 li
358.113 361.988 358.096 362.142 358.096 362.204 cv
358.096 362.266 358.113 362.42 358.274 362.513 cv
358.893 362.881 li
359.077 362.987 359.288 363.043 359.501 363.043 cv
cp
f
362.329 364.676 mo
362.542 364.676 362.752 364.62 362.937 364.514 cv
371.415 359.652 li
371.576 359.559 371.594 359.405 371.594 359.342 cv
371.594 359.281 371.576 359.126 371.415 359.034 cv
370.797 358.666 li
370.612 358.559 370.401 358.502 370.188 358.502 cv
369.976 358.502 369.766 358.559 369.581 358.665 cv
361.103 363.527 li
360.941 363.62 360.924 363.774 360.924 363.836 cv
360.924 363.898 360.94 364.053 361.103 364.146 cv
361.721 364.513 li
361.905 364.62 362.116 364.676 362.329 364.676 cv
cp
f
365.157 366.308 mo
365.37 366.308 365.579 366.252 365.764 366.147 cv
374.242 361.285 li
374.404 361.192 374.422 361.037 374.422 360.975 cv
374.422 360.913 374.404 360.758 374.243 360.666 cv
373.625 360.298 li
373.439 360.192 373.229 360.135 373.016 360.135 cv
372.803 360.135 372.594 360.191 372.409 360.297 cv
363.931 365.16 li
363.77 365.251 363.751 365.407 363.751 365.468 cv
363.751 365.531 363.769 365.685 363.93 365.778 cv
364.548 366.145 li
364.733 366.251 364.943 366.308 365.157 366.308 cv
cp
f
367.985 367.941 mo
368.197 367.941 368.407 367.884 368.592 367.779 cv
377.07 362.917 li
377.231 362.824 377.249 362.669 377.249 362.607 cv
377.249 362.545 377.232 362.391 377.07 362.297 cv
376.453 361.93 li
376.268 361.824 376.058 361.767 375.844 361.767 cv
375.631 361.767 375.421 361.824 375.237 361.929 cv
366.758 366.792 li
366.597 366.884 366.579 367.039 366.579 367.1 cv
366.579 367.163 366.597 367.318 366.758 367.411 cv
367.376 367.778 li
367.562 367.884 367.771 367.941 367.985 367.941 cv
cp
f
370.813 369.573 mo
371.025 369.573 371.235 369.517 371.42 369.411 cv
379.898 364.549 li
380.06 364.457 380.077 364.301 380.077 364.24 cv
380.077 364.177 380.06 364.023 379.898 363.93 cv
379.28 363.563 li
379.096 363.456 378.885 363.4 378.672 363.4 cv
378.459 363.4 378.249 363.456 378.064 363.562 cv
369.586 368.423 li
369.425 368.516 369.407 368.67 369.407 368.733 cv
369.407 368.794 369.424 368.95 369.586 369.042 cv
370.204 369.41 li
370.389 369.516 370.6 369.573 370.813 369.573 cv
cp
f
385.361 308.198 mo
385.361 330.59 li
366.745 341.323 li
366.745 318.929 li
385.361 308.198 li
.65098 .65098 .65098 rgb
f
366.745 318.929 mo
364.406 317.881 li
383.128 307.083 li
385.361 308.198 li
366.745 318.929 li
cp
.8 .8 .8 rgb
f
343.744 319.696 mo
345.297 320.62 li
348.051 322.262 li
350.552 320.832 li
349.759 319.729 348.819 318.887 347.839 318.478 cv
347.626 318.405 li
347.128 318.225 346.662 318.192 346.245 318.266 cv
343.744 319.696 li
cp
.262745 .309804 .360784 rgb
f
350.552 320.832 mo
348.049 322.263 li
347.608 323.007 li
350.11 321.576 li
350.552 320.832 li
cp
.156863 .184314 .211765 rgb
f
347.609 323.005 mo
349.285 328.064 li
351.786 326.634 li
351.786 326.43 351.786 326.217 351.77 325.997 cv
351.639 324.419 351.001 322.81 350.11 321.576 cv
347.609 323.005 li
cp
.262745 .309804 .360784 rgb
f
347.929 332.322 mo
348.786 331.955 li
350.862 330.769 li
350.879 330.761 li
351.287 330.524 li
351.296 330.524 li
351.418 330.434 351.532 330.336 351.646 330.222 cv
352.26 329.568 352.628 328.505 352.644 327.141 cv
350.135 328.571 li
349.497 329.658 li
347.929 332.322 li
cp
.109804 .129412 .168627 rgb
f
341.521 323.451 mo
345.387 321.208 li
346.204 325.206 li
342.38 323.959 li
341.521 323.451 li
cp
.262745 .309804 .360784 rgb
f
343.617 329.765 mo
346.122 328.334 li
344.553 327.274 li
343.617 329.765 li
cp
.156863 .184314 .211765 rgb
f
342.38 323.959 mo
342.399 322.268 343.096 321.142 344.155 320.949 cv
343.74 319.696 li
344.16 319.619 344.625 319.658 345.126 319.832 cv
345.332 319.91 li
346.313 320.314 347.261 321.163 348.049 322.263 cv
347.608 323.007 li
348.495 324.237 349.135 325.853 349.264 327.43 cv
349.282 327.651 349.286 327.86 349.283 328.064 cv
350.139 328.575 li
350.124 329.933 349.755 330.998 349.141 331.648 cv
349.032 331.765 348.912 331.867 348.79 331.954 cv
348.786 331.957 li
348.528 332.143 348.241 332.265 347.926 332.323 cv
347.511 331.07 li
347.126 331.14 346.695 331.09 346.231 330.899 cv
345.444 330.574 344.689 329.893 344.059 329.019 cv
343.617 329.765 li
342.511 328.23 341.71 326.208 341.552 324.242 cv
341.527 323.969 341.519 323.706 341.521 323.451 cv
342.38 323.959 li
cp
.0745098 .0901961 .12549 rgb
f
349.283 328.064 mo
350.139 328.575 li
352.644 327.141 li
351.786 326.634 li
349.283 328.064 li
cp
.156863 .184314 .211765 rgb
f
384.563 311.123 mo
384.563 318.983 li
383.733 319.459 li
379.673 321.793 li
378.084 322.706 li
375.527 324.172 li
373.301 325.455 li
369.232 327.789 li
367.528 328.771 li
367.528 320.925 li
368.972 320.096 li
371.528 318.623 li
373.34 317.579 li
377.408 315.237 li
379.635 313.956 li
382.19 312.489 li
383.78 311.576 li
384.563 311.123 li
.2 .235294 .270588 rgb
f
383.813 311.542 mo
383.813 318.491 li
367.53 327.864 li
367.53 328.787 li
384.571 318.985 li
384.571 311.115 li
383.813 311.542 li
.258824 .305882 .34902 rgb
f
384.571 311.115 mo
383.813 311.542 li
383.813 318.491 li
384.571 318.985 li
384.571 311.115 li
.160784 .192157 .219608 rgb
f
367.528 328.564 mo
367.528 323.681 li
368.972 320.096 li
371.528 318.623 li
367.894 327.654 li
367.53 327.864 li
367.53 328.559 li
367.528 328.564 li
.333333 .380392 .431373 rgb
f
367.53 328.559 mo
367.53 327.864 li
367.894 327.654 li
367.53 328.559 li
.380392 .439216 .490196 rgb
f
376.004 322.985 mo
379.635 313.956 li
382.19 312.489 li
378.564 321.512 li
376.004 322.985 li
.333333 .380392 .431373 rgb
f
375.527 324.172 mo
376.004 322.985 li
378.564 321.512 li
378.084 322.706 li
375.527 324.172 li
.380392 .439216 .490196 rgb
f
369.706 326.611 mo
373.34 317.579 li
377.408 315.237 li
373.778 324.267 li
369.706 326.611 li
.333333 .380392 .431373 rgb
f
369.232 327.789 mo
369.706 326.611 li
373.778 324.267 li
373.301 325.455 li
369.232 327.789 li
.380392 .439216 .490196 rgb
f
380.154 320.597 mo
383.78 311.576 li
383.813 311.557 li
383.813 318.491 li
380.154 320.597 li
.333333 .380392 .431373 rgb
f
379.673 321.793 mo
380.154 320.597 li
383.813 318.491 li
383.813 311.557 li
383.813 318.491 li
384.059 318.651 li
383.733 319.459 li
379.673 321.793 li
.380392 .439216 .490196 rgb
f
384.059 318.651 mo
383.813 318.491 li
383.813 311.557 li
384.563 311.123 li
384.563 317.402 li
384.059 318.651 li
.298039 .34902 .392157 rgb
f
371.186 332.346 mo
371.186 333.42 370.532 334.668 369.727 335.134 cv
368.921 335.599 368.268 335.106 368.268 334.031 cv
368.268 332.957 368.921 331.708 369.727 331.243 cv
370.532 330.778 371.186 331.271 371.186 332.346 cv
cp
.54902 .54902 .54902 rgb
f
371.186 331.697 mo
370.932 331.548 li
370.642 331.38 li
370.426 331.285 370.157 331.308 369.865 331.477 cv
369.156 331.886 368.582 332.983 368.582 333.927 cv
368.582 334.469 368.771 334.841 369.066 334.985 cv
369.504 335.238 li
369.537 334.978 li
369.623 334.953 369.712 334.915 369.804 334.862 cv
370.512 334.453 371.086 333.356 371.086 332.412 cv
371.086 332.169 371.048 331.961 370.98 331.792 cv
371.186 331.697 li
cp
level3{
gsave
clp
[-1.74543 3.5774 -3.5774 -1.74543 370.694 331.406 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.74543 3.5774 -3.5774 -1.74543 370.694 331.406 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
371.561 332.688 mo
371.561 333.632 370.986 334.729 370.277 335.138 cv
369.569 335.547 368.995 335.113 368.995 334.168 cv
368.995 333.224 369.569 332.127 370.277 331.718 cv
370.986 331.309 371.561 331.744 371.561 332.688 cv
cp
.141176 .164706 .188235 rgb
f
375.273 330.154 mo
375.273 331.228 374.62 332.476 373.814 332.942 cv
373.009 333.407 372.355 332.913 372.355 331.838 cv
372.355 330.764 373.009 329.515 373.814 329.05 cv
374.62 328.585 375.273 329.079 375.273 330.154 cv
cp
.54902 .54902 .54902 rgb
f
375.273 329.504 mo
375.02 329.356 li
374.729 329.188 li
374.514 329.092 374.245 329.116 373.953 329.285 cv
373.244 329.694 372.67 330.791 372.67 331.735 cv
372.67 332.277 372.859 332.649 373.154 332.792 cv
373.592 333.045 li
373.625 332.786 li
373.711 332.76 373.8 332.722 373.892 332.669 cv
374.6 332.26 375.174 331.164 375.174 330.219 cv
375.174 329.977 375.136 329.769 375.068 329.6 cv
375.273 329.504 li
cp
level3{
gsave
clp
[-1.74543 3.5774 -3.5774 -1.74543 374.783 329.214 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.74543 3.5774 -3.5774 -1.74543 374.783 329.214 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
375.648 330.496 mo
375.648 331.44 375.074 332.537 374.365 332.946 cv
373.657 333.355 373.083 332.92 373.083 331.976 cv
373.083 331.032 373.657 329.935 374.365 329.526 cv
375.074 329.117 375.648 329.551 375.648 330.496 cv
cp
.141176 .164706 .188235 rgb
f
379.361 327.721 mo
379.361 328.795 378.708 330.044 377.902 330.509 cv
377.097 330.975 376.443 330.481 376.443 329.407 cv
376.443 328.332 377.097 327.083 377.902 326.619 cv
378.708 326.153 379.361 326.647 379.361 327.721 cv
cp
.54902 .54902 .54902 rgb
f
379.361 327.072 mo
379.106 326.924 li
378.817 326.755 li
378.602 326.661 378.333 326.684 378.041 326.852 cv
377.332 327.261 376.758 328.359 376.758 329.303 cv
376.758 329.844 376.947 330.217 377.242 330.36 cv
377.68 330.613 li
377.713 330.354 li
377.799 330.329 377.888 330.291 377.979 330.238 cv
378.688 329.829 379.262 328.731 379.262 327.787 cv
379.262 327.545 379.224 327.337 379.156 327.168 cv
379.361 327.072 li
cp
level3{
gsave
clp
[-1.74532 3.57718 -3.57718 -1.74532 378.872 326.782 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.74532 3.57718 -3.57718 -1.74532 378.872 326.782 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
379.736 328.063 mo
379.736 329.007 379.162 330.105 378.453 330.513 cv
377.745 330.922 377.171 330.489 377.171 329.544 cv
377.171 328.6 377.745 327.502 378.453 327.093 cv
379.162 326.685 379.736 327.119 379.736 328.063 cv
cp
.141176 .164706 .188235 rgb
f
383.449 325.6 mo
383.449 326.675 382.796 327.923 381.99 328.389 cv
381.185 328.854 380.531 328.36 380.531 327.286 cv
380.531 326.211 381.185 324.962 381.99 324.498 cv
382.796 324.032 383.449 324.526 383.449 325.6 cv
cp
.54902 .54902 .54902 rgb
f
383.449 324.952 mo
383.194 324.803 li
382.905 324.635 li
382.689 324.54 382.421 324.563 382.129 324.732 cv
381.42 325.141 380.846 326.238 380.846 327.182 cv
380.846 327.723 381.035 328.096 381.33 328.24 cv
381.767 328.492 li
381.801 328.233 li
381.887 328.208 381.976 328.169 382.067 328.117 cv
382.775 327.708 383.35 326.611 383.35 325.667 cv
383.35 325.424 383.312 325.216 383.244 325.047 cv
383.449 324.952 li
cp
level3{
gsave
clp
[-1.74532 3.57718 -3.57718 -1.74532 382.958 324.661 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.74532 3.57718 -3.57718 -1.74532 382.958 324.661 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
383.824 325.943 mo
383.824 326.887 383.25 327.984 382.541 328.393 cv
381.833 328.802 381.259 328.368 381.259 327.423 cv
381.259 326.479 381.833 325.381 382.541 324.973 cv
383.25 324.564 383.824 324.998 383.824 325.943 cv
cp
.141176 .164706 .188235 rgb
f
386.74 323.231 mo
386.776 322.285 387.394 321.208 388.119 320.826 cv
388.845 320.443 389.403 320.9 389.367 321.846 cv
389.331 322.792 388.713 323.87 387.988 324.252 cv
387.263 324.634 386.704 324.177 386.74 323.231 cv
cp
.54902 .54902 .54902 rgb
f
387.815 324.434 mo
387.967 324.445 388.135 324.411 388.316 324.315 cv
388.988 323.96 389.56 322.963 389.594 322.086 cv
389.608 321.703 389.513 321.413 389.349 321.23 cv
389.425 321.21 li
388.98 320.995 li
388.779 320.883 388.522 320.883 388.231 321.037 cv
387.56 321.391 386.988 322.388 386.954 323.265 cv
386.935 323.776 387.106 324.126 387.384 324.265 cv
387.865 324.518 li
387.815 324.434 li
cp
level3{
gsave
clp
[-1.65234 3.12309 -3.12309 -1.65234 389.111 321.095 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.65234 3.12309 -3.12309 -1.65234 389.111 321.095 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
387.435 323.508 mo
387.469 322.632 388.04 321.635 388.712 321.281 cv
389.384 320.926 389.901 321.35 389.867 322.226 cv
389.834 323.102 389.262 324.1 388.59 324.454 cv
387.918 324.808 387.401 324.385 387.435 323.508 cv
cp
.141176 .164706 .188235 rgb
f
388.229 324.02 mo
388.082 323.931 li
388.049 323.908 li
387.911 323.793 387.834 323.582 387.845 323.295 cv
387.866 322.72 388.246 322.061 388.687 321.829 cv
388.801 321.766 388.91 321.74 389.008 321.745 cv
389.011 321.747 li
389.151 321.78 li
389.33 321.854 li
389.93 322.159 390.166 322.889 389.862 323.487 cv
389.559 324.084 388.829 324.325 388.229 324.02 cv
cp
level3{
gsave
clp
[-1.15008 2.26232 -2.26232 -1.15008 389.56 321.83 ]ct
/19 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.87451 .980392 .443137 ]
/C1 [.647059 .8 .0392157 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.15008 2.26232 -2.26232 -1.15008 389.56 321.83 ]ct
clp
/19 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~hqm5HhVI#Dh;$f@gt^Z=gY:H9g=k96g"G'2f\"j.f@SX+f%/F'e^`4#e^W*ueC2mqe'c[mdaHOjdF$=f
d*U.ccd0q_cHa_\c-=MXbfn;TbKJ)PbK@uMb/qcIaiVWFaN2EBa2c3>`l?$;`Pog7`5KU4_o'C0_SX1,
_SO()_8*k%^q[Y!^V@Ls^:q:o]tM+l]Y(nh]=Y\d]"5Ja\[f8]\@B&Y\@8rV\$i`R[^ENN[C*BK['[0G
Za7!DZEgd@Z*CR=Yct@9YHP.5Y-+q1Y-"h.XfSV*XK8J'X/i8#WiE%tWMukqW2QYmVl-GjVP^5fV5:#b
~>
<~qYBs_q>'g\q"XXZp\4FVp\+=Sp@e4Qp%A"No^qeJo^qbHoCMSEo()ABo'u8?naZ/=nF5r:n*f`6n*f]4
mdBN1mHs<.mHj3+m-O'(lg*m&lK[["lK[Wul07Hrkih6oki_-lkND!ik2tggjlPUcjlGL`jQ,C^j5]1[
j5T(Xio8qUiSibSi8EPOi8<GLhr!>JhVR,Gh;-oCh;-lAgt^]>gY:K;gY1B8g=k96g"G'3f\"j/f\"g-
f@SX*f%/F'f%&=$e^`1!eC<!te'ldpe'landaHRkdF$@hdEp7ed*U+bcd0q`cHa_\cHXVYc-=MWbfn;T
~>
<~EH#l8Df0H1D/F**Chmg$C2.HsBP;'lB4bafAS#C_A7K+Y@U`bS?smAL?X@&F?!U]?>[(E9>$>'3=BJ[,
=&r@&<E3!t<)Z^n;Gp@h:f'ta:JOYZ9he;T91qoM8kDTG84Z6@7n,s:77BU46UO4-6:!n'5X7Ou5<_7o
4Ztni4$,Mb3]T2\3&iiU2`<QO2)R3I1G^gB1,1L<0JG.50.nk//M/M).k<)!.Ocep-n$Gj-71&c,pX`]
,9nBV+sA*P+<VaJ*Zc@C*?6%=)]K\6)AsD0(`4&*()@Z#'bh>r',(uk&eP]e&.f?_%LrsX%1EXR$O[:K
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /19 /Gradient get_res exec grestore
}if
np
362.441 337.284 mo
362.478 336.337 363.095 335.26 363.82 334.877 cv
364.546 334.495 365.104 334.952 365.067 335.898 cv
365.031 336.844 364.414 337.921 363.688 338.304 cv
362.963 338.686 362.404 338.229 362.441 337.284 cv
cp
.54902 .54902 .54902 rgb
f
363.517 338.486 mo
363.667 338.498 363.836 338.462 364.018 338.367 cv
364.688 338.012 365.261 337.015 365.295 336.139 cv
365.31 335.754 365.214 335.464 365.05 335.282 cv
365.125 335.262 li
364.681 335.046 li
364.48 334.935 364.223 334.935 363.933 335.088 cv
363.261 335.443 362.688 336.44 362.655 337.317 cv
362.636 337.828 362.808 338.178 363.084 338.317 cv
363.565 338.57 li
363.517 338.486 li
cp
level3{
gsave
clp
[-1.65245 3.1233 -3.1233 -1.65245 364.812 335.147 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.65245 3.1233 -3.1233 -1.65245 364.812 335.147 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
363.136 337.561 mo
363.169 336.684 363.741 335.687 364.413 335.333 cv
365.085 334.978 365.602 335.402 365.568 336.278 cv
365.534 337.154 364.963 338.152 364.291 338.506 cv
363.619 338.86 363.102 338.437 363.136 337.561 cv
cp
.141176 .164706 .188235 rgb
f
363.93 338.072 mo
363.782 337.983 li
363.75 337.959 li
363.612 337.845 363.534 337.633 363.546 337.348 cv
363.567 336.772 363.946 336.113 364.388 335.88 cv
364.502 335.819 364.611 335.792 364.708 335.796 cv
364.711 335.798 li
364.852 335.832 li
365.03 335.906 li
365.631 336.21 365.867 336.942 365.563 337.539 cv
365.26 338.136 364.53 338.376 363.93 338.072 cv
cp
level3{
gsave
clp
[-1.14985 2.26187 -2.26187 -1.14985 365.26 335.882 ]ct
/20 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.980392 .443137 .443137 ]
/C1 [.8 .0392157 .0392157 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.14985 2.26187 -2.26187 -1.14985 365.26 335.882 ]ct
clp
/20 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYBs_q>'g\q"XXZp\4FVp\+=Sp@e4Qp%A"No^qeJo^qbHoCMSEo()ABo'u8?naZ/=nF5r:n*f`6n*f]4
mdBN1mHs<.mHj3+m-O'(lg*m&lK[["lK[Wul07Hrkih6oki_-lkND!ik2tggjlPUcjlGL`jQ,C^j5]1[
j5T(Xio8qUiSibSi8EPOi8<GLhr!>JhVR,Gh;-oCh;-lAgt^]>gY:K;gY1B8g=k96g"G'3f\"j/f\"g-
f@SX*f%/F'f%&=$e^`1!eC<!te'ldpe'landaHRkdF$@hdEp7ed*U+bcd0q`cHa_\cHXVYc-=MWbfn;T
~>
<~EH#l8Df0H1D/F**Chmg$C2.HsBP;'lB4bafAS#C_A7K+Y@U`bS?smAL?X@&F?!U]?>[(E9>$>'3=BJ[,
=&r@&<E3!t<)Z^n;Gp@h:f'ta:JOYZ9he;T91qoM8kDTG84Z6@7n,s:77BU46UO4-6:!n'5X7Ou5<_7o
4Ztni4$,Mb3]T2\3&iiU2`<QO2)R3I1G^gB1,1L<0JG.50.nk//M/M).k<)!.Ocep-n$Gj-71&c,pX`]
,9nBV+sA*P+<VaJ*Zc@C*?6%=)]K\6)AsD0(`4&*()@Z#'bh>r',(uk&eP]e&.f?_%LrsX%1EXR$O[:K
~>
<~EH#l8Df0H1D/F**Chmg$C2.HsBP;'lB4bafAS#C_A7K+Y@U`bS?smAL?X@&F?!U]?>[(E9>$>'3=BJ[,
=&r@&<E3!t<)Z^n;Gp@h:f'ta:JOYZ9he;T91qoM8kDTG84Z6@7n,s:77BU46UO4-6:!n'5X7Ou5<_7o
4Ztni4$,Mb3]T2\3&iiU2`<QO2)R3I1G^gB1,1L<0JG.50.nk//M/M).k<)!.Ocep-n$Gj-71&c,pX`]
,9nBV+sA*P+<VaJ*Zc@C*?6%=)]K\6)AsD0(`4&*()@Z#'bh>r',(uk&eP]e&.f?_%LrsX%1EXR$O[:K
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /20 /Gradient get_res exec grestore
}if
np
391.798 348.354 mo
372.639 339.838 li
372.194 339.58 li
371.864 339.434 371.452 339.469 371.003 339.728 cv
369.917 340.356 369.036 342.039 369.036 343.487 cv
369.036 344.318 369.326 344.889 369.778 345.109 cv
388.054 356.576 li
391.798 348.354 li
cp
level3{
gsave
clp
[-3.9746 8.14628 -8.14628 -3.9746 381.555 343.357 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.9746 8.14628 -8.14628 -3.9746 381.555 343.357 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
392.943 350.798 mo
392.943 352.969 391.623 355.493 389.995 356.432 cv
388.366 357.373 387.046 356.375 387.046 354.204 cv
387.046 352.032 388.366 349.509 389.995 348.569 cv
391.623 347.628 392.943 348.626 392.943 350.798 cv
cp
.74902 .74902 .74902 rgb
f
388.824 356.018 mo
388.078 356.018 387.813 355.041 387.813 354.204 cv
387.813 352.312 388.988 350.036 390.379 349.234 cv
390.663 349.07 390.935 348.983 391.165 348.983 cv
391.911 348.983 392.176 349.961 392.176 350.798 cv
392.176 352.689 391.001 354.965 389.611 355.767 cv
389.327 355.931 389.054 356.018 388.824 356.018 cv
cp
.65098 .65098 .65098 rgb
f
391.576 349.114 mo
391.828 349.475 391.93 350.042 391.93 350.559 cv
391.93 352.45 390.755 354.725 389.365 355.528 cv
389.081 355.692 388.808 355.779 388.578 355.779 cv
388.418 355.779 388.284 355.726 388.166 355.648 cv
388.323 355.873 388.537 356.018 388.824 356.018 cv
389.054 356.018 389.327 355.931 389.611 355.767 cv
391.001 354.965 392.176 352.689 392.176 350.798 cv
392.176 350.14 392.008 349.403 391.576 349.114 cv
cp
.501961 .501961 .501961 rgb
f
61.873 354.39 mo
61.4644 355.11 61.0483 355.835 60.6172 356.562 cv
59.9282 357.728 li
52.4746 362.034 li
52.4746 355.472 li
58.1274 352.211 li
66.2246 338.211 70.0386 326.875 69.4712 318.491 cv
69.1001 313.125 66.9736 309.636 64.6279 307.397 cv
62.1533 305.028 59.4438 304.059 58.3315 303.734 cv
52.4746 307.117 li
52.4746 300.555 li
59.686 296.393 li
60.2539 296.5 li
60.458 296.538 62.418 296.93 64.8169 298.3 cv
64.8247 298.308 li
65.3389 298.619 li
65.8613 298.936 li
65.8687 298.944 li
66.6104 299.443 67.3823 300.034 68.1465 300.737 cv
68.4116 300.995 68.6841 301.259 68.9487 301.54 cv
70.644 303.318 72.2026 305.708 73.2246 308.895 cv
73.7993 310.681 74.2007 312.724 74.3672 315.047 cv
75.0859 325.37 70.8862 338.597 61.873 354.39 cv
cp
.133333 .156863 .184314 rgb
f
70.0688 301.463 mo
68.1465 300.737 li
64.8247 299.489 li
59.686 296.393 li
60.2539 296.5 li
60.458 296.538 62.418 296.93 64.8169 298.3 cv
64.8247 298.308 li
65.3389 298.619 li
65.8613 298.936 li
65.8687 298.944 li
70.0688 301.463 li
cp
.14902 .180392 .211765 rgb
f
58.0591 352.279 mo
63.2661 355.307 li
57.6118 358.571 li
52.4048 355.543 li
58.0591 352.279 li
cp
.168627 .2 .235294 rgb
f
57.6118 365.131 mo
52.4048 362.103 li
52.4048 355.543 li
57.6118 358.571 li
57.6118 365.131 li
cp
.0666667 .0823529 .0941176 rgb
f
57.6118 310.215 mo
52.4741 307.117 li
52.4741 300.557 li
57.6118 303.656 li
57.6118 310.215 li
cp
f
59.6895 296.39 mo
65.395 299.596 li
57.6118 303.656 li
52.4741 300.555 li
59.6895 296.39 li
cp
.168627 .2 .235294 rgb
f
79.5283 322.365 mo
79.0439 331.787 75.0103 343.282 67.4956 356.638 cv
67.3594 356.88 li
66.5122 357.198 li
63.5078 355.45 li
63.2656 355.306 li
61.8052 354.458 li
58.0591 352.279 li
66.1563 338.28 69.9702 326.943 69.4028 318.558 cv
69.0322 313.193 66.6772 309.361 64.3311 307.121 cv
67.3711 306.094 li
68.5977 307.56 li
67.9878 308.766 li
73.1563 308.963 li
73.459 308.978 li
79.3164 316.273 li
79.3994 316.871 79.46 317.499 79.5054 318.142 cv
79.5962 319.497 79.6113 320.905 79.5283 322.365 cv
cp
.14902 .180392 .211765 rgb
f
79.5283 322.365 mo
79.0439 331.787 75.0103 343.282 67.4956 356.638 cv
67.3594 356.88 li
66.8452 357.795 66.3076 358.727 65.7554 359.665 cv
65.0669 360.823 li
57.6128 365.128 li
57.6128 358.568 li
63.0615 355.427 li
63.2656 355.306 li
71.3628 341.314 75.1768 329.97 74.6094 321.593 cv
74.125 314.555 70.606 310.742 67.5488 308.751 cv
67.541 308.744 li
65.8232 307.616 64.2568 307.064 63.4697 306.836 cv
57.6128 310.211 li
57.6128 303.658 li
64.8247 299.489 li
65.3921 299.594 li
65.9067 299.685 77.4092 302.016 79.3164 316.273 cv
79.3994 316.871 79.46 317.499 79.5054 318.142 cv
79.5962 319.497 79.6113 320.905 79.5283 322.365 cv
cp
.133333 .156863 .184314 rgb
f
65.9209 365.731 mo
65.9209 369.335 li
65.9209 373.985 62.2129 378.592 55.1592 381.638 cv
43.2026 386.81 26.1675 385.548 17.1123 378.815 cv
13.3994 376.053 11.605 372.805 11.605 369.573 cv
11.605 365.969 li
11.605 369.201 13.3994 372.449 17.1123 375.21 cv
26.1675 381.944 43.2026 383.206 55.1592 378.034 cv
62.2129 374.988 65.9209 370.38 65.9209 365.731 cv
cp
level3{
gsave
clp
[54.3159 0 0 54.3159 11.605 375.276 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[54.3159 0 0 54.3159 11.605 375.276 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
65.9209 366.072 mo
65.9209 370.721 62.2129 375.329 55.1592 378.375 cv
43.2026 383.546 26.1675 382.285 17.1123 375.551 cv
13.3994 372.79 11.605 369.542 11.605 366.31 cv
11.605 361.666 15.313 357.058 22.3667 354.007 cv
34.3232 348.835 51.3579 350.103 60.4131 356.831 cv
64.1265 359.592 65.9209 362.84 65.9209 366.072 cv
cp
.184314 .215686 .25098 rgb
f
64.9146 361.709 mo
64.9146 365.18 li
64.9146 369.657 61.3438 374.094 54.5513 377.027 cv
43.0381 382.007 26.6343 380.792 17.9146 374.308 cv
14.3394 371.649 12.6113 368.522 12.6113 365.41 cv
12.6113 361.939 li
12.6113 365.051 14.3394 368.178 17.9146 370.837 cv
26.6343 377.321 43.0381 378.537 54.5513 373.556 cv
61.3438 370.624 64.9146 366.186 64.9146 361.709 cv
cp
level3{
gsave
clp
[52.3032 0 0 52.3032 12.6113 370.901 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[52.3032 0 0 52.3032 12.6113 370.901 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
64.9146 362.038 mo
64.9146 366.515 61.3438 370.952 54.5513 373.885 cv
43.0381 378.865 26.6343 377.65 17.9146 371.166 cv
14.3394 368.506 12.6113 365.379 12.6113 362.267 cv
12.6113 357.795 16.1816 353.358 22.9741 350.42 cv
34.4878 345.44 50.8911 346.661 59.6108 353.139 cv
63.1865 355.798 64.9146 358.925 64.9146 362.038 cv
cp
.901961 .901961 .901961 rgb
f
65.9946 336.811 mo
65.9946 337.855 65.9873 338.907 65.9795 339.952 cv
65.9722 340.36 65.9644 340.769 65.9644 341.169 cv
65.9565 341.775 65.9492 342.374 65.9341 342.971 cv
65.9268 343.357 65.9189 343.743 65.9111 344.128 cv
65.9038 344.28 65.9038 344.439 65.9038 344.59 cv
65.8735 345.786 65.8433 346.944 65.8057 348.056 cv
65.7979 348.238 65.7905 348.419 65.7905 348.593 cv
65.7524 349.82 65.707 350.993 65.6543 352.089 cv
65.6465 352.218 65.6465 352.347 65.6392 352.476 cv
65.624 352.801 65.6089 353.134 65.5938 353.459 cv
65.5786 353.875 65.5557 354.292 65.5332 354.708 cv
65.5332 354.739 li
65.5181 355.139 65.4951 355.541 65.4727 355.934 cv
65.4575 356.184 65.4497 356.433 65.4346 356.675 cv
65.4121 357.024 65.397 357.365 65.374 357.705 cv
65.3667 357.917 65.3516 358.122 65.3364 358.326 cv
65.3213 358.628 65.3062 358.916 65.2832 359.173 cv
65.2832 359.264 65.2759 359.347 65.2681 359.43 cv
65.2456 359.771 65.2305 360.066 65.2075 360.331 cv
65.1924 360.595 65.1772 360.815 65.1621 361.004 cv
65.1548 361.17 65.1396 361.307 65.1318 361.406 cv
65.1167 361.648 li
65.1167 366.158 61.5146 370.63 54.6738 373.582 cv
54.3711 373.71 54.0684 373.838 53.7583 373.959 cv
53.145 374.202 52.5171 374.429 51.8813 374.641 cv
51.4727 374.777 51.064 374.906 50.6401 375.019 cv
50.1636 375.163 49.6865 375.292 49.2026 375.405 cv
49.0435 375.451 48.8848 375.489 48.7183 375.526 cv
48.1885 375.655 47.6587 375.768 47.1289 375.867 cv
46.6748 375.958 46.2134 376.041 45.7515 376.109 cv
45.1616 376.208 44.5635 376.291 43.9658 376.359 cv
43.5493 376.404 43.1333 376.45 42.7173 376.487 cv
42.7095 376.487 li
42.5205 376.502 li
42.1494 376.533 41.7788 376.563 41.4077 376.585 cv
41.3018 376.593 41.1963 376.601 41.0898 376.601 cv
40.7119 376.624 40.3335 376.638 39.9551 376.646 cv
39.5083 376.662 39.062 376.668 38.6152 376.668 cv
37.2837 376.668 35.9668 376.616 34.6577 376.502 cv
34.499 376.487 34.3398 376.472 34.1812 376.457 cv
33.7876 376.419 33.4014 376.381 33.0156 376.329 cv
32.6221 376.283 32.2285 376.23 31.8428 376.169 cv
31.4263 376.109 31.0103 376.041 30.6016 375.965 cv
30.5864 375.965 li
30.231 375.905 29.8828 375.836 29.542 375.761 cv
29.3755 375.731 29.209 375.693 29.0425 375.655 cv
28.7476 375.586 28.4521 375.526 28.1646 375.451 cv
27.8242 375.368 27.4839 375.277 27.1431 375.186 cv
26.9844 375.14 li
26.5908 375.035 26.2051 374.92 25.8267 374.799 cv
25.8115 374.799 li
25.4331 374.678 25.062 374.55 24.6914 374.421 cv
24.3281 374.292 23.9727 374.157 23.6167 374.02 cv
23.5034 373.983 23.3896 373.937 23.2764 373.884 cv
22.6631 373.634 22.0728 373.37 21.4902 373.089 cv
21.4829 373.089 li
20.8091 372.756 20.1587 372.401 19.5381 372.03 cv
19.2275 371.84 18.9248 371.652 18.6299 371.455 cv
18.3345 371.258 18.0396 371.054 17.7598 370.842 cv
17.752 370.842 li
17.0786 370.342 16.4731 369.828 15.9282 369.291 cv
15.02 368.405 14.2861 367.482 13.7339 366.529 cv
12.8408 365.015 12.4092 363.449 12.4092 361.875 cv
12.4243 361.648 li
12.4092 361.648 li
12.4092 361.648 12.3867 361.382 12.3564 360.875 cv
12.3491 360.762 li
12.3335 360.55 li
12.3184 360.323 12.3037 360.104 12.2881 359.876 cv
12.2656 359.46 12.2354 359.044 12.2124 358.628 cv
12.2051 358.454 12.1973 358.28 12.1821 358.114 cv
12.167 357.781 12.1445 357.448 12.1294 357.123 cv
12.1143 356.895 12.1064 356.668 12.0913 356.449 cv
12.084 356.199 12.0688 355.949 12.0537 355.707 cv
12.0459 355.48 12.0308 355.26 12.0234 355.034 cv
12.0161 354.92 li
11.9707 353.982 11.9253 352.96 11.8799 351.863 cv
11.8721 351.719 11.8721 351.575 11.8643 351.431 cv
11.8418 350.932 11.8267 350.425 11.8115 349.925 cv
11.7891 349.237 11.7661 348.556 11.7437 347.867 cv
11.7437 347.83 li
11.6982 346.429 11.668 344.954 11.6377 343.417 cv
11.6147 342.124 11.5996 340.822 11.5923 339.528 cv
11.5845 338.824 11.5845 338.105 11.5845 337.386 cv
11.5845 336.327 11.5845 335.259 11.5996 334.2 cv
11.6074 333.678 11.6147 333.156 11.6226 332.626 cv
11.6299 331.666 11.6528 330.697 11.6753 329.736 cv
11.7285 328.055 11.7813 326.368 11.8643 324.68 cv
11.9023 323.826 11.9478 322.962 12.0005 322.108 cv
12.1294 319.989 12.2881 317.885 12.4849 315.834 cv
12.5229 315.403 12.5684 314.979 12.6211 314.555 cv
12.6592 314.23 12.6895 313.905 12.7271 313.579 cv
12.8257 312.694 12.9316 311.816 13.0601 310.938 cv
13.166 310.143 13.2798 309.372 13.4009 308.607 cv
13.4614 308.229 13.522 307.85 13.5898 307.472 cv
13.7261 306.73 13.8623 305.997 14.0059 305.278 cv
14.0815 304.921 14.1577 304.566 14.2329 304.218 cv
14.3691 303.567 14.5283 302.924 14.6948 302.281 cv
14.7705 301.978 14.8535 301.667 14.937 301.365 cv
14.9673 301.251 li
15.043 301.009 li
15.1714 300.533 15.3154 300.063 15.4668 299.609 cv
15.4893 299.518 15.5195 299.427 15.5498 299.336 cv
15.5576 299.306 li
16.314 296.839 18.2891 294.471 21.4072 292.549 cv
22.353 291.958 23.3975 291.406 24.5474 290.915 cv
34.6504 286.541 48.9453 287.471 56.9365 292.927 cv
57.1484 293.063 57.3604 293.214 57.5645 293.366 cv
59.9937 295.167 61.4692 297.21 62.0596 299.306 cv
62.3545 300.192 62.627 301.123 62.877 302.099 cv
62.9678 302.424 63.0508 302.757 63.1265 303.09 cv
63.21 303.423 63.2856 303.764 63.3613 304.112 cv
63.4219 304.384 63.4824 304.672 63.543 304.952 cv
63.5957 305.194 63.6411 305.428 63.6865 305.67 cv
63.7622 306.049 63.8379 306.435 63.9063 306.814 cv
63.9741 307.2 64.0425 307.578 64.1025 307.963 cv
64.1631 308.304 64.2163 308.637 64.269 308.978 cv
64.2993 309.174 64.3296 309.372 64.3599 309.568 cv
64.4204 309.947 64.4736 310.333 64.5264 310.718 cv
64.6099 311.332 64.6929 311.944 64.7686 312.573 cv
64.7915 312.769 64.814 312.966 64.8369 313.163 cv
64.9126 313.844 64.9883 314.54 65.0562 315.236 cv
65.2378 316.977 65.3818 318.725 65.4951 320.465 cv
65.5405 321.101 65.5786 321.737 65.6162 322.365 cv
65.6313 322.577 65.6392 322.789 65.6465 322.993 cv
65.6846 323.576 65.7148 324.151 65.7373 324.733 cv
65.7827 325.641 65.813 326.549 65.8433 327.458 cv
65.8584 327.889 65.8735 328.328 65.8813 328.759 cv
65.8887 328.956 65.8965 329.145 65.8965 329.334 cv
65.9111 329.758 65.9189 330.182 65.9268 330.598 cv
65.9492 331.438 65.9644 332.278 65.9722 333.111 cv
65.9795 333.747 65.9873 334.381 65.9873 335.01 cv
65.9873 335.608 65.9946 336.206 65.9946 336.811 cv
cp
.156863 .184314 .211765 rgb
f
42.7095 376.487 mo
42.5205 376.502 li
42.1494 376.533 41.7788 376.563 41.4077 376.585 cv
41.3018 376.593 41.1963 376.601 41.0898 376.601 cv
40.7119 376.624 40.3335 376.638 39.9551 376.646 cv
39.5083 376.662 39.062 376.668 38.6152 376.668 cv
37.2837 376.668 35.9668 376.616 34.6577 376.502 cv
34.499 376.487 34.3398 376.472 34.1812 376.457 cv
33.7876 376.419 33.4014 376.381 33.0156 376.329 cv
32.6221 376.283 32.2285 376.23 31.8428 376.169 cv
31.4263 376.109 31.0103 376.041 30.6016 375.965 cv
30.5864 375.965 li
30.231 375.905 29.8828 375.836 29.542 375.761 cv
29.3755 375.731 29.209 375.693 29.0425 375.655 cv
28.7476 375.586 28.4521 375.526 28.1646 375.451 cv
27.8242 375.368 27.4839 375.277 27.1431 375.186 cv
26.9844 375.14 li
26.5908 375.035 26.2051 374.92 25.8267 374.799 cv
25.8115 374.799 li
25.4331 374.678 25.062 374.55 24.6914 374.421 cv
24.3281 374.292 23.9727 374.157 23.6167 374.02 cv
23.5034 373.983 23.3896 373.937 23.2764 373.884 cv
22.6631 373.634 22.0728 373.37 21.4902 373.089 cv
21.4829 373.089 li
20.8091 372.756 20.1587 372.409 19.5381 372.03 cv
19.2275 371.84 18.9248 371.652 18.6299 371.455 cv
18.3345 371.258 18.0396 371.054 17.7598 370.842 cv
17.752 370.842 li
17.0786 370.342 16.4731 369.828 15.9282 369.291 cv
15.0127 368.405 14.2861 367.482 13.7339 366.529 cv
12.8408 365.015 12.4092 363.449 12.4092 361.875 cv
12.4243 361.648 li
12.4019 361.39 12.3789 361.133 12.3564 360.875 cv
12.3491 360.762 li
12.3335 360.55 li
12.3184 360.323 12.3037 360.104 12.2881 359.876 cv
12.2656 359.46 12.2354 359.044 12.2124 358.628 cv
12.2051 358.454 12.1973 358.28 12.1821 358.114 cv
12.167 357.781 12.1445 357.448 12.1294 357.123 cv
12.1143 356.895 12.1064 356.668 12.0913 356.449 cv
12.084 356.199 12.0688 355.949 12.0537 355.707 cv
12.0459 355.48 12.0308 355.26 12.0234 355.034 cv
12.0161 354.92 li
11.9707 353.899 11.9175 352.884 11.8799 351.863 cv
11.8721 351.719 11.8721 351.575 11.8643 351.431 cv
11.8418 350.932 11.8267 350.425 11.8115 349.925 cv
11.7891 349.237 11.7661 348.556 11.7437 347.867 cv
11.7437 347.83 li
11.6982 346.361 11.6602 344.885 11.6377 343.417 cv
11.6147 342.124 11.5996 340.822 11.5923 339.528 cv
11.5845 339.346 11.5845 339.157 11.5845 338.975 cv
11.5845 337.386 li
11.5845 336.327 11.5845 335.259 11.5996 334.2 cv
11.6074 333.678 11.6147 333.156 11.6226 332.626 cv
11.6299 331.666 11.6528 330.697 11.6753 329.736 cv
11.6831 329.554 11.6831 329.365 11.6904 329.183 cv
11.6958 329.003 11.7056 328.824 11.7114 328.644 cv
11.7539 327.325 11.7993 326.003 11.8643 324.68 cv
11.9023 323.826 11.9478 322.962 12.0005 322.108 cv
12.0615 321.124 12.1216 320.14 12.1973 319.156 cv
12.2808 318.043 12.3789 316.939 12.4849 315.834 cv
12.5229 315.403 12.5684 314.979 12.6211 314.555 cv
12.6592 314.23 12.6895 313.905 12.7271 313.579 cv
12.8257 312.694 12.9316 311.816 13.0601 310.938 cv
13.1133 310.492 13.1738 310.052 13.2417 309.606 cv
13.4009 308.607 li
13.4614 308.229 13.522 307.85 13.5898 307.472 cv
13.7261 306.73 13.8623 305.997 14.0059 305.278 cv
14.0815 304.921 14.1577 304.566 14.2329 304.218 cv
14.3691 303.567 14.5283 302.924 14.6948 302.281 cv
14.7705 301.978 14.8535 301.667 14.937 301.365 cv
14.9673 301.251 li
15.043 301.009 li
15.1865 300.563 15.3911 300.071 15.4668 299.609 cv
15.4893 299.518 15.5195 299.427 15.5498 299.336 cv
15.5576 299.306 li
16.314 296.839 18.2891 294.471 21.4072 292.549 cv
21.5659 292.572 21.7251 292.625 21.8765 292.693 cv
22.353 292.913 22.7236 293.313 23.0796 293.699 cv
23.5337 294.191 24.0024 294.713 24.1846 295.356 cv
24.3887 296.083 24.1919 296.862 24.2524 297.619 cv
24.2827 298.028 24.3735 298.49 24.1011 298.799 cv
23.6548 299.292 23.5259 299.988 23.3369 300.638 cv
23.1553 301.266 22.981 301.902 22.8223 302.538 cv
22.4814 303.908 22.1865 305.285 21.9292 306.663 cv
21.3691 309.719 20.9756 312.799 20.6807 315.894 cv
20.3628 319.202 20.1509 322.516 20.0068 325.838 cv
19.8711 329.145 19.8027 332.467 19.7803 335.782 cv
19.7651 338.862 19.7954 341.942 19.8633 345.022 cv
19.9238 347.632 20.0068 350.244 20.1206 352.854 cv
20.2041 354.753 20.2949 356.661 20.4082 358.56 cv
20.4688 359.521 20.5215 360.482 20.5972 361.436 cv
20.6123 361.648 li
20.6123 361.875 li
20.6123 365.015 22.353 368.163 25.9551 370.842 cv
30.208 374.005 36.2695 375.919 42.7095 376.487 cv
cp
.117647 .141176 .160784 rgb
f
65.9937 336.811 mo
65.9937 337.855 65.9863 338.907 65.9785 339.952 cv
65.9712 340.36 65.9634 340.769 65.9634 341.169 cv
65.9561 341.775 65.9482 342.374 65.9331 342.971 cv
65.9258 343.357 65.918 343.743 65.9106 344.128 cv
65.9028 344.28 65.9028 344.439 65.9028 344.59 cv
65.8726 345.749 65.8423 346.899 65.8047 348.056 cv
65.7969 348.238 65.7896 348.419 65.7896 348.593 cv
65.7515 349.759 65.7061 350.924 65.6533 352.089 cv
65.6455 352.218 65.6455 352.347 65.6382 352.476 cv
65.623 352.801 65.6079 353.134 65.5928 353.459 cv
65.5776 353.875 65.5547 354.292 65.5322 354.708 cv
65.5322 354.739 li
65.5171 355.139 65.4941 355.541 65.4717 355.934 cv
65.4565 356.184 65.4487 356.433 65.4336 356.675 cv
65.4111 357.024 65.396 357.365 65.373 357.705 cv
65.3657 357.917 65.3506 358.122 65.3354 358.326 cv
65.3203 358.613 65.3052 358.893 65.2822 359.173 cv
65.2822 359.264 65.2749 359.347 65.2671 359.43 cv
65.252 359.733 65.2295 360.028 65.2065 360.331 cv
65.1914 360.558 65.1763 360.777 65.1611 361.004 cv
65.1538 361.14 65.1387 361.269 65.1309 361.406 cv
65.1157 361.648 li
65.1157 366.158 61.5137 370.63 54.6729 373.582 cv
54.3701 373.71 54.0674 373.838 53.7568 373.959 cv
53.144 374.202 52.5161 374.429 51.8804 374.641 cv
51.4717 374.777 51.063 374.906 50.6392 375.019 cv
50.1626 375.163 49.686 375.292 49.2017 375.405 cv
49.0425 375.451 48.8838 375.489 48.7173 375.526 cv
48.1875 375.655 47.6577 375.768 47.1279 375.867 cv
46.6738 375.958 46.2124 376.041 45.751 376.109 cv
45.1606 376.208 44.5625 376.291 43.9648 376.359 cv
41.7021 376.624 39.394 376.722 37.1089 376.646 cv
36.6245 376.631 36.1401 376.609 35.6558 376.578 cv
40.2568 376.283 44.7896 375.299 48.7476 373.582 cv
55.5962 370.63 59.1904 366.158 59.1904 361.648 cv
59.3647 359.422 59.4858 357.19 59.5991 354.965 cv
59.8716 349.562 60.0308 344.167 60.061 338.763 cv
60.1064 332.112 59.9624 325.453 59.4478 318.816 cv
58.9863 312.807 58.2974 306.715 56.6328 300.903 cv
56.3149 299.821 55.9746 298.883 55.9746 297.733 cv
55.9746 296.113 56.2847 294.501 56.8975 293.002 cv
56.9355 292.927 li
57.1475 293.063 57.3594 293.214 57.5635 293.366 cv
59.9927 295.167 61.4683 297.21 62.0586 299.306 cv
62.354 300.192 62.626 301.123 62.876 302.099 cv
62.9668 302.424 63.0498 302.757 63.1255 303.09 cv
63.209 303.423 63.2847 303.764 63.3604 304.112 cv
63.4209 304.384 63.4814 304.672 63.542 304.952 cv
63.5947 305.194 63.6401 305.428 63.6855 305.67 cv
63.7612 306.049 63.8369 306.435 63.9053 306.814 cv
63.9731 307.2 64.0415 307.578 64.1021 307.963 cv
64.1626 308.304 64.2153 308.637 64.2686 308.978 cv
64.2988 309.174 64.3291 309.372 64.3594 309.568 cv
64.4199 309.947 64.4727 310.333 64.5259 310.718 cv
64.6089 311.332 64.6924 311.944 64.7681 312.573 cv
64.7905 312.769 64.8135 312.966 64.8359 313.163 cv
64.9043 313.738 64.9644 314.313 65.0249 314.888 cv
65.04 315.001 65.0479 315.123 65.0552 315.236 cv
65.2368 316.977 65.3809 318.725 65.4941 320.465 cv
65.5396 321.101 65.5776 321.737 65.6152 322.365 cv
65.6304 322.577 65.6382 322.789 65.6455 322.993 cv
65.6836 323.576 65.7139 324.151 65.7363 324.733 cv
65.7817 325.641 65.812 326.549 65.8423 327.458 cv
65.8574 327.889 65.8726 328.328 65.8804 328.759 cv
65.8877 328.956 65.8955 329.145 65.8955 329.334 cv
65.9106 329.758 65.918 330.182 65.9258 330.598 cv
65.9482 331.438 65.9634 332.278 65.9712 333.111 cv
65.9785 333.747 65.9863 334.375 65.9863 335.01 cv
65.9863 335.608 65.9937 336.206 65.9937 336.811 cv
cp
.184314 .215686 .25098 rgb
f
35.605 309.277 mo
21.2993 333.599 li
20.3877 335.149 18.0464 334.762 17.6807 333.002 cv
14.0762 315.668 li
35.605 309.277 li
cp
.701961 .701961 .701961 rgb
f
17.3086 300.432 mo
17.3086 300.432 1.72754 333.47 35.605 309.277 cv
17.3086 300.432 li
cp
.85098 .85098 .85098 rgb
f
34.3931 309.167 mo
30.1626 312.125 26.5 314.343 23.5107 315.728 cv
21.1572 316.81 19.2275 317.377 17.7749 317.377 cv
17.6611 317.377 17.5479 317.377 17.4419 317.371 cv
16.3594 317.302 15.6104 316.901 15.1338 316.152 cv
14.71 315.478 14.5283 314.547 14.5205 313.458 cv
14.4829 309.606 16.6318 303.809 17.8809 300.971 cv
34.3931 309.167 li
cp
.156863 .184314 .211765 rgb
f
23.5107 315.728 mo
21.1572 316.81 19.2275 317.377 17.7749 317.377 cv
17.6611 317.377 17.5479 317.377 17.4419 317.371 cv
16.3594 317.302 15.6104 316.901 15.1338 316.152 cv
14.71 315.478 14.5283 314.547 14.5205 313.458 cv
16.7378 311.384 li
16.7378 311.384 18.2212 315.334 23.5107 315.728 cv
cp
.0745098 .0862745 .101961 rgb
f
17.4409 317.371 mo
16.3589 317.302 15.6094 316.901 15.1328 316.152 cv
13.2031 313.102 16.2754 304.604 17.8799 300.971 cv
17.8799 300.971 17.1001 311.089 17.4409 317.371 cv
cp
.6 .6 .6 rgb
f
62.0591 298.591 mo
62.0591 302.577 58.8804 306.527 52.8335 309.138 cv
42.584 313.572 27.981 312.49 20.2183 306.717 cv
17.0352 304.35 15.4966 301.566 15.4966 298.795 cv
15.4966 294.814 18.6753 290.865 24.7222 288.249 cv
34.9722 283.815 49.5752 284.902 57.3379 290.669 cv
60.521 293.037 62.0591 295.821 62.0591 298.591 cv
cp
.85098 .85098 .85098 rgb
f
61.6548 298.656 mo
61.6548 301.355 60.1343 304.054 56.9956 306.356 cv
54.7593 307.99 51.9541 309.243 48.8398 310.08 cv
45.7256 310.917 42.3184 311.356 38.8789 311.356 cv
38.6758 311.356 li
31.7964 311.348 25.0313 309.625 20.5591 306.356 cv
17.4204 304.054 15.8999 301.355 15.8999 298.656 cv
15.8999 293.126 20.543 288.41 25.1533 285.613 cv
25.6982 285.28 26.2432 284.979 26.7798 284.703 cv
30.4307 282.832 34.5532 281.97 38.6758 281.97 cv
38.6758 281.962 li
38.7813 281.97 li
38.8789 281.962 li
38.8789 281.97 li
43.0098 281.97 47.124 282.832 50.7749 284.703 cv
52.7344 285.703 54.7998 287.093 56.5972 288.776 cv
59.4673 291.443 61.6548 294.858 61.6548 298.656 cv
cp
.156863 .184314 .211765 rgb
f
24.1631 290.51 mo
48.2988 304.446 li
34.3989 287.889 24.1631 290.51 24.1631 290.51 cv
cp
.117647 .141176 .160784 rgb
f
24.1631 290.51 mo
24.1631 290.51 15.0186 306.799 48.2988 304.446 cv
24.1631 290.51 li
cp
.184314 .215686 .25098 rgb
f
57.6187 292.413 mo
55.832 289.53 53.1777 287.572 50.125 286.178 cv
48.0591 285.236 45.7983 284.651 43.5288 284.74 cv
42.4746 284.781 41.2939 285.051 40.752 285.957 cv
40.6616 286.107 40.5918 286.275 40.5889 286.451 cv
40.582 286.841 40.895 287.157 41.2002 287.402 cv
43.4634 289.215 46.4624 289.831 48.9072 291.391 cv
50.6182 292.483 52.0093 294.006 53.2676 295.599 cv
53.8535 296.341 54.4409 297.125 55.2715 297.578 cv
55.6968 297.809 56.1743 297.944 56.6577 297.969 cv
56.9917 297.987 57.3462 297.946 57.6162 297.749 cv
57.8101 297.607 57.9429 297.396 58.0508 297.181 cv
58.7983 295.69 58.4971 293.83 57.6187 292.413 cv
cp
f
37.6509 284.309 mo
37.2725 284.112 36.8525 283.974 36.4424 283.892 cv
35.2446 283.652 33.9893 283.731 32.8242 284.092 cv
31.583 284.478 30.4072 284.939 29.9023 286.236 cv
29.8188 286.45 29.7607 286.699 29.8677 286.902 cv
30.2012 287.536 30.9951 287.056 31.4644 286.922 cv
32.2441 286.699 33.041 286.537 33.8457 286.439 cv
34.6294 286.344 35.4277 286.309 36.2124 286.413 cv
36.9268 286.507 37.4702 286.86 38.2139 286.804 cv
38.3916 286.791 38.5781 286.768 38.7231 286.665 cv
38.9839 286.477 39.0161 286.096 38.9399 285.785 cv
38.7773 285.119 38.2705 284.633 37.6509 284.309 cv
cp
f
55.7842 365.431 mo
53.0039 367.037 li
51.8003 367.732 50.8247 366.994 50.8247 365.389 cv
50.8247 319.97 li
50.8247 318.365 51.8003 316.501 53.0039 315.806 cv
55.7842 314.201 li
56.9878 313.506 57.9634 314.244 57.9634 315.848 cv
57.9634 361.268 li
57.9634 362.873 56.9878 364.737 55.7842 365.431 cv
cp
.490196 .647059 .701961 rgb
f
56.7773 313.961 mo
57.1216 314.276 57.3364 314.822 57.3364 315.565 cv
57.3364 360.984 li
57.3364 362.589 56.3608 364.453 55.1577 365.148 cv
52.3774 366.753 li
52.0176 366.96 51.6831 367.027 51.3838 366.993 cv
51.7827 367.359 52.3574 367.41 53.0039 367.037 cv
55.7842 365.431 li
56.9878 364.737 57.9634 362.873 57.9634 361.268 cv
57.9634 315.848 li
57.9634 314.724 57.4785 314.039 56.7773 313.961 cv
cp
.0745098 .0862745 .101961 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 
/20 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (AKSANA) ()
%%Title: (1702.i301.023.P.m008.c15.kitchen appliances isometric set.eps)
%%CreationDate: 2/27/2017 12:30 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kfim-$e*qiLcSP<g/0lKKUO<0+?s,B2JO"bP$PBfI#B0,f1O0MFC]CH8>>iWP(;UmCN5e3rmHUOJX)%%df$]`9l8PcOk.07C
%B3eCe.As5$UuR*)r;"C]ddu1$clE,/gQno`Un0LbeHTtKn*$X'Fn2j"QrqaO<Vh]JffSE).RCOJCt2a\m^cBqkr5G%ruAcCV%5l*
%hYLGsl[Iq.l4eE#PB*cHPZs]5hil9s9SM1,<IWDN>0m75;n7%Vdt"0fT\"h$6/)[ZFL^^q>s]ugQ9QAokI#32j7d;jk*JRD>1bQ4
%dml^YB4!o6l]M=AAb]0oJht/Kn$,'Q(^_=2O!JON7G;Zi8XF1[d#gX:R=EjrMB*FbT:CN5a'ce\poI)VUpGL[%Qs)FAH8SYkluO;
%nd<N9#?\9*K1$%f#E<o_mfdM3<?lEQ3VH,D,6W`]+MaKVUGSZ;6N\SbKmt1?D=CUYpj6:m*r+9Y_e64#koJ=R#;`1q3(TGR+85"d
%k=r;6"&bOdjtPf`[AlM5:lDB@lTS%@J/S=/+ccNHH-cZ%Ct8DRqfU#H_s^q))nZ*q!'*d4Sa<h<k&K]=%5atCQDEe:2+:LbaYk]?
%*,JoS,%8p:-F#bc%bnC14q<,5p,f\R>&ui>b=EnDoAk(m<fL81;C.h26VZ`\iPu7SpcnlI?8#uH,?NBYih!s@EdmH_].PtA`E!**
%ho.fc@-].YI(a[J^Q&8dn">MdS)Zg=-a-]MU"7/:s8:mlqp%AcW;#8om7s_>hJ&Rhrqp9::i2a-dbCGCCNX#SX4%"3GPL3\ZqLj'
%3pubXBES6o@.JcKrFeNMJ7g6kfXF\Dre00ApcD2u=Ht!OiW`M!WVKUlDmb:RUCt=EQ/;>-G+-D]l@.4N8G#@#p297Npr3Q%`N@0l
%WL="AB`jKr'#=uuE<Um^eV(*:]m_Uo.Nc=VL2'4q^B2?Vea)]0XL*9_f'#u-;`d]BjTE8A!KoHV<kHa%fq/@'@"i<`4Sm_jD:NFX
%7b")5&j<-4>qbCupR>udSUU<"3c;@j0g-BSs!m/r:63qnRnb0c;'!H=o@nN;#G+!Fq!EuCAQ8OO^5k;n;`>F-<J]q8H;&c&FZ*K7
%T)&b]W)TmM$lpQ5Y(Sh3g[A,p5Y@Sjr(\i2YSM5)cY?/c#1?A`edLL5C,O^YkXe8\IN+1WZ7J8\m2@@FB1+nGbPh5ABMZ)d.[oab
%?`emN>*kO>K>mW=dLGuV5$O?HfeR[E%F9dFI],r&!!"'6)1LTV!#[PmLd3;#DT.2^9Y!HrW$JkKk9$>qr*pBp;,pVK%iE3aWS4AI
%(0"B.eC't=4=(9P<ZLlK'NZa#VkfQBZ79@t#bn8B:gW/CfG88I+paTe4NFckb;2<!dlkrS4LnQHQAT"R(cHGF#[LUpEPXPso8;hS
%)Eu6&B'])baH!FV1`ESi%,%mU4bQNPAP,2k(T7@X5N#uN:.Qa4<Pm_QZRR1_!-b5u$WKGrfb&nVCLUQRMfeNSU-P,U&MPUJbFT+Z
%Bn2TP(g;Hh'/joA#_=as"-Z,KRVJ;Xaj:IL$qV]C,EP96[=SV4e1AkoFA2j@.%76'@n$K>(#d&$`XlcNM\q05n6-fpO]Q'-[p5/K
%QtfJKl:&$m(%%_o//6p-%;lRdU@ft4L_LIi$L'9Q`2XI&pm.,QJ/PRP)Q5$u<nm"24=Z%9.YSkb.O$e]r=0do9sE`5+l'/m)i[=B
%^Du@tKAl4eZ!;pY:f0*??_*=`p@\;_oK:2Rq\T,=CU8Ii9iG"!.tCSHas[b@G`?HA\jNSHJ$W1_]P\\*&8p,3NlLa$XVWIphll6C
%A]fl?)B;Rq7G09)-.d8IXofch2-o%g>fDsqU#FXajd>[MJ.+*Y#=PL2M&"4A$Le'-bD)Yafo"K[*"D2fd"PP_$T`eP$H5?bNFX/(
%4-5Gq69u@''gi+$-In<ANsn48US_W/1,t"0PkGlM?jE;4a&"<"laj4>[Rk&-"/;<"!7NioRY4\A:mh[AJnZKPJ1C`81tM`]=[^41
%d'JDB2B8,j,`6k<4.q;Dl"N/?8qd#IM/%uqnZs/@Dm`CGRMDJl0?B.Y*SJeok!Y)nRi4%@?C7tu$VHBn0/l/+6%^LY&WI^:*'lQ(
%W?q]f@IX=l%F#lcTkQTs`TX.&VF)8#2bdL4kZ\ml8l%u1h4c8;TBXI^/R)#t&9'B3-@DnH%61qLWE1JKLVu#+D&`>i*u@,$?%@E_
%p_,u]A[?3poMI0i!gO0E"pPn8+fIH6BY[+A^A$PaJ/L.nj("hnVHGVf;m?r>SepuAs+Zeo`Z<GgU*2#nk9-S14huiF@PUP!'r@"J
%;Fj/(,bYoM:^RLg:AIYg9dY\LEfn5h,)(qD$J1.L/eog?.8mZPG^FTTQrTBmdqa#.@g&X+/%Rmo0nsPN1#@:a1afKKQ9*R,%bmN)
%(l(h9l*\XR#a@6O)$:X7l#RD43]1`)<@).3%!k\mK1f5bC/+qoW&5S`K/g^s[5^NP6(PH`TFRCt+Hg"Abr1Ak'?%:^:d>JTSW`#%
%,2*3om#[=;5[8(Qo5'MSFsP!X"$S,t2%\.0!GRDmgPcgX#ipSA"QcV7O(*YB=!H8@n00$9INf&)k#L-^J-c;3!5?j84O=^rN?F!=
%:bjmra?_[rl(AEORPU>)@*44!:KFRN'YoL'3t;4"`e3R?8j^XNdOkR>b!7tpTS^fDU7b3P6Fq`C!*$=^StP@X--$`?;fO9gE^85)
%*+/fT1dIrAe8p.t.[YHL<-:Q#c4lK\WOW;O9W0s)<cepAnse:iYQcPTR$L@AP5u%]-S"@!/8d3\CgFMm1(%]Cd=Vmf0Oj$6;[2Ul
%%1KfngR5JN`)9#n6X(]2#hn/dQ3ClX3b<'^,$m#./s1Df@ur?-`J@)/?;cTF'Oi?q%Dk[D;&ZLGVq!%/Pf13Ij'=*E>q+i>.:c[4
%jBF'DgMptT=tNK^I)@F\=tT=8h/k\Ikj)q?3Md=Jd+6Z\1/lb6FfR]CAZZImCRD&Pmcm6sdn>!)$s=^8@2PjR.07]@$C\"12,>`:
%A`.l7f5t:WoLSmW\K$#"lN^U9TNs9G$]_EJi<!sn9Am+LL#=X(+k#R5Kb20eW&YO<ciG.e0*>r1T]j7S+r;&MBu"+6(pp$&!<j!1
%U`aLW;$;+K:]X]26L$>C$>=G@m#ZPUSgY"EFX&-k`Xi2TUrX9-KA]Z`4gSh5i!_]EBc<jdC>d)^7bK1-T&CRk_iA@AobIM(8DcH&
%/W^5D"BLYT,SHgkeVm[dO"@YHMaS?8#]%Su'XC1M$9-$5s,?n0daT*7.6B:EeuGK*3fesH:;Lq@+u>8e1,k7B+u$?lYlUU=Wa_&Q
%U4J$7bSJG(-,R)g'Nh*R5i`.,W$cSfb>u^d)pKj9/rPlq-5jc7hsf=>q6u1_U7$n_BTZA$%V[)&1e2,f,^XQ/#*o?7BN&"9VHJqR
%'P(r61Xk9:-B"gI;hIW.9:@IpUl%HJ(o3$ha&HUc"#kMl48F5^Q#tK@G^.nrKo`eQ*!#J.n,Xd=%np2$T++#Dfkd$B@r,,ZMVG?a
%FOQQ.GSp$F+n&&IlUrDa9-KL[GSmb%0tfKC29'&TBR4Od0flP'ad>t+==3eCmZN/2b6G%DN>l-@*eOuu[l(&6j9uKkC%(,`6Tb+c
%+LYn&AksU!*f%^?g9)G+MC6=$]M3C\\cC$a?*oK$d6OVAW:7KcW1t;!#lE.1TZ[EINhrd=Wij__`?lS_?Yf:t\:#B#7mNK\p;t[i
%$Z;fZRkE^/93<RPkn7mGE&5mO4!M'1X93Xnp2aaIh@q02NiL9q;#.hb.MMBQXIH`_^o.o`71;Bee.Ks&UeM`c?5+"PF>3e=Z8T71
%8X+Cm;un5[4/#sDlE9)LY0H^&MD8c!(a>Z3)1eTF4q]6(_08:m"Es9CN&mOs@sk&>Qs'iB=peE$2+5YMiaLX9s32LpnYh2k!,gR-
%[p=HRjMU8-$B<kd<5T&f$B=RQ@/uQd1Ea&^Yc7`$&_m7C_t_%*_jF,L)n.[d?#*+qRD9Y3-HL?9Z5nO5LEP=paE@he:Ihi\OR3U<
%d&kdjMhg*I.+g/PCpRL`iqQoDk>rCmN%:3D'a[*^>V]=(j4?t%$`[ClhFI[RXh]!V.Jq7?7`m3SJ7E.BWp28[:_:#C;K0s!d4lql
%WptFWegQkIbU=9Wj-.c\FT.Em6OMGA/2["i6U+pf?9Z^dbf$ko'Bk1=BjrE$(pCs#FVqSg'+o'1HY*0mr(XEj.IrNefpii$l%Bg,
%,-EspH:PuFc9u!:`]j\-QkZO>9LYHNbOQA-:B?T`h!!ceIfk<4A;]+=he4'F^T(hc#%e/$?Bo@AJ-_`D#)T+D0N4hX9^2[^bJ7s5
%N<OY[JPi65#dasVPZb^LjfT@Ij&?3-[KgkKae95(ImOr7FQc(^4Ud3]M(JTZbRknL+RT>,*8j&)#U8Oegl#TLKl@DlfW_*0'lh^&
%+9i7K;6Vd"r+pp'A]##=_^9P[7dfIc`kb-<%#c;@YXnIP-G.j['j2kFc'2XRR4L`6b#Dg;(sB$M4-5kVRdAZ^Q"e-ON1q4OXT^M<
%Bp<i^8;j3-(9Jui=[bIQ6D&5YRJ^S(SreN>^iOa(-N%_+VBGPF(!qDl_Y9!g^15)^NYANA[^J;=FI9+]CJRYc54BA<L/hHNhaPR#
%A8&UgU7>TiY=kq:'@mir>o6[b[]gf)EhM&GAKSX@LU)_Q=:m%E&Jr;H@_3&Y]B#CuYb#C+7(laQM?7ghm5<joPg4Iu!C+:CC!rRt
%nl?(m9$BkeEb%[N`)9\pbX*q]A_L0q_::5MCVoRX>*0!5V2uYRZ]94,<F+)iXE?%.*S^:4gW>a5*Y&t[_.@&qS+a^QI;bJ'0(#Tu
%b*Nli8@C1[Y(SAS>%P><13sku?9QZc+W39!JBglK*8A\!NhT:rC^OC:<[Oe_jMA!dDRO?5k-W-A@`#</h<aI39f>Hf:8LdU8tdr(
%Qn4Lh;(@9_<!idXCX$hh^d]L_Vq'dK`hrm7@(f6RHsqr^RU[)q,O&T0Xj*9E(fS]r*m,8D%MiU\Mm@t(ftjEL@*q:\/@+lUVG)-4
%H'A9%@msR-Q>Lu;ECesGb_u[A\jh:;)$u^nO;S@mOcUFeR?<RK$+IiDR.=Z43m+7U)8'Ah(rN>pJ8I"J"(P`(Kl&QWM?-b1[T4s8
%Tcbk?=]qC48>MS+gr]]$n>"EdP=e,BSH@I[D*BroI)YTU$W>`3:C03rUMS);"G6IZLBaIh\hZtW%qG($.tG*6g8]2<,()L6WY$_:
%87dfG0_9)[c(IKfp4HNjNrnQdI.R`+3jE3pPEJdg.Oo;iM"a[[.-7<??-n:0VdQ?PG4`Ff8L^Vm<FuP2Lf0oL@&7mHJI.)\.,/=s
%V!O@rn\7<g\1W/nXm;68(l=%J_:W1p?nB*d*AXoO^>EJJhNN[u%tGSc8JTGH?8euhjSQ`[mgXS'Yoeod_RLtp;?"%&PfZOp/9(Al
%2)hh.d29.0DJ$N"BK^-E:TsqD[*+O-r+r8Qp\Jm=T,k,Q4b(33+&3aVdjC@i*t(9RZNbhs^#3&r6b#hERUnTj</(q_LBK'S#<1hM
%6O,e7D.n#pn,`O/eUoBUUsTE+I.5uO4K)6A1_m"4kUKJrp?=PZ6i+e:(24acH/QW*Gd`X)R#4YTaWo*YNSQGq+d1V>N=HO1n!f?o
%22sbTnG9fF$&L2P!ZVhAObH_>,LXhE*&;*Jb)0rm]uDTT<OZK@m0HT8R\M?@7]J"tVb+$uRHN2EQG^"K:#"%a*"%:=L#prh$$@/"
%3K9plMr"A)mFc27H-3-^*d!3H0rV<I/6G#PW<>l=J48\;l7\F_'*Vsq=ZYdrRl"'.+;$W/::0PIHI<Hc2m:RliBbc1+W4AdM+%ud
%f.&)-PfYX5;S!F_mPX@P.2b,(>9&"0(FS+g=?`i64!n7KR"t@.UE:eg,B=:+WmS&t$6o@o3"6QiFp[Bp!<!=.G9ro["*?DN^2XLY
%Y`TB:A-ZaiTWP:Cc>Q*"&RI4],bj?77pm"P/^ZIpEf2ks1@Z3X)',M(MFU_mbpjba/m`P!R'J;##A/`8$n>Xs&m8f!<)lCg#7Or8
%eqj671O8".976t4@In:gPqiA4,XpsFC4ouGE_0`>aQ+O:`e[H9"r0q-)K^^9(X<T4[paT>F6ACNnpu$SJMJE3:bUr*,\k8`:<F6a
%YjtWC0N(IcV502L;Fi/a,a4HT<GL]*1*_o>Kr4XZ.]ie%>R"*9$:mKur3er#"JgS^V)F-E96A[$hUYEAUg&,3+_*!3$JWEPh1XRp
%R<QGuT?>Z;D;B;-MNnE/Q)T]kCb$KhNqNt;7@.SsKiD)iSK:b-g;uE7W=(Ls_ZH/N0qOlA1HXDUj]JrT'[4j#C2Y/Lbr,^1%=qm=
%&BGLDjsM<IJNo^ik/4GNV\Nqg:5GBGS'r:NWdl0D:Nsu+Cbn_B]0`V=e$TgIbXfg6KZm!.N.fDGaGber8@Ts8JiR*]_&V8#T#T&m
%1'[\Me`+8Jr*[#M"1K,_[4%8Te&R"MkXQNb.<.#E7"K=,Km6o:n(k3WP9JWr%Zg5?XtZjrG,8-I-X7AZK^fn]c$+h6_O`ILOVIfm
%K6DrAA\"m3qnfjM;T'T>Ir/P[D(o^HoZj<YWLd+u'fqS:M.7CG02W]r,=UmJ+tV,=5r:)3N8k"GO=E/VCuljSE%ooqTS3Vm:l,NM
%"2s'sb_q"V<jp/)oQ^?bAlE<]=_&t;s!_u!Ht;!f$b"l>HSJ/1WNtn>]#NSmS<q&MVF\;&"b5&lr\%4tAM;FH]V2\1G29t4"_i2l
%IdC,70@lbd&te_$3-49h>kSfPlm7hJ9-dHN"u<`Mr_&Mpp'Sp8D=\])FL,%>>'\#iVXQpqYb>EKM<)JOpoi6IKpP=kH-LN6?gK_Q
%ID_CB%d\Q"]VX:1\nSdWAernAK%a@(3t#e961$5%SHZE>8PjcV=&'7]3125*9Yk:Q]sG'%UYG]"Sb:S'r=Z+oeM2eqreJdFCZ'_)
%dkqHL2RBaHA$ii79\2mep'/_D&uE+!b1%+ei'U"^,2oTL\SIaBN+^RAlN3WbNlA=j-aD>`G[595p,YBnUsi)I7D%1^]d0d0HZD]<
%HD.Z]DKM<V?QYpe?Qa;tLu7o`5rr#cY"gV>Z[j#ZU!>&a'PW.+/3:_g%U0BI8kN0J)WGn8;9KP?LZ%4aD)$E_DOs=]@XgC!O-n-Y
%&C/-1lu`j/KtDT?/mW27bXe:3E6Z]VcE*o<<iPH9XGcXa<d(S@`p_Tec+K`DpXO])a_AEgEB(Zf]f)cG7KZ=Qi;'@40l6Gn0Adb0
%X5((Y)o&+hpf?3"1j1Z)%7a-1g="3h+D8h5!B<F_!G"f3@?e]BpAXLHrS?0(]<h6Uhh4VTqn$dp?M=BdfpG'(:8)ca;CDcVV';9g
%;$];@A/KP#9*@!CodjRH@/MW0[A`TLf'oQE..R)P&7Po11i3j3`eefOObq'i`7UkrdCK_Sh$_P27'B:ACq#m#Lt8,)i.r`$TEu99
%G_/XKi`iWbL0m?fhm+9R9Gg@\bH/WUmZ>fFL1hk?<^YkM-,J0-Ua%[CUNU/ernB;?HU]eC-bR2#bYEK45\i@i:GXj_^KMTT,g9:5
%K0E_@7^S0";15f#R4qn[Eul2SZ$E=-2C\loc:OIH;hIWTr7oX5[KYUI9fAqP'gpIFS#&s_W$<A'fJ6B=/A+GJAca$PX?!Z6A')$n
%/W_ZCIdgd93HOf3po&W^]jZh2$B9$MMcP?B/c[?]IqBT2ViQ'>A'I]@YoAa=fRB5TA))%>2,/![1/Lj-K;GNR#pmcf"6oBTO:_[=
%`Y^>WC3"KPbEOZ4EeZ3!b-nR\D6.Om.uR6L7>*GN`lb`pZ>H[shSqU%eS6.IC<^(eH2ctKYM/W>,-rq`hJSZqoj.VkI4]c2f&<h,
%Hb6IbeUX7)>,>;92>thH$"%O?bPsEa:&$L,pNiCaBtkI++%`L5=Qjl)6(#e`X^:At9nH3<[@Ln_rY#7qrG2`2jg)Pk86S*,-Ca0i
%OMC^>T>UR_#,LKB(^,$,7Ph4rr(M[Yce4ulIWu2FriT7J(F]pSE:](578Q(\kbZ'A"Ip2fXjc`)V<>;`bpn\$D2ha/!cDYXgtsr(
%]l"/['@=)&ZESCJW4+GX'4iqF[;$&M&83rWM!%JZpA1?/IQ_@FK#tB-[3ecrC4%oP&raTIW1<_?T\Kj&oE"P?no=_Z<ld.&8%i*0
%1/9M1#^-OB\5j-g/B\1gXH6@.A(Bp)p+&<+Y>e&L^pClaQe,cT3^L5^:ST!u^m)]JgmFA-`]RD`#KN$]L+qbj.6kk:;JV;&aFrbI
%W*++AXZ78Y<]fO?]iHKa/huRk&3=S!4-]e.OS2,FP%KSLc-X\d9<m#\\%8tR]&iLP7R<?lj8l?-_3qZm\T2bB6KZG8)`!g32kR7C
%T"/lS*?WM]qQ!Z!H[D9n'J=^obKZY4QXVse^0KgDA\MF3b@SECJ)$C6WOK[498CHuqfDUNo&imoZS;@uGWKa3=&;,mn>i\+Z`U9)
%_3"OQ?1ftV(3?rdon'qn5)q"U,9VTa$Eqp)J"3B>@&nS-mruB$^Zgd!DSGN#'^SjpUTLOP<**dQ87OPWB4s6">97i=]io&]h4Su2
%C09E%^/)6jj=7@.blVD#<Ef&rBDq:WnU=+tchslBM%+L8=n,aS1llOhF66PUUPbZRT`fTe&oN@l[iJHAqr?8P%HYEbG)0%8*+7U+
%qjl/"m8c#VVEo"-b01DjO'f0Bm.U?mi>5Qu:kp9.aDqV'R.j,T*J@_n=@GtZLW9?lT^fdbgDC0t>-k]-/ekSeqhB+/Qg-34)]$lc
%\Ro(hgDQA_bM^-Pj"/J.a1Ouo'PcTIS?4#2"p3&,[F3te/c_'M6(_q>nhQ4"]pteg9nS(a"p\uG`7+j%6bcRc>r7.>RQ]bddYbeZ
%^O/MUVquu3)s\YZb&K/,i9NdW(F>th0Beo28BHRmG1&%NgGp@jFVIuEcd[PZ98alQ99iC1kCGEXac_%k@5I3pTE!-/NFJqgG<8+[
%^D,Fb[lodDaeq,oN0gjBe')b:3310'f'7^Q:$)WOc#-1S=UH,aAkt>0Hq[[lr&/o.eS/BtlE0Xl#/hLm+dj1:HSK[_K\(-'Ji0aA
%AA[Y>o'C6[5&@6OE:^fV;s^tEcMF-K.?35m^_\s<p(e^.:W6K.^=MC&(1VO!J,W4;VoZMW\C:DSBtTdd;*6:h=VSi]i"m)db7,%0
%5hb6)1Hq.eL8j<"J`Kk1cI3JD[5cSa"Z"\l<jUK/8?jmO]^VE8TRIU)K1`_Bd;Y@RiHLYup\+IY%9Jt&[de+gG29>)NM+tZo@jYP
%EZ.+uQX]9"+ZpcJ$9utcUQTklN%dDl0h=[I\X&%mYG5"6e.tPEc/=2ih^.<?GSk\o.NpP(nh&BsbkpZrF4P@Tn,#Wf**A_2T)tG8
%St9tg1/6r5<j/FE5cW0'W]TOR)JS[`YZ]qIJhMJQ1q$\*FuZ9/DZVsskHARo'/:GVT:,L9cJ0+$h"VYe1neaj2_.jrX_%npi)_E,
%7fSA,M8UYG^b]1e.;#NIk*@A!2(LLE!VriH-E(+MokJuQR[se,<`o1j^\scR-3t$6T&3+R;D?0pTiA3Q"$ac`R>P@Tm'Y93JIk(Z
%l<3o,=sMS/?i=7T\-3\Tjm4N3AM+t0b&,9h8V>6]KJ0W)P^//4VW+\&?gHB<"1^q1E2b7"mUTP3>a3BJb!emSbbD&-"j]V/@9P9S
%/kRUjRf?WW>G4/0[j`+>%5M'=8sYD+DePUk(M1m>SI#TN[kegHPsh-h*Hdil;:6Sn-l2KMkG"c@Mg8YM[l"tuEgq)HdNGkEX+$ML
%1lI`"PA2_R+Z3jlQ]$9;?E+F;CaKqdEf.i(Lu17N=cVE@h-X::3Uu<.R$/shL_`j;V2=tY2uUtu_QmD?o&XZD16]hflc:q>PA;U<
%ONFn(Y%;Wj+llh+"!sAGG.Yu+!%0XfC7/&uDbIL^=M%SQ=shcTWV2sMC>t9#aUImPkD^`989!$0fnJ,[ba-ZLQ][ObUD+upQ;P)L
%&j0[FP*$r>O!/q=.YgfMSWu)+T6[ik61(;;ISfcgT$6-:j1Oo&-YTm,*q`mIb?J`+C2d3hNdpS2,-@mdpcU:\]aY&0XAGB39X9RQ
%ZAVP.s&$r*-Bte,PMLmII?_<[]F/:+9##Zcb%t+@Uhm!8U_rU)/A]X:4N$Uspd4g?a$OD$JR%BXQ[(BHDV$uKrWPf92Yjn_?8TAM
%8c7i"q(JW80?+dHgn,u:/#X5+(FeI'R<SI3Bf4VH0"A(]rGclCL@T/HJtNri[uaK17Bl6$>V&I:$j<#eH^t4nEI1:a*:t,;c7*^'
%,ChF[."B_(0J4@rJV,jB*3Nuncb3*G413p6,Ntt$nI)04YGY>88k8lXb85)NP$GqbLhk<'_B]4p-iL@Lhe`=:550P>E:Ml!nT))<
%S*g5fqnLh`Dmo[-C50%mhcp%+N7h?p\-&hT)_!A\CsR<#,?o410?Np8ZT[2^chH.*:'r5DG';I*#/sUV1h8BONt'X,'smiIlLi`c
%P>SF5c7aJDOK7:CS1--3X=uF\26CCK8pQVK!d\HZ6OH]In!nr3Rhi+OpmfOAH.TENH/BgBPT$;J65E"'Z3]+ljaJ\5Q%d>c0\LA'
%5dD3GAmqtr9K!VMA`LE:"O.C[&q^Y??+':T`a?,S4m6a)K'Gh+j#>$HCM31D=^8M$,+9D!iNJL9-38:%inR:[PQ/C$UYd$b#/u5u
%$mB7'VX\C8LtG.sBr8Ei*cj/]\bW[qC_+DH2Fg`Pi58e)+1gj4!]Fu[\"+M+?`rFVQi:]O09I^q4'Z?/#c>s!iFoD,BcaF?"^\LM
%9,;co!\[^7,n%@rJX7qW1/UtYR"Y]MGSGnl03R4EN]k`?n8b)8bO"SkgQUeV2Z]^!mdMcL"R3?8WP*H+9O'*hP(ej,.@CtKZACCS
%"D!inbQeXLIb@+-*9R4*M=cX<o</mIm6q]'nPpVdZIO:,IVio64]@A^/C6063$1W4]IV%WE"g\X]ol&TcG)\K(u:S8^i[2+@(O@j
%B"'F)[kH!`:&d$D'HLKSe^iX2958A!WVdI>:1^?okJecLpuC]i?5-O:nYT1cRMBV7_-riT8Ds!`]J#>VQX6f#ZYn.-e^+W&.7Ng%
%XndC^n\=8ir6"B_:1mtkB'-P9/3EIMDOlQK;iIQp*1B?(cVRoF6R%NK1delHdH)'5r*?A#b+Rd61IFW)K?QcG/g2eJS=(Pn+,aW>
%QS%+#3/3j?0c%j.=njt2I1,$OBlM/Q(j#$-0%uc?iYYf<A):fEMdp:;N!5&Jr-(91St@LmlF-S&B-"b8oBWS`[5@^AXPQ?k7*X$\
%V95%/H"N6pRnn#?bc0J/b+7H\5A4*Gp]1KdZbiit3pP7AQ#Z?'KJSU,a0g5n'@dEQ=Ws-oMOS4mYn*o'Y>eV\^b]1m.3_n&F3@H"
%A8]$3cRp,.`MbT-BIK,a3:!piBdS\PAqrs8=0qO&Brm6D$mS%e2"'A\qfGIa9?QZp)F$C<>tNL8l$)$M1qV\lFfl2M?%JX.Icn(F
%#<BH<6,Dp]P;0SkrqKYH2do!=[F[M$Pm'cYR'TEnTC.sKKm?JfP&F:)="7adA1o+i0Gdq"Yp"-Cmd0k$.'h?lA<nh$G(Q6NZV^Qd
%L>l.-*\CVB*gbLGbM('c\KMEDq/ZN3Wl_oabaZeg\TrCL12ef:k5HB>/qqu.gV(.%Ql[U;;d?Gd\T@B*cD?o:balr4\]gVfgptY"
%qbOhF3TV#9FQnmSGF-Ub9eK^$A29KhhH[X9X]G,-j/5b,\)![gD(dJ3i=f`<1<fa=7EP`)$h>4GKtg\5],ri@=(24!Q'`_8[mt[;
%kCSZG"Jb9jaK\gLYFjDEb2nArMHXl3;X=9d:DMUNp3tTA7&`3%XS=F0S)kGu*Mp\e;3k&s)/g["dBD@>P6Eu0FhqV>_$m/DQS*S8
%hCdKif^I!VEVfuj^Ljb$V"]/4nIc%Ab_kBY^.<Cj^!9snT"@UPL^4JkQkb(Lhlq6&nPbiq$0YN#Pp2Efg[C[.PoqY^8asrT]b)0^
%hm^3OH7Ae3KPu.OgIuT-:Jch];MKr1fU7Re/VQ1Ss&X".;f/O'OL)fZ<6l!@jS<*DP?/tJ@5m"#i9KbN#RQ&fY1a]?R_.t\:1bBf
%[:O<ZQOPU,FcbaG\e+J]5ODK-8ED*+=.*PO+ror,SA=)5R8K1d7DI4ub&!fO&*/PMiIs1IZ398LO540dCrhR./D0n?%@t[^0]HUc
%d&bkMKe[U.DI5VZK0J0PU_1M21R,ajE#<f89`bQ:FuZ:YHd9B,oK0J;73b@rRY$7ANjgSH\R+SBppI@ZA>U@0=J06JEB]>GGup#?
%E0tk2GYP@e;ipUS:bpk:pptGW,KSQ]#3XP#q)u#nETZ;jNaa.liYLD0F1^9YSm=$Cf'22M89?B>oeu@2ScuRU(AqX9L(DP*\>E[X
%A@Ni*r%mUe.[c5I4f2@f+lFQGXLVD9gJGM/77u889*mZ)ZZjr'Rr:$$]<%d^HH!qn57oit272jsAE6Y@jE#fB7d`1iP4AFD9J\tI
%s'Iet43Q0h^m@amb4I7#?HK<BZ+Gbh3VO]u[h=e_Nc4#r^l+aOE4rfMHWF(n]MNu!m:gR7;Of(=ZrOL&#5)gHf^I.<::\rD@JjWl
%B"7#rVO?7oLeasJMV(*9r&/Ee0`aFIBi=@X.u+K]7W&m'jXj&iDEF>)B5BJA2H+M.0QUlq*'u7f*dKs;ps&50RPu\>+jXLW00bA@
%bdZQA&9]nj]%L98=m0AFlqki/TjH&-S6tC0/B.2SUfdVn&R=oR85"XW76W.XX3o+PW6E&OP?4mK!OP1;%-;`E)k>NKi\uAdnZ)Q2
%FWC*\U!l*?X/`eI-nh'l^ROj3Em&Ks8b'Do0Qb<)YY+m%U@6])4S>2ope=N,`='H3PScrZdf]2\ei:n=k\<UN^N+VuC2&!8rGJa#
%kc3+C%'Hb/dNA/\%L6;\O:aaA<pq`@ZoZa19&DBh:)Y8hl2Apms,a&nnFRaDrg"7$g64^KOeq?8nDtgB$,<On4u.fpCpkn%'laY(
%N[uEW*Vc2^8A*`(d&^!8`RQqE$V;&^1aiVsO.-tNnuL.d[[P`qXZ$`DAE>8F"O?[7-jQD_X&YLPhfOM!?U8bJb&0lr-Ai,@&!2'8
%f+\>.RQ"2=F)6*J2+)Sl`,]ro`Y-tQ%0_5CZJq8@TVqi7^%\e4CN,RpaB?o8DEV@_*h8lul(=Wsa2+u5_ft;R8F'&JmXoZS724EF
%[77bLMepCd;77a!(fqlqj:0!bF_!bTe25-2hR$;;`Ws]8FUOU:d4Eg%LaNqTFCOA`>`1V-O?)R08HLPC9q]c7`AC`8*Vf<#f*`F9
%#H*67/^#t]h3;IjW344QM<Ht2,Ki+ilLLi?BV=,Gd/ML\7mra=s$MAb^\ID]K*qOdnSk3tYGZ)YU!^f+%HGYtISmA&;*eP1rG8"4
%lIaVd'9/!&dW%G>6$o_+^C`;LT&0W>=ZT[n$]pqKc\1Nk"bL#Cip6,8.KDt^lG(lnP^43[:+i)Bkmf88/3dfk:]BoHh2R9*!!)$q
%'4Yh*BY);M(S4U([3iV#E,n9(^]I)gK&/#P8IBKpi2^pM//[6-h*Z^n[jm`\`&laf,U)A.RH!@^\C0D@3_;9^2%1h0=rD$dGNP*=
%IA*nE=*h-%Yk,]lLhERAmBmjR+T?g?Mlq8P1rE.FJtP]]WW0uL3LZIOq/;>WFtMhDg#$kdh[:RK]Cf@hp5!_=b1i3j<&kBbqGl"9
%DT_-1B]jJ;cPqmZ:W.&.f`iA6cT/g7F.BmZRHd2I;S?k9"qn[fHlgY`nqNl5`%Klha(Z[5lc3Y!T+XWO`aX,Fl@GY6)k?Tp414\%
%)_3b4iC\0$;in4oHV*i:pA$Bl5hF9"3#Y*/YCa/>Ku#`-*mD;I&"06Q3<>S+N,[0^f3>/%r@hpZleO6nHKdg-^NSp/:d)`Sq,Z]A
%q=Sa.4oS)bF7J"Y<NMT3I+ti*j#5Q4C\Z`/_:@1T[sE[GI_?N"'hsuSENAJ1Sep\)W7%\i@]C,cUdDiJOq.G.0Bgpb(CW3+fMN>3
%,b9&1"E1d"mn)]5<kj&?CouHlqn56U`HZ2.YOilhG,2S(%Q[Lsf'(`G2"as#+\3,BGM7KNn&p6!CK1B7?SK:C#j?JYV_,Y^Q/Yl#
%^auNIlI7OROp[tB->"IgGpeF#G9UuR$4</TTc)lV'laWq@Dsrp"HLNqR$t-GTOFq,kVrP4]130R$<)5s$+`FcY<Y,Yrom"NC9?Zk
%f'9["c_33gi)'Uj>`F2:.`7MEJgS\p[F:=m5`fGCCBOmV(N_;S(*lA2%Kg+2^;(E#e8^cPI]j3.32)KTTfbHO?,([ApWis+T[f'I
%=X8MD*VJ0((jf>1LTe=PpAYI\m7o5G+\Fj@=@6BoY8ZVaP62XtCM4TD&:=Cfi;/_^W7P\q"e_D934;-/+$j]DMD]J)5<GqEF%)E#
%S^toPDG[.-5bdS,"$?u1[:XQr=oUKM('+a\*#tb:N!OUOHGoV4[lOu5G83_)r,/PZ$3b9ggTUI5[m:6FG:<HlGYPs^SOIAI+^W:h
%'i]L`3^Dj)FQLEe]Sgn^oi`<#'1Nl=J`Uu+F>L'l4'XYFOBoG!dCRh<.BOgOLJ)6BW&kDLJcI^HM^'rt?lPp$$)slO5J:1:%D-LL
%)sSiM5PKN/.Zi#"S=M85N4-5?BHV0=g$o]ZiqLKL%sC*]bbuEn6XEg;]UTeE@P8*NjaOlaY$F6AnEo]P=&4iA0="e+>1HK=9UmHV
%@eEn\OEr&(-Hp-/g8+q(iS!!`9EEjcp1b4R@m:+G"VK"5,,4eBn"VG!G([P]H:5e2EBA8M%YqJc@njKA]NsITJ&_qrq.VL\f(ohA
%/q/)1&DF,e#/F5j3f,+c$]&'hZ&;Vn82k:gLo[Do=3]^V<C="fS@D(!M44K,Ni,NTk6/\e_:i,%^tlg1Sq,W=>ato=XE8E'%Dj7[
%,g*>L;j)k9:Spi!D@CM%:eL$B('hsVLh9kt'alt"eg(:<o-mUXD+s9'f[3q#hE&oj5p:lsG<S!j+ZSiBYLb.PFY@Ot;aBtq5["T5
%F^PZ%\cE:\:p:@[Jo-3Rm1@kX_M-"^Fg)2<#XM"!L`rI!Zqbh6B.Z]:XhR?hDQfXM\#TrLP'+T4)DsPYXg7nIW,X-3#g0Rr@`VD7
%"I"_\?-t;,nU<i8=,DN"K7IE!aE#:P,pFl132g!_=>4(ec'/^Df4n)&+Tq*;rEh9S#0^O%Td9Aa1K`R8l1Cn7F[1A4l&^PjRgCN$
%gdbq;B&fR3PDhBMiYP6]C2OT#B\j&S>eUNfYSqV!kKQk!j2f2^b%!G5[RlR_Z^PQf?*R_JVmTjKDblT#anZcC\_bFe')'I=O@lP[
%e)!IDs!g,B1m6*+qC5R'^.P;lDfof&=8=)2VEr9Z:gFm>cMn*=Q9d4Q"=!ss_]>B4YNA(['Q1!%nlRS,^`9a?&b)t1R!("IHKF<)
%ie[\9Rb]K>)1[%k08lNb0j);GebsXuEcAgp&87[p0(T*h'j$9$"RANkEoS"(^mMVI(<.)n_"#*A04$tjeJKb!&/HNRg+<E4B_5+s
%d3G(_<9^dDP@2bUW.?"\"P46ke0amI:<0?kl!?5u0cD/=-Yo(PFAKhj'!S<Ibd$(8^N8'K(eG'J6/PB@(.U,p*M#'7q.b>0oOC/R
%c<72nV<C:VDZ;OsPM2tgl2nQ%^GU$u]D9no>#\S@1kTik*SIKecn`THdKCUX5YsVg$*D_mCbL[<BVXZ/!-U#CY[iBeW.e&6&)Ge`
%N%^ctOmNU.=efO-5OEhRV@nZX#J`Bk_)NIS"%Rp6%tT`AjQ\Jac!LLmI/+)AT^],P'n(Kpl10gbCpbcp8K<?G?8_Za;=19&m0>+9
%YX#uql))fE"Er@7<j#mI#/hPFm]^aq"RA"9Xl4fg&D0C3U!aLSW9*I+[O^a0MPfC#AkpT$A#KL[g)\T')eDJ?&6Mk^&G[=U'ScT:
%NLs:@>qoljG;7M*A7ju&KeQ(1,^bC^i]7*)dOe*KhsUbUX$WN&mM44R#41nG3k[F8;BUhGqN6sD^32aOm]5tt.N6#59s8Md)-h3G
%;"1n$+h6`SMkLq3hG?21r=dZkK$IL15pgb7=NG3gj&aXZQMb?[Dg>Tuah_`Z@UQ+\@C9bnAuJb90,D@6G%[m[MVbMLV_T\l0oGF8
%c-(FB#K"%oXgrCsG++a1VV-n!,45OC%&rVQLXc91*1@n`3rn@WaU][0-p@/$$MK"\C@-<YL0;-D6=aa)Z_f4E2,jIT))D,'T/B9.
%$J!]Vd)%<.<SV?`=KjFrJ:5g+Q1im4@XN1?Xb?m.*#3[@Cr6@L<U'.tP5]:t_5ERCG>B8tq!V9kBFjfXmT*u4ENsuL]^qkFB6F#Y
%Z0(5]pWYYC9BNq\XZ,!1p[i+a]:U25D0>[iX'AQslm5*Pn&]V%qsL#Yb4iA'^?-MUD6C=Z>MYY2)K`<nZ$WA^6G;TnkKdN(DJe[T
%;6fiUBuS9Y+.a#9[9NS0*ElcpC#/Wqh=J@1EV5C'eO$%=gBBY3/lnR4p\JGs^]2UX?@V_[](+),(T/K^]5K]Bf%\fK4r96;q7#C2
%(#d`YCi*LE^ML#ro8OK'FfA_ShQEG92ajk?\!-d)GP:-hjjpp+n(5n@MdGqjqPYYfo'M!0;0IG*D*E=AN\prlmM<R/Ir3$NK-/rF
%Fm"dSZbPBN*9HTGfc]/KeNS*8Hs^3ZPUa]=jl1uCZE[P7dN5L"Y?&E?C_\&+.2RX9j/6g&gq24;<;]C:Wi_N2FtZtLMS/(US_F$\
%la<oLWc!7Lfu%'-j`A2@Hh?5$,4K8]j2H]Vh3]."^MFXRQ%t?a-[QeJ<o`e8RUrUDca6$:ZD4L+Xt*A5(%4Tc/Ps`=(g-5`\[l)t
%Y5'cnb2/?DghPcuXb-hqiPY*3<cMdDhRh49A)IA2Ds*=0n#9<'I9kNR>Q(q3T&0?2m65A>!D6/4a7jOV5+1l`f1dO@;tojFRH"_P
%[^mt>?gd<,C]<IKnsu&,*ULea0>:=7"9RE#Vg!?,qIAW$H':I0^+6m-nAWr+2qFGo6/;POIP7leI9KfS]k?M(GXLqkCi34e^\UR/
%)3#KegNSX])h;s96pp_^%ma?IEemPC:1_Ecf/k-rHU7CoDLOFW<sm")pD*.5mH'Clmm"JRR\t(13sSFIh\>dBmX]S*<;Wrnj3.9Z
%FQ;X.N_^KX5FU,`V%[G%XfK2im$GESmnSbJn)i?D=_$^/>WdA7!"GQLZ`M&Z/+1bJqU'Ojf\_,TZKs`S^1>_"C!DqDZ9YUaJ%bF>
%XoF$Io[L8HXc;Ath88]??@Ng&!TFHN#UeY\k>'[Z&ZhZ(+s*%"IB5&lX5>h-H#i`PQ:?8+q/*J)!KT?L?#a)of>78T&m(UYE&&:-
%4M0hNM,&kd8?*K<gP(h-$LuC'8pfT&H26f<^*%>8IoINGs16<AP,*oe5BMMJnq6Y2ie;Z&=^'M'QXbJuFmu(n_WIdr77Q*be^\mE
%aPD2B4MN:eXc:Jm_h.PYI5a+r#LD^S'91o*0'-,0SPdkq>Quj>cqWJDYIXePk,ICO],rXqNL)m6\EsgX)(_AB.]_>#hD"j!%a'hB
%l5O<\po(>Xh>W/La^Wa"YKC"Yj;F8!k4[\qm)^d(hl]k\hV,I4A+t>Rg2QB&\#mO;`V]PZ`ljXGJTbb8oh$f#aB>,BLM%D6U"ZOP
%TYHe.\8GCfri=T?UY]1>,e>*PU&'i;V<ooGUY#&(q1X7pi8NPdk@H<=J31G4RJPY8+i"$[6i;*l<\Z!++onfMs7C$+F74N1(?%)%
%+BY,I0K7$*qG+#1q;VLRfAU3d5KA52'"VCeSW*d9]RKj[E3(,CJ]R:$3sQ;O&&iIRhA6!spTjOhHrA;b$:k'l[F4;ZBc59FpVhKi
%F6=tJFtI1ehJRTTTO*e]d0,T1Sd$iLT"SA(C)rm/4I7]Bf++(pYA^!]c`Mu*ZFX:gU7@g)g/<+NooG>pg%F",gVr!Hb0I'=TsEMR
%?DJt4"tPsmR[%-Qa?ZA9jgLGFc,p(d\W5Q.9')9$WF^;@JGo(6F,K7l41Tt>mBPfR-]NmcWqX0rPl4ba;E1C+m"QG9Ie/"ek_9:4
%A(rH_?F*s6gO9/.pl'>$Lhs(tol5Pjk.U1H;n[oZK6:iZ@oL^<b1?MXe.&+i8Dl]lB&+"BeSh!Gja$i#8ZCK0G85'YN`h,?*'@JQ
%bo0thU>b#H%"uV,9bGd/2VOLGJT>1+q]%uiJaeQoYO"A($hHXDKL$S+q9AadW[=@Oq<h+`fZhsaVa2Tl"Va/(\j?r":\A#l[/c@X
%%_G<l2i(`<n[Df\3:[NR.h3pr*ThJP]@e.a^?s`D@`pNL'6,12Ll\&b$-9dmX4-R;%;\.;_'cl1X<uk_K>mO.L5rMFX)ljL],Bc'
%h*EY>q?p#GrQ=>Wh6;oRIYi=pQMn3K,*83(5RMRK_Nfs.R4T:EKV=g(I=Yc#R#1qMa#.<M+:)D.W5ZtBR080;"%PNiR"9C>E)HYR
%cm-%Mk/Xtb7Y2J4YAZ=n)Bjfq2\'QhP<<4e/o<dB:/afH2`ZE(]J0X'd3?;MI_Y9,.qfod-Nsi3FHXu1"cu%N%Ids\%q6u@$lX->
%YV^eQ#]h?2Z!DqWdDUf<?r+m/.6+86NqFLi=on9dC(":(mP='sVf23/"_XrT$Q?.V]<f9&kq.B;<VlH+1n#N-0=DUR.qIi(^&.Z4
%I,E]30n4^TF]^8g4M#TbWqN]ASpU*gfot4./QL1I9KH3AT]_Tr0lC@dIVdL[Fmt:HBe&NWSbt]g4t7>KSYr+'-2[1WN0:U=EOT3"
%Tpt^VMH9oCna2N.2tFYa[h"h79.R2Le`ZZ:T54p`ldkBN_0l"A$YHhm0:pt05N#:W9CVQ<o7Y.5ct3I:U>m<t\;H$$H[>)`O%Y8h
%g0uucgSc)5\GA:0,;^Z?E5+'t.iYDP(D[q*jfM;@if1[dp[/o%h6p2HQt*79no%DEhUpQ%b*2gFfrHX+r5)QkJ%"HBB`4R3`]=aF
%S$]mt`2J>/o?0)>$bp6GpGZm`*h%K$mIo@7ID+@Er"^2IJg!)6$43j5K#\`BL5amEj`/:n)4m=;*bPtq9B1,I6h@R).W7NEJkfrY
%%M#(H7.XE9l%JA7J+rbOn"je`"@dZY8ddmbT5?e$(P"c]X'HiV,j;6FnKMW%YSfIZ*<0X8OtVO`_7mC,\J0RZrd'c%?hnO:?#*iH
%jAg'`FB`Cs>.8*qA*qj)(S?SG@#00e@ZNcfGK9gE?(^#f^g:AoC[[l[K.gQ7C(FXaHd0<B4clehroo!Hqsq*'67f#EX=oO178%Ga
%I^\bUIAETbjqN#!$hQX`_JT%XX7on&=aebYguL,6R%$lY$dQc8>kCJ'oB=gK57V)$/p6AIn5Y6KpL@uSj5l'.YR3#N7/XHQ&YT*>
%d<>20H*d.=UMdcUj"L^cp&<[C-d-oqE1\4:3+H<g3t:!WV<rTCo:30>dG3qD&)A[X%Gd!.I8nhW$8u1'k]8rQ_('s5o(ZP%eEhZ`
%Q^idN2f;ibh&#MFK.SpQe41T!YCq1GrT`Su0cpASh04k'[$k3;'mI=eHXMre\\`@Vc'smrm<iKAo_/7TOScM6gE5%][E?ZG[qdu#
%0B<qG+%74keDa"E.*a1^h<.:N*^*?E_?97+%us-$ALI6ECb*&T`MTA@N%Ar08f"enUh0HdkIp(Ar\eL/UZbCQA770E5mMW.j<>"-
%#Yf3KFn>N0]\MM&iVEp>[nMc.,.HQ(c@%`!WZmZ;!opLh>'XqU`B#O$5&n>T]tN=h0c#0-o(\!L<n>i(^]Hc]JM?o-:^Vl\`kB0e
%o[iLDWL36`]=XJ(g*0#>>;]L5(&Q:WntQ^#4]-pHX0)ai5jj)G=#`<Kq-<c.[cpg8puB!=)AD'\k]"gHpk)?QGCZa>3heCmE%@d-
%lUO`)=Qi,3dregJ3-sMJ+0</M1:M-cHkaS:\>FRt=tQ)R7iH@4f!4tDqg*DFm.ooAf)!"dGD0Pqr,KRLErJT`@$lO#2j_!73N!B'
%8GsQ\*0a3Z+$L_OGOo7FJ[)Kg%=R(po!Uc!STukq*\2,G4_R>4O3,V(is5=>asZp)I"dD.(rO&$k^3-CC2Rhceb;_bGB#PqA`hfh
%ZcE7!]PKP$j(P1jm.S$Z'qaAf'#&$rK$t]7pMR'NBb"QX+.X4ocd,Ap>49`;1S?uj%*sn=W]Q]p#p@7]a)<1f*4NY*LNYeq&p]D/
%/-EdO#2iatlfuLdO-#"(YSlRLgdG;Ee8XqoQ;6$q[RW"WfU0Ied*:^1C`X;af1Rd+2Vb`K3HDPVY!1Rnq"!PI>0F=.kJ::*<]Trd
%[;"Ln['=I`a,tMg-do0.)!EGtbFR6Nl+G6,^A:>)Ku:6Z]QAoGcSdg'mqDaBHtL+M0"rgL<FW;)&+"].&pV=)$PHWm##&f\+=V:'
%=rfn/D/1qOVsS?i?bSsSlNegMr:;pd(P&.F7)Od74Ya@3<Cf5@S<dOs=>t/j?#FLCD0mDN2XJl4b3;E)]W-8G0!(o-I*:fsn$WT?
%H[>M5UWZFX60sMhpF)`#2i[7JP8><NPP12]=XY:,/EcLBo[EO._TR/khEW$q0D@Zhm-hKErMRZc\8im4`qEcFTl8kTW4$LZS"MSK
%eh=q?HCil;qso.E`6%gf?ra=[@G[a2^saA7=Dm;G[XL?>":8K=*C&m,m*k[=Yj?>b>+N?<H[Daa=;.Ria\-JBhYFOlal/tb!SR^'
%-.bqa4udl:fj+K[M&VW'`TMSbn)]J6bNDYblfoVMW3;P'KnE/s58T@Va*hj@RBP^MV=IT*leeb0d?N@=U\`PF@Ga)SMgP7qTVe#N
%FCJF<cm%@r>fAS39!T2deH_G'g@%2[g3dpd$qoNHD;N%>[cDi9i?+e[rJ$>.5_7uon%m;?YgIA!)7OOUQOASN-RT(-BB,5"foeNC
%UVl58n&4%0FFU7k(8LfC]RTBL.i/S#cHF1>)lBhf6ds,8m4Q]2T0R/Z_DGHe\b!N+nGT;'&>[E+U7RU=Daph8LB[#-_$f_5:]fD2
%lpU>u@rKW)G?HVkJ(Z7jgop'k?YU\N%<o.f>WC/-[KkLl)gK^[*8N-Z-o@P\r__N'=5pg8N>c-2',Q"IqkJ!2[d?q;p[%:YqJCH*
%Hhlc*.keA<.g+MS.5W_TJ"N2YI)kjgQlN=,\`W0sjOHD=%#^jLo6,<6ha^J;mKK(emhT4o?@.U"*V[p(;N0b\RMTIt#Zo)[hNhL)
%3e-^L^ssOXj)<59YOWpS_WKp+XjIq(@)T](LQZfOr*I4b.1['re=C897/DX\;nqLtXP!iOL>T(m:bXn3#Kq<gM1*;cRcVuS>8t0l
%Asp^iGdQiAhpq^n3KFT.+-1@GoZ_gQ`VtTJ$4aHkJHC=L!Dr.bVPPSGeb++Uq-EIGL1$YboQj@,.Kc_I&=jr1BurKY'gIh4M0tOn
%ZLea*?Kf4-2/pn>VZL'(l*Y!f]:4S@^AH0`Se[lM"'WAW8V)MTPs*WbT*r^.mcV8"/,/H=1,--j?[bhO$.8RKl;\eKC4bW86*RP@
%]'hOX*`U<1#9@FB-4D;6jjK=P8l;AgLO/I;3r\i#XmG]g-,/X9ildC`fbf#&/pbOlBF=ep.[3aPX-Jmh>8s2AP[GEUqrRLfiS>c?
%529Ho5CO%smGY(7gXoV(1>)jKOIOVbLGrG)lgP34Q+C2/?E^$>Y-.c&5kU2)+:-<IKu:LlDFD`tX7=.np3*I>Hes\BjYGR]J%bXn
%%4L$cjR(.^=<sXtoXoS"qiWIJ4Ud@m<3NbQNtAO$m]@Kl=F%3;]<DZuc.24KO7r*VckV7YhRW0L<bPe*5E;:sLa,5('oJnkVK(^!
%>-CsWa/"*6;)Wog$O9o'ot>7XQ#o;co7u<FHBk4Skrl2O<NJos'U1eQm?F@'++YD_c#SKrmdc\!o0E`En"TE\*H'VhF,jFaAgHQ)
%RtX#4i?,Us)k/i?k7UL@T\?E@9!$$X.*t\_?/Q.O;0f9C?2).BftZ05I!^7%-lnH=%BU66l&S?$6C<tXlos4[/ZjJAmm(0d5uEXr
%O@o0!>j[$D6-[G'][QVkU&4fce*#I-:>4Tg2W5eO@s,X8LtR3,-5`"ZF:*#op6g-unC[md`Xc,jf'DF(H$RHf1uB9Pf9iXE;O5-2
%Isnil]sr,1%g09UoBhUF!Y[Ib]@K$NN5k7(j8JP$O697+XS$.Y66.;gf]qeKpAdS4`o-[_G!Fm`>'Tl5OWCb.7KFQr.fI!C7bR[b
%[:;^2IBcX5=adoRkV-c8\C?,<TDL=XDG`dY_#5oNKGE:J7l<Pt:#"GU[!m,K7[O3&:narQ+M,1Gf3e;kpL<,/,3Z:jGRh0ZkCWeJ
%K5D4C8.6&f^"7W*99muV.Rq"AnZp0j#<;T.hO4:]1D-8T@Vot0c1TJl2utm6I/rOnk8.<UTH'"FM@OCEKae_\Y1;;f<kL*K?W:W$
%o%$'JTF*.!2?Dd'+-)dEY2ooC]BqT$.Y$W4o@>a*eBZ>!gkUr*kt]N0]4b6mNOnSK^[&[[TAunu="2_gI!SmuH!L1(anKjN$9T8O
%MN8Kk7N*Q.::Drk\YNp=pG>WM9P4-HFGWc`AF3c*i_e0#RmO[`l*I7%T/Dhq+R5>HBY]Z8c^9neH&9sE^##Y3/Zk$9"Vq0TK*aCE
%SO$cJU1joc^i.E/<eBb\dfJ(4Md]S-otW)MY\QJm$A)mYJE:WXcNgRumE,N8QoU&s_^eFa9&RB0J6:3;ZeJ2h_=0TKURKnP2-Z?(
%:9+tOXhU@l-Hb;sgaa:N[fb1!_o]e&g'Q]TjCuiC/^k^GDL<GgW_j12C3!=d#QB"QP;kT\@DM<,KQ;Uo&N\,\:GLcO5>kGD>^:cJ
%8`dm!X0GBcJLfU]Vf-@ehf2u+!is/%C&P7>L<ILl=CJ^5F<b*E$rH+o.VqiDK<%dL3>==uZPA9RB`/iXmdMG>KiaRBgXNtQ03&B1
%=_nCK-EE(ZQ6l'Pag"g<?;*O0Pn3L*;BQKHb(N%teCPp?42:std=m>5a3s`!PK1-^1")M\MDScVBU0u=L9>LTn-Pd,C0]696XW2*
%l82-RRLLtk2>/&&Eee/QeTc7>H\i%=-e,AR.[n-t3hKeIA:ml2:)@PJ_Zq%O:0=`?8HR<4(c`1m#"JB$Hr<lPb1&CNFjAN7]?qmW
%;\_/9$_m]XSYd4-@H+P.RPr#1e4'/e%/F=N6:H>9kEI=h.]sR8-=Tnho]d+@Bf+5iL9;$5OuP9_7cB&Ia:#SE:9?\<>ZrOWN]XYg
%*ZhUY!IGZRVZ9_"Z[TML8S/Ur;9oJOVGg2@0TVtr3hqbu,rEj]qG4l32QG-6ndaN':cN;tH)>W1ANNtNG?4*5\5=l<dUNN9E)M]d
%h+p"fhY[g!5:7FT'"A6A&3=NqY[g^8_rCuVDsfdn"%]r:mHRP'isFTG<1D+A'CJJ]\3**2?<r!Q0WafA)\A^(`<5^5j%m<H5_,mD
%#GbGFD(f\Lk^pMTQ&>)T?D5s#2G.F]Uo^t``:ePonO:34g@T1Ra:OnM%KW7:(\<VJF?_17hMKj2>`3fLWaLA/c>(`m469(=q5Aes
%%=7,:ZZh4!EK)#p9`5[KM*p_g/"gS]f@3e8C"eGd5WEVoanLIbW-IteF(oo`?RRg[-nnd_h0"XU3l['sZ'9tGpXM;L=o#(-M1Yn+
%GNn/+KfPH2';`re8T6Ph#%YO]Yst>.NP%'Y0W,=c-Fc-e[lTk--_jJaXNW[F4_+m:-qOM#[#`:!Mem)X#.!<cUSAdgiW93#(VXN@
%W!Nk,H>'o(:GS!5H8sjnMS[Y)U!dYGqRp27B9:8e*YeoN.[OoZ2R^4UUh,'aA1L,XQ8$6dgEEa1KpI`ghVpWf"RBFuC(+4<?9\d9
%!5a)#L1=&s/&hd"DRG/$a25a(IgWC3,5SS]Q7;b1B)!<PJn@%<^FU7)\9n)8+3Ofb8D7oY0FS.DlE(2-G!'JE$=R)e9g/U92pmV@
%35uVZR2N\<mJYplrm;8VkO/ucVK_60D5q.a3kh=_F\ENW*sdq)+k*IqPJ=<sr]io[o"&:$3QK:3MQTO1A=93m\qC6eWLH^nk>bLa
%d\pd70f=_Y1rhGK,1[,0%6^mCRP!pt63@4.L71&CLDO->9`YJ2$S@!TTpq>W-!DA0@8_sEW$[enNhrs4#)3MFSKXhOfp(Gk+IOPi
%`PC5+FF(]r$j4L._jSm_dR](3X,\Cc/1%J:-6XFq.>jNp<9S[q$>!3qYgC1Pb#qX;dK_6VF`7?o-(:^i:pJ4K?TdU]G=8?Fpc.5X
%5QGL'%m%(J"-j>?Q8P+H-[ZH^huf]/9IW/^+<.<(dLAZA<Ddlg!?bA\ShCqhWTRj3J0?s=.7L'VRTa$_Z$f-abI6A#VCE9>:si85
%R]Y;FQ3n:09Hn7f%"BdG.6p0MdN+ka`sZE9T2\D0W'E4+Y!>A$M/(uXBRktom5QSS6Y.RJ,':rSTKm":gX%>GmDq7.X9)$B@aD#n
%,#$`1(l5Qs8:(:Gk>0Vb!5qqb>*_Sb&eHj@2Lh#&_\r<1P=Lin/5A3mY_GuOBKG)1W)B1K;j/HgKI=$dBFKQmO(bfDf8*lrWm"f<
%W1#%r(n`oa)PJ2Md&7/ZTHTQYW,)\QZcF&B#+TVcC<RVr@[SrhE,7(7ZU'>^[YD;,M!kP'<W(D/:G(6HD[H8T#\=E1OS\WHW9H@0
%FS7sCXW2s?BW0&L&=<$m3=PsSli_/d9U[fV6?%!rae1"4P#Y.b7C9?7:!$V>WN[Sq[$ZZ08duHEKN9B6.^i((fVi,"=YI)B+O_:V
%2Fn-*!KuL#."Z.ML2Kq@`L#lZJ>XXNW%[#<AZ67Z'Ms[CMMt1=nUT038lQh8AE[bT8(T*=_t@L^I*OQ6S#Im2Rj_6DC6KsL-%/$,
%2/cYH6\.*lQ?!95;O$^'W``T.fJ$'Q$!YU&;:mp3iij'5`(?0aL4]jK/#oTa9orh!Cb?F;5FMsQiH&G4$&9E'T++5OL.E$#W:8ot
%AgFFEE<.:Ng=&rp[A/8WTeY<=ju,[!2bh7&obq9_[#m:XK<5d+CaNd\9@f<'1aaWPS`*W&i_cL<S(>&YRjPk2<``;UVY@ag.T@N3
%E_uB1/b)!Hb(p;",Ak.U/N[lQZH[K%=D3=NdM8<PU2$Y]9=>=0"S0G]".S71Y^t%uWIiZNcV0_BS;h]SL6E#9+-\:?TT,W/@L8t[
%i'CBu.YJ$E3&PTr1@mCrK=F,RN/OoH3%@Q+Om:l','3h-E@bf@_$X%Y["Z)]dnhm\Io?%aGYbJHW.<9CF:n:V87`ZGAuur21CSHZ
%9&/&:S$hW&kf'6leel:N@sANal_jiWe:J`94"O)_3^uN<[]\o:DD59A0peoXEb-HK$JB4aJa4%DeeD"b%a*ab:o7p)2AE%T?mZnH
%Q%9%6TPd\Nh..fS<YKs5QD/Hd9JmeADLQdtQdZPW@*.[<'$s%4Q>$Co)p2!eK46_IP"d8?ijs#()6g%_RANf2]-^A3<cq`,),E)"
%C`<dCi-pHV!V4:*1(@q<(Vo#e5QF0&l'Mm)7:uBi;3:W(9rMVb-BmOnkR<[bU9cpQ55qQJLZlTAB'9lX_@f;DnqNi@gfe)2+Jpi/
%,>j8=Z#o!YJbFQ3R)<&_9Km<j*R1BgnhFid15BqM;5)66.SV7"?1%pEE3olgSJ4dt87Np!)V&A7!;mfp:'K:ui35OXmai-d2<Pgh
%3EqEGA?-+C$Q=X(!FQ(!;Si#X>@JI*#G7X)k!HrB>ST]%$)G,,.4,^F=GZsF,(jD[\=KU4i7<PV$Dm6FrJ%/+Bi+s^\khurXk'\=
%s6//rMJ]2Uk3*d&.\[;M;(S3n)m@>k8T0b>!si$@lp.!oQoG7B<(4'"e8\GSj\Z=hUo&bkWs&SqGI/M/6H_np>.`_YK<&C7Sr^_q
%'stu'/-JVpE+hOi)E21`A/,j/U25pL@\N?\>9-]h:m3"RQ-F^ebn4):P(aBbK?Bnr?jCB/=QO?Qs"3B3?l;XaZHRk0EBIV0!;3<"
%49cG>3=CV`b!9osI](;?EB0$p'r"l(PZb3pd@.Jir`%BDZmD[e#!cuBbY2P?;mBl%-f&f^s&hhMWE@66oV95Rd`d57D0)0V\jEjG
%EQU$M&5a=*c#toj7:gG$2&n$iO/"CA*6^BF7>ZQK'g2UD#8A(+H)n02===Ge7mX$nN?6p,8Ep:pNf@FSp?7$p=9eAW$P,lMBS1tp
%!Odu]L1MdR`A0:(LlNTB5o*@(#M"XSN&;K,0?41Na.*UML;tWqL`iWnP[jtrcN#>NjGpA\\jM&k6k]dc^rXt6E]>(ElF7$t!9*Pr
%ItTP.j)A=c$>K4MLlZLFEZh&9=,'.i1uiDR:,Ft'U6#rEI`P@3]0d>EDO6>"T3*Y)&6%kK`[DP@UVmp;N)M,?7QP8u<89kp@(FWP
%M8USi?iZZeENit-$pp+Z@u=HFAUrW%OWJt,@S#)jPT.`dLp1WQU1etBo(Cu;WK1k7UfeT21=qLc,f@0cLs\Z3!#\<7ROT<uE&*#1
%l"Vb]VjhA^TFlhX/r_-Mjo@h$(4HAWK&?j&gRYM!J6E<pQo\*j/ADlaN\:6Qi8Ug6%fG1;OQ`q8NeJA`<X3[2W8ga7K=k/WMQZ1Z
%=G>g(J6n@\&dZ(.L,i->Um92L=pHL1YrAb!lR%a+YW50)*V9P*V(<)<e07OgGHbqL)K[NoUo+5=[P:TdK!$epRA=W6Rkdq(i4dS?
%)/P=WU8)F6&0r)UAD\42BL[W.:DM\4:]pVi=a-gg<ga0BdJ2h'7'Rbq]L2)VDGUG_g&qk"1Jn-H!Wa.qBW=b!'T#)g#aCE^Kh)6/
%eL`WJ5`KJi`.uJ.Fp5o-a:<fekrg*DJp(u>,EdY"=E)7[aUQs_.&'g;>Q]P"VH_GseQ"ekM<<rjQOBd<H'FX.mh/o1TL<l'ItK(K
%Uq;J<SREo0DM%"/XT[=n;DqK$\qc`DF1P^[L)<Hadin6R+dN=p`^\Pm8RiYs@oL`d-9C<:HEbVoKb\>N(iMjjlnJ<KW'*U'")8\h
%PLt`pU:W]c3Z-\j->a1`mo&A>))N\SmTI!nU,OdW:,:('(@k:K]Gh2$kp2[)OkP3#!G&r:1C-+\"8`Fn8Eb3N9QL;sJCgud!!A7V
%2*]S1n&5F<,k^3Unmm3R#*(<[_-n2p-pHXF)4&t"?8p6tP>/IhUi9'KCeg3=L5ct!:),=J$$gXR/9ELq`YuiJR![!Xf'i[FbMdMS
%asu.2+l0XiU:iSMkF9SU:l*oVX]6AWb/p?($=(HD\IImr!<mR4QkL's@DpT)\lPc2J3Cd%D7IP6:P=VN&pS)(SR>kkEh;`W`Ro^W
%`@ZkT$rj:F'Ra4&/58ddSH0.%K6)YffX0_^,qq`4@jstXdAO;UOHIAd0U^0AguA7)#SPEpdNV-c,GiU"MTQV@C+'0(.AIj!SC?F4
%B8g:a%_ggG.PMF;!AlY;"!!tk9\jmE#"hi#VB=H>iJ&1qr+&G^.W`+.--ui-b1'8],"(&A78]araW(pQat[^qa:<q9.."dE%;5`r
%.Np:ZDH,F%.tb6D0V'St8OHiZ[4l:tFFh8<8f/\V.FA.fRpeC+/!"V+@Ng!m]PnGPh-\u[:-*DDs(oSmW*r1+F)Rd>^d)PV`)*k`
%-8nS$9pTKE,ps\4WnMh]QrP=EW[oF-40%c676=!.9qqO)W:&uH:p5pHWBR?,@>B3oA7X"g4JM:4ESPo8OgtEgD:_:s.L%'srF$HA
%F%s,G0[MQq,L"q?%)_4F<&feLMlSBqBYtN,Y@7tLqGjnT8Bbl?NC-3ueM-/4=h$Q%ciCOW@m2*US?YI?W)*0qge6@j<"4VBN#])0
%>@*bQ)r';-iPlc&I9IE*9JMAO=e_WhWeA!X]MN6<:UYX*dt`ORQtE3>LM9^qaWXEhaai&.2JjR@Te$4J=TfVrX&oYNKsaG873lnq
%K5K,$nVfG)Z3g2<6>Ltd'r7VHL5(Og8:Q9#i,-\-13K;/Z@P,qc700T18aE#1h9?94Q%Ou-">Pl(^4u\a]b(aQK//c^O&TNo\#Cm
%c`l9aa80UTg1SUUiAWk<#5b)L703I60P1$=56,68X<I_6WhaEkM"`<\0$E/m@.5*^4\U.>J)0]\s2aGMBZ%\-*DAtrPT+WN%1*0J
%C+D4(<Y/sV<H@We"7tYO;BUfn=:sH;L>>+#QmiGGJB)(I(i'@gGCb'#O=-JcM\%0Cf\YnlIPD3Cr>O`L$kU&'01J9E*&+8%@@UbJ
%7?a)F75gNJ<"XI4-ur*fBJ_G2<E0H:.uYRc(,j#n(#;33#!FQFN(-jtN0))"2`0gK`0`FTBk\f-!gfS#"&)Jda\>K8&g3Xc(5R[,
%8XJN?^tcM@*7@_rgEnXnR>.T%D#c^r.Oif&p(VZ)^VL-g'Jqs<*Gskl%LQ#DKbV8O0ppN'$Z20nI7gBSW#MluMR0(Jd;4iCJi62S
%/R@(F`Y8g2-IH3_R.,]A(qQ7ddF`UD:X.gO19*i7MAid&J2cm*K1%u.E7qN_&Q(,<E?#nt_Z\S"r8o9@64PS.fs&hH_d.aK(YKjZ
%kc#"TN3Ysh5BiJ;"S'Vm.9)6Q;EbLB7$2<N%a0qgFA.pV9>l[C$5L!r7=s)WQ"f4.WiFEF=9`VSTo9,Ba$hZ=+1#W6R1u3KDEAO\
%^mS/2R@4kWn0oXT"YcF$0X*p4Z?r=/GREIt(b#_bQJ;lQ]g4(3%O#\n9gU*-/1@[r@);(3f.Iod+T:M+\k&q(RLWtj16W*s*N_+o
%)(&KicjRu6),hRr'd%B@;@^4@-tNbh(X$_P6<b?sGF/IP'q0F%.-HIoUP&^0CaCXNSRe"f$<>[%JO1C+UR\R"b`)[(%W1pUcEHql
%`\3.qS/t8'Rr1MJgprOl)^1:&kcJgn&aI#"d4?fF#,Q&X2+$J6YeaJ]M?\aN9m8//&W.AKkHJc4JLnl&VD:uhBiQ8*App[a+tfm+
%C3INJL8JGh(?8FBAqeF<?&ZcC/h31.PPe.+Xb;oYg1"q*S(P$_,.kHrR2dRpggD)u9\?$C5m7Wt95N(PR@ml!kC'9dhT:iih"VV^
%*:s!Vd/T]O;gt&%bAgU>k=3LG+E2<:m<Sei_'VOd&#9ShEt2N8Xfu@2W!j>]^mN!E[-7hTr$!YYC`cMF_a(uSE5MJ9dP-EEA3E)Q
%m:bst=FhelLaT@@]WY.Na?3Ruac7gT/Tm%iEgkVpq.`$i#tSuief8)]E(:Yh*@VKQ3^=-lOg>pjfNMN7/jpp[@u7XY3K#mZk^\h%
%W$5I!W;gEl<9^E;7KaFJR\OgLR*pI9A13X6-rUpT@OF-U&287JZH1cCG7rMo@9AC`!qln;*b2mn$ohSD=_=jh0cm,!=EMdB8Wkp;
%jul1;doKUt1(C;#d!u:tck&'mO]u7.bn^[f$KtDJ=qBk7(`YCP9h6NTR6@cF6)qkQo:n%1f!OTINX9S+&Z$M=)''&d*R*b+A<r[]
%KDQ`n:[%(JGT$mppQ8$@MocVd@'(^6FJ=BAH&dmK>YqAo7KXQ,b;KV9p2"69VT.lDP.T,?,1;2M)f:3<;id(7nXDb@Q[1h8p#F(\
%@/QC^Rn,rf<K(Qsj-4He_on(-LlNs=<^S&ISV.=X<J4N;#Y:kFiZ^M5B83H;.Pt8)D;:K\VQ`>uRBTU[AfI.pFEH8G&m6&9C0T5S
%L=)Nr\'u5Ric21+n2/No8;,gg]U>`E_eti^bY3C*G&q10/rYEs=G!fB7+a(Bg`9T9L>@r3\h8`nn/N%ZBVM^MSqAdm4W/EakfA`#
%A:s\WN+<5%03(`$h12iIZIFT4)`!@%lXJc]M[YB3%?)NM9H/]"6Pt+o=Na[-Yr=.t/M[#iVj(`[0sTp]FcFe:7/.4HW&nIm%2Ob/
%-;1Qfh+3:XJ1/4\[Ldn/\?:h/DjW2]L6rEj`#OHf$m'hlN)U@Yi+'&0%mS`88^iJZT&$t=pa0&'_)DgUD`2o:H6W,rKu#]O$:EWY
%n-qC.GYAj)DqGj1h^lp=*`^VK\[@Yg,mN8DfGg8c6T%HCU-X_%[$E#XhU&3sfUFn4Sqa-\Ll!r7&UMos0_?]QTFa17bIF)7e^^q6
%_5`A^V]DJ:WIre!GCsgo:<.esYr>c@NoGl"2a!Yo3+=]QLFXn6qVs:dAuJTM5)cP)o$M/u+=qO]$T]/SK3>Vt23,C2R(o@&rLnsC
%'e:/MUQ^nI(k"b*gG,NJ"E/)FN?+;E3S74$/Llb?C(<:gQ6DP"o+71TW7o5S)orBrKlA#[6cj"Ual&Z+nf-WI)]lNo1KFdqKdDT6
%>7;9:eaWKiUPlstGQrjWbZs8W4r/Kd*-O@sNkHSJ1sGSf"Q)b`TPG32hZR[';YBe)hs_b=/t9uX)]iFNeUdK7nhu6S&tq3Eq^b4,
%\=KJd9^=,+k-+qCanT)mq:s$J@%`NtC5M_T0_d@$#">gE$R&,'Fm6+T)7uX^]P[2J!CF%XLCUg3a\WprN\_5r$Y`T_e`OU[J,;0V
%%Ht]FZBG\TTVjHD@^#l*^fE/L?j#tdBb(=ca?2E#d"6nd+tHN"`tb@9e=i1;g-W/tjTOgW]E*r+l>r*h#?8*kVMYrj/2@q]KO>r.
%/;cT@0]kWP&[V8mE!"*Zh2kXA"N(On].8n9J.b^q6\mdRkO07nk^8/m*>ruBPRS[lN5?&a9JnppD(u3kjpb6`O?pjT+.Qm"JO3Qh
%Do8d\fjH:S(L[>B*X49P*ZPk0==4G=i*'N8;dnkj(P63F+qHT#'S[HM5lRuE22OHk/r@XO*rFAc*c6F^/X]bON5uJjHd2QPM=>NK
%!TsfB"sZYU`u[_4MC:q670.Ubfm!iFECCh4ib1AK(SXPu=MDEsU]7Oe_mrkNrjg$@A0/F\FPA"CQmgb'U6),"<(Kps-+ZDLq+u[g
%$^ST>APkZjj-^X>MS:aEBUd)uG]6O?#8^Np"<D'lXCp<::jHja$8jRj/VBT)`Y&AL*af<:'slBF)U!sln[oCkK[f!A.s16s/h]V6
%*=GSqSHd)#>I3#Q!P4YL8fX+I)&>X[J]2c$D4VV+?c7i+V5u+j2hlpm'gM;?AiBXJJJ("o@>$p=/AupU6rW&@VS[q9:/o*UK'5lT
%'h:!qn*j>:crF)n-j$p[.nWg(EUbpujs8)!qlQXKG4:A1YWlQd5UWc<Fc8,=2iFS'1lSj&!Hn="#Md]D7F"e.jsdgI'HZHq6['=4
%>9/d/;p%'HD,Bk8Yd1F,3lD]'VBM/:B1*636J7n$A6AP]b1O%sk\S[)$^cs$M$AcM'5N3/BVAHD=d'>2><E?DoIj3@c'1sIUCAm]
%?,[t1i$mp'.L:#o+kIDVDJ<U,AJ,`Y!_-%bMQX6K<HWDUGUA0jqbRQc<D5nkWiIR"@u8X<&jG\""2`!p%Ifr:g(0D(-ZD5/UC6M`
%I-C)BX=Pq>$Tm)`^KM#6^#QG"Vnp**0=IXfbtmi735FOPpTkp2_ugpbmM&9ba47'd40*3@1;kR^-1?VTq9AjSN(E2<(m,6epMKCe
%?3Wk_/.tLN_+u`M)#1lZ?oTc2EHeh-jf>/\4TK*E-orBQ7j&ba<eYGqY[%=EMk]G%!g!B-hV7\TOs=+=qZ6OXjAK1""2@'d?(m7N
%$V8WXKN[rE("6&6r(7E,AcVdVnJj?rPO=B2R1]EBoAsN-<+hGl?d_I`8Md-p0clk7HuK/M.$4\8n\kEqqQ-S:,1HBc)DmGV.@-AG
%9@su.QHA?9KK$LS'(NkEq1ub4\>K#<SJhH.JSOmo*r=:`K"Kq3UdFj;Mk23Tr#PMj8\SJ#doF.]+5`j9AIg8O]&U4HM6<ZQ]'""4
%^(p#/4Z,;+?$!dM0gq)=*]H8R"fMs\Q&gk*Mjrb:o0HhXcuJB8<!4W2\G#G@T<()MpNn"3So9'_r1q>GLRXn]5c5T'5=q`1m,:2s
%<g0N[jUZM?1O%XR+>rT9I/S-1\76!P!$nH6*ZBPO5f>X_!5"Kn'KQ6U!'1,R05_Y8W/8Uk5mb=`("YA@T`nsF8Zaj`pic1C49ZqJ
%#XCF1;NS.<C&r>+!p[@4d/pP0c4<MIo3SC"eG'O&MW9:q!d&6X"):m>r&_Y.2#t`Q`qhg_!@=]d:r7Roc*%()%+20'"CbF9f)8J]
%Yju!X-jF8@mnU5<""*99OUq5R2XmWp#'f]NorRNF!2sbGm@XtDp;s-n-j1Yi4sl6h<;tEJ!e(nu6?\n",iT>/8cd94>iMCknE>h1
%%Vc#?7&TL)]3`:RVQ)7!M?,s6.K?[jm2o7a#a/[dpkIcR`,d;82qD[9H]DNY67kZ>430:IjeZVf/Y9L7Ut17rpb"GG.>79uXtM>-
%'K@un:MAA5FY't/eUqe&qCD;SQBVhbCWRuc`:_"$Gb6j31*hk.YqXq7IY_Ko+(i>^""TD`BbI3jR0CC..K!\J`2G;6X"j;j;ZH""
%B_BP:%3TfdeA?>s![F+!@+^,&Api!j@YPde2?fG_*]$\R.f9jKoIXN0a=^UK$^@0i%tmZF>fQ28^e1JL_7EnL#[P6ZG:):;,h/u2
%)O&-sdM,*<U&cJA?EV3h(&inC)b1^.)YjYsp_r"QD2nsBG6@2.'i.;oUafc=:^7?aX9HHt3K#9N]_Lke0us>b!^N5]M%miZ`QQ+k
%GGa2W2SIRZ0j4)&?1`0F[^4G0\FOq*'[7ItrA;lUY4=b05A_<*#Xs(dB^+NS;,=t#;a,urV[*i1h'Gu*f0>5`P0"5Ul?t_2%!Y-e
%NkG@*'(?>/'PdC"Ie=DurkM?n^=<*"21RZo0)8;D!?VlbT2HJMGMi?k>lZR0]_EKjXRY;5.Zki@.@Eu`_b2!kn*n?tpIa12:+D%+
%oqr]k2@@Gt7=;'UHAS9%F5,s4kiM/?i2WB.Z:m7PI$HLq=?TTPH'S'@B9,f^o^oG&G+7K_!AI$IO";!G/r"Po,l&V1E:cugO\:Ao
%''+Z88^I'[*HE1\c.@HO=ef[mjKgLRX)uc3&l-k%62_6F'0DHBpiuV48I_E6<]`E[n:5I\Z,h,=Nkl)<Lg?f#W"KeG$_+4c*W\^d
%s$:X-Sjf0MG^?S\AaH0Z!#.)1=*VS>MYj9@<(K$Olt1;gHp=R<!3G()8ZO-V\QOSP,/X6&n*=^(*YTs,:I-c"XYGZWA#6.FfM\+1
%[b_l@08j"N:aQ3FB1s`S:-C=n*A6n4;4na="gV!pa<2Z?dik)-+9=/<&T1!*Fb6<*AUY8>00qRo70aI17UI.^=qE-5`[&jL-)PM$
%"<hrBX<>CuLeF,V2Chg!#_iGr'u;6pA_2$-O0'/`?$*n*IS<muMG?VH.(0uYc.hOf;+&,@rKMVV_^;Z[?mM17drkn>*2b)\JI>-n
%:oi3<.0q@'7b_>ZIJf`>+o"YubS@*@+B5h4P(OJZ;M&06eeZ%lOK(:.$=f+KSuS`+VP'SD+XI-Ng!VFF>-a5,7*ONmH0/XaL!Q,4
%o\CCEL*&-Q-$5/eDnI]8ii]t)R<Q_."5mlr-b80k(r8Fs^h.ig/Oh?6Ot7eMYS7gl:&HRbm4hF&Lf$HYJ6p-H^l:S]dfgt79/>In
%,2Z.gXKh6`P(5ntD8qcFRnJLeOlQtG%8'$_Efnoi0`<=s"L44@CB(0eR>(.&72SU@k#mZ:canIl<i?R?:$7fg`1[HE1.LDXg(\)6
%$]7I_k#%P8>UOe"'ri6P-Rt'I&=LZK$Jj?oKUN*^5sXEc!D,Z`^^1ebho]9@Rg#g7)i:EtJ`MoGK4ZE!%R3tSFo5s5HjBTQ2\uCK
%aU09#[.BW[@Rc)ZQP4An`<0d/A1P>Q!r,3Pj+ICbY>h5jA)n%S"!ps*)+kgOd!d:?0Q46ZT$YfDFUae8ne\6^dmssFS5(D9mT1Aq
%qP<RhPtC)b_*\:QOHQ2M-"bB((I%ZD[ermt2^"R$80>BOG(W3&O?FtN>mC02h)c]G]Un.N-oHrD_Fg(C=UgCaCF$d/?9BU"5iFA`
%IjR0aU'u%*6"2_keXm!CRs-k.>S?4=SHfh-'K&<"lN+\N%Qop<H>s4iOh2hgcK)%]@se`%LRH"h4QLs-4,V'3>YFSK1%uX4"UAjB
%]Q"8"b$c>QC;rZ[#TaZ,Mh]11S8ghS=!K3UJJAPH+1\'0R6?J^>AVTQJ<0p'dT!5ES5Q\X$[TWc*OJ4iLFC*(OOOuk2R+r?kkTed
%jsC%SQlD*bBK;lKanAQ_[$S3AoU#`t?Sji%l>h.V3!5#9+X@fhN,_^I!3Nqk4BT.::gaD1&P*=dQ_W+=V53<CPh9k<Q85?C!X;?O
%'+'\[Kc!G+Xc-(U6UG[kc?iB?7"fK!9G&-:&BGM"@EjKCkDOMmhi<g`&"-h]cfLaEHu;^h<#pQKkSR7Cj"sD]7;f&[G>:)\]L3RM
%T)%fi0oOFAFA>#+g&elWJf:?&Qm/Ma+<&pM7Y$5KrFa%`4Ajh$S@5TI*ig@ShA\@b&9mX8a.=Uk91j8GKs1X^KCXEKh7)>2<N#`S
%"ZR:`rLBj>@%=(V,%[\D>W9gi4Egj85G%''>8bb./8@f?"&m7r=5Z2,f3(5\p"O3[GJREQf.80C9BLb]dLB.lE`$O,q52)Ui8P_h
%5,qar4cY<h]q(,i><!VkQ75_ll#+HN17moYKo]A[jF1\c?V'b<Yp*0^4X`4^UhN%T5oa)[q:c.7ZKjP9J&H3<O9p(#S:tT!@TOWJ
%Nqm)9Pm'+mRAucqbEHF?9(TK-GC-6jgP;"Q8-Tf70upWND2r:K)PGGqgGFdG)be$>;\j6'+L@&_!S-I:EQ\WF!^/b:SSr?W/FtSN
%%T_ee57%'A,gfafAVRrNU;Oa'&"utfo5-^]i4;RuQDc9ujJg%>B':l-Sjn%$5_J=89L]tkW)4EPWD/&-C/&d*Lo-C_2[%?,0uHpO
%/Rpe\aP'3hCpTmV[-\1GT[!WIMstHaE^SlW><@`Zd_TYJQ5Ei<3a/'a!DM$eM'k6$A/8/LNnO-I58(3PA-;pu!Z(DTUR=Q?.Nm$l
%H<QNCP/To51dmB^"XlNcU:N>k!';5O\OdRu5si9K!CC`cALY,5Z4s&c?0<W9S63npSOnZbr$mJM7trFs!tHtc<O198R&.Eock)38
%#pDm6"kooZn5m?c.!Qt!2%@dTk="](]?+2j>TEuqVAb-N96$Ol]3Pq`'*/c/Q?spI'os*R_.bC'AIXKfKEE>rB(rbJ!7`n"9tF+O
%K*IpjXo%nSeifs[AD/6ND8"k2.bJ4sRd#pZBJ@b'6?JUP(!`"64I5%']RG)t=28O#7*$1_iikJHqEhmFnmSO$U+c4g%ha<Z1C:PZ
%FD>pWA(aKs83>HDSPDo86B*&0G:aV6.E$GfLcg#a"<B&aMtV4g>sZ*3j9M93Vic*G!aPgLJj(q7-BQdb)"[ueIFiqn8T^,kk=cma
%mNS#7$(e=Gm`f^^OW;iJ_g!CLB?TJu6:+/BH4d;imL+!&SCJ=FVu#dCs18CdjRa^4qHHE=PA7d427#%dL6_)_JEXJ.X[WZo^5hrO
%L$f]+&[:.g(4$mL$BFui,ZQtgG/>o#0(h823fM1G5S3c1R?I"M!X8>;\<6l(_o(d/Ge<A4]Ia'RIO4),-`W#pKP;TL(ZtSnM5bSr
%kDHW=95c\*4q(P6>)AtJL!HBJESNG!Od5)pl5X`C@q8fdp3(<CWdrrlTaUP1M^MWS(7m&9-:E]!U6cicrD5m!!\9iSW')rYBqG,c
%7IjtNT\/6h7;='=K9&cDOkO^Y1\_7L`S8IB-^)A6ciFb81-qn!3P+KmQ!!R-jGZ?-]ZEs7g'1'WOR5`Dd[p(BCD27]En@5SG6TP,
%gWReb-QF8o'KSMaUaP&@@Z8#-A,L^mjE8;*H:U:T1nfmQ;WoXC"H%.!;Urt,p4m0KV:G2%Rm?ls0oQ[u\.I='le*;DGV]_iWKgJi
%<$(Ts-kCBb:jZ676A^`<$\Bm%;IR3]mfG4;:K/q72c@'Y,"O.:[(9F\f]#2YH&"N[ah`hS[\Rs7-\RY8"F!>"X@-\NNINtSSYK7(
%IVfi?b=Q<qfd*L+077UHnd9_;&,<0@lI>M6\'/aW05='FHJ@F]5nI"1PrC2qVmEP#qHJeq;SofF(=lCKO(\=3L?)]p6ul3[<)G9C
%d`uA/'Hpj,:i0m?#a6`^)8M<g0..).qA-Bh?-P[q1*$IWU8[A_Q%C>/2A\]*U2$sXD;">I>g;krX6i"41mZ00pXOBl%p>-1UFHQQ
%?=VTTHE(tJ!^DhJh^cM.Mkta$L3&!J\N"`k>3'N&e6:c)-%6-LLn-J@_1IP[B&:A.:dliLeAnj:of*K:'2HB:5mBRE@%#^5<!=S0
%:;#k[:"sX%/9nhDl[3"6k=j]#A0FJ[M4;h8Wuuc\q/2+`Nt(86mWt[FNTYYO@,TYuip=j-R\Ah*SgOAPRda15(;b6X(B#iR;]_hf
%"MiJ%\?."oM7VAYJV".[SX\TZ8$Iu=$6"qP#Db-"*Vlp0g5"^NYGfXJj"YFefk]8;M+R%=+Bh#`*1,0ZSG$FV]+*,G#mo3s2?8UK
%;SRua9r/#[!?T*X,sM>PC1S0bpVoH%!(7F4Z;\S,ZU<i1)Q8rZ<LQsR"L!IP9;t_rUBhmZc]tG)*%6l+]E`)C..nqtX$/lY`J,Od
%7^U*'ZAe-;KOOE[.'O6tYm_pf:4A'LM2?4p;X57'<EI./Q(ko6nYHOi>!pW_,4o-&k:+1id7Am\(8TmH?an-.6K57BP2rB<L"'Uj
%:9q&6l=6P$bp.C@NDZO=-AQcIl9LWt"eJ-a<)SO8<_1Z/R3oSsl(2Zi.;0#;9pBOsMIB`Q</=h/UZBl('\$61)gB#[WlabAU=L;U
%#Z=#V-rr#-Q3.;UaK:\_"OeoZoN9ga+_a)`$5C@/-mY)),(MV1)T6od]RE(n^?!rj1i:;B!dIJi/kV2>7-X/sOsLA_Jb'd;3AgoA
%1Yc'8nHCQrTa]n!JkG4\<@cdWKU#jC3"D^X,13KHj")[+(=<fA6\hqU^er?=LN)Mq4buq*?pAar(ET@.iAb9P_TA(=j2_gjdcs+$
%9aSup'@,S0KUuV_&RQC8^>)1O$\b+:os2/d]G1X6/>;.@9iOV.5*0"s#u3-EWKRb-AG!@uK\&XdG_6#EHjU%2&@,PTg"uc@Z4cgR
%`rhNS&NuPY"smnR1;j`R?(g!EGTa5(/lHOkO,'GW7TX>E4>=;QrXllfkkPdLLjbDPSp?=Mh&_$U0)LDF="i:Oo,iF3%D0u7\/h_%
%dR')-o(_IieI+=^RAucq9-njfl>54\h00oA5OI)a5=/MPHptrQBr\ECi#bob!-*(8Wj\1DYq50n;S:CYIg7-ViX%RBRAHJM&m8eO
%4Lm8'_MUXW0:I8rcJ>Uo'T][oGEc'25ZpO<F%iOrL"48La=4RRNBkG=JHWqL9>KU^A^quf`/Dhq4:$WH%Kps@*<MtRMt7KME4YN^
%l>faDlAAj?U8J.0AN:*Gr8ai=[.#nq+5%hQ0Lp41(hlc="OO(Q2%-DANT*qJ<IHNSKqW(lYTQg#*88MkL;oJe;L`,[jDT5k![f'-
%H_P[44WUiYM%MI&n&e\rZB\<0[I.\[$T@>Bp-(i#DK=sjAnC:,6e`K4Zg7G>#>tOa1+or\NM)@IOWC?o+`[abnG7sKcl4dREj2?*
%)l%8Ei``:R;t#NGVEfgEFs5Gb.MNrYL"LMkNnQ5TY^o1c<_0WTb,\Kp\F)]McU+_Lp(1]mG,l2+ZOep9^LjHFUdA>G+iU-s.@)+*
%>.V+EOOK0d$ck3qKL'Vb\M#Y=C=Jkr?!pYLX)ZI]U;AV/C?c^R%U/./#Lm5gpq?dQDG3QK&.`6n%FWh"GV2n)MuR^t@sJf]k?m6?
%2<+5-Z`h8s9nA'O@,TbV1Qh6;Mna_cc&)dB_CJOS_Su%-;jm3l>T3_,Kt2pt&r'k.jq;[p7Wgn6&sZYN,Xe/0Xm0q%3;jC5j<a")
%^1nMb#R>)gX?Xrq<Wm0:"=QSeWELMO(NKf2\rh%9Cc1)2il:Ld:4/ciIHsUV\J'CEEsrapd"0-j+-7`k"=0IQl9?Ra.6[;L5bTDE
%Eg&Q+Yib7tT[:U0KOgBMdA*ZY]H@Z_f++NhiC"B=e2O4Ic28fLY`eK'-"HSV3GBmPRstTe^tq]sc\[?biZtLddl/gjBi9kFWU%.q
%W9]^3\\0@p%LI3gK_\6+]J3Io9=ol1g;e&i38]]p/`9<CNfo8+1*]A5&dU+!K"O8aoUH\[M"aKahha']a.=:KYQSImW<Qg/7=%N4
%9FBdj7W#:.e3o!KZ6fY$afOJIX!m-`b5.Dk&[K"sk:X84;(5[fAL?r_hM&L=$(t'l0tT:*M_rJ;%r!r4968sdfl_"(_MZ2@;4;hK
%mP/HIF&0-@!jbIuKBe4`[)M<cN(B^NO$HDb3Lt!IFThZBWTo23iCjm5_T,*R!c5Sh"QH=u,A<3cCkO>X(H-m0)o:n\+jM>Jc];G?
%=##%#,t;5h7^'*#I3;9+5.N-ll8\!b^F[i\QgN%CqT.<O(_VTO#IC=%MV5t9Q7U#*Qj"1;N?ZMF+0QrnLsN)][lRi:Xi-dYXI!Jp
%\4:[%*92XU8%5RbhsscPYD]&8MP7@V;LaDC,M'gYGa;=,e3kZ:gjhd&5S4hm"R1$gAn7>li;;/P<BO2>7<h%:3,hoU,::U`?oG;9
%Ku3Us5S^.jZ3S2S*%J/`A4A!kqH-M_@nOc=,f%D[]HX@oN*-@@V0Ym0LThMq=["C-/c?iAfC<^?N20nH/1R.t/-`$*1U."dd0Q5t
%A3'E;/kb@=c\E6m?'[7'-B@C(,hCmj?4S#!Z#h$cP4_(bDNR%Z9nbiT"pT0T7t#I.b\r4*^MM[EU.GkY$868PC`95X#"J[oAfk&c
%WV6BckeQ2Y@AKJ0GV^ba61>[Q*B6`8+Z_<P_jQcLOAO3!.-e]9KcUA^E,Q0D>bi@17c8QJaZ+5U[G'%gZ6B9`Mo#DlJP\ife4$&n
%fI*!%;oVtG&u4uC\02)[''kDt%"]1O7XTL%l%&TGN$=@BL>cL=O7,pd:(!Cc`mt=Ch22!%K+F*!;=tif(2W4jOb6RBl0r.O.J+0(
%[K?a"8?rL9pAMIkl3+%",UX',jJl]1)7hA;16%O23^<ek6oZP?!+$<N6*6\M\::@?>8WOj&X5sl'CQo3@"Q90kSC&;CZlnZ:Jsq"
%fa8CD&_GOB0KteJ)+_"fl/GFgq&faSL(q27nG$j2mA^[Xo/,rDQP/la?0d+d]S+i'"(VW,LuQ%\I>VidUquZ\QD\]_T0fZB&n)*m
%>>jeB,>oCZG:pZ("aQ5LdUnf-Flk(bf&eJ2^1aaPi4A.+8MW&]1n/Z9o3s1h2?:DqR9KTQ]8L=\%Vb32lkFFk9k,]Shg)Wc"`48G
%jbi!MAs!Q;5d8pcIVHBDL-0T^ZTtt,dkE>NfQD.uG5fK%NW%I'0n-5Q&,8!jj0,Bq7V!*LHX=!WR2q*>ho?rZ2aX`0V+dikacreE
%TBa7^Ch@t)j"1Cj?s4A;:V;GI7)7Lua%`HMosc!$+nVm;2ti+LWULf2G<?=WbP-Q2QO7H[Qa-P8GL3MrpA1Gn0qM:)8"39]"u?2B
%/f_%`,a(4Fogr$^-3XLF?)X#J-k;A!^igpdlg1]]!074jh*YsKN8jY[o]d]Ok+lEf_4MXci%X6ib@7\?Kn=lubr2(+$n"kW-O%DE
%:NoVh*$Gb]S\^/KJ'p!7qY2,>lPFek=(ST$(J[:/7f<C4J%d<JN]7;sg46"hd)nn:!e3#l(JuE'#5t9Y\;Z&h6-,IU:AP,'#Yg:?
%oF$&9opPa)00j)`oq>`C"T*;f0@2SXTio,1O!3"ER6^&EH941p'm9AP1fESn*]4?ZEO)?siT+U"?-:77UgeQL=S\VId4E<2:&9s/
%JL,lSrallI5D4L[!@8u5)prTU0d(.I^hWm$3X2Z;O?TOOZsPW8o;d"mB&^G?dd:"u3%J]B12mie4Pf^&$:N-"#*>VnT/1]QJJV1O
%Zjc_Wb]2igC-Yg$R'_g\:Y"Ooh)Ykl4_Ycn'4[J1$<YqqrLQLUhhmj7ZFp"WC'Kiqi!C=jE?bdMj+Vss0cq)3+CN'c4D56p*kqqX
%5X;bGVi4T.5D;.s)'K=CjNq[-c@j&q*UJL4)Mr$).e"SkR)N`g#!E&Un+!?gSq2F3rj[+7)$lg,4q;lC@V]6tUS8>Wd:cQ;3q`#+
%W[\pS:r`>PMFL-gkqXY*@)dBRem6[2j;r;EG6K14B?NP$*)33*JQ`<8:R["MXM%K[0ET".dPS%M8Pbe0&LHA2Bc)[j*]4BOnNEYE
%!NZD)6QS)o`,:8kWYN=%a>$@6*9!>j2,QMf[gl+7doC0%22qV2.OcFFOHMhYVL^<-9`sA&hpXF9fI/nHVGWCY0RmHY5ikWYH)%7q
%\u&o%\,NOEi*:otp!>O?h*]X>;DrBkC?X>=d%<VUn@gClFua$809?kc#lgT8'Ge\V'a?+!ZhWc;J;ik:eIC9`%C_]S;)\XL'h&D6
%S(3Me:\:T'=@ibm@W_e$OUo(5;ldjWNV>GNKN+h,*u@g8WuG+%Emu9A@L;Tr![^Q&:7b3414qr8NB[Z=F6FB$e*)X4nAh:Y`)4(\
%LO]b7%/7LSI06;cMEU8E?J^sf$_<t/PCk%BF8)JKi8UYuBi$#u,3\#SncF#[dPhk4EbGol1j7;fn/&s\Apjam_LueG#%=<>g1%ER
%Kt^tAb@]<aN-L.RqM#TtejJ7IW5R[CFi+c,q4qj5naRW/f/;J]FEu:lJA!dR)@-V4oY48PYQCUaWYIZ(CERnR_4ENDd"=%_9d9dD
%_ElWVJ=AVEgJlX8;Wfm!ER6Q3D=mOtBn-O@A'd&!?jZKld/^#dm%J*C7A*qFqL]UBrIJFS8Ae$FY]?(hHA7\Wp7n418-j]G1K6@5
%!,;]^#3jKZn&"L-L(cQ88^5m@^\#6)UCFqO)+i8+7kGtSrf#s0*Hp*N0T\ZDOPge^1W&_.mJ[OlE5([EfQ@V;FJA+3%EPM5r";le
%FPtMbhtLdeodLD$7WH%1@l`&pUCi#8X+bG?h'@o5O`e\eiSpmQ$n$DnUgPmOHdj\c2W=UVd75Vd4t@J[J`)k4onFm6a%):/&>,/<
%!V`9@PCd5^_)1k$.19bl6a5do6!-Dq=H)t"X^C!@3#a`&)<^gcWDt2.,!eN6p#E*8fHN@(kkYUcMD8AV`9qW&9T=6/HQaI4%!*[3
%!R#bP!%+NDCketQd2]IL&3)N=)h9T7EH=3kO@T)2a$HB.3hBTZU]'6<(Wg?m5#LP;KkY1YDDGG`N^D\sd5t);3'7;_?93X/rHu<1
%CY6fD'Ec*&eAq<^MUTu#`T`PEr@X'A=_$sm1.qZ'BI5k_cA#FNLq^_V8Ws=3;Lp1PcGG\XN?AqK8JkI*g)cC^*Mbn-PtLhJ?8,+=
%#,KV`g6,A^4d@1MC<P2.i&[Oa.[?,8U_:QR,I)3Ianl5M,^R5;#IHr(@)=]N#7QiGk/u]*eJ*-3<n,hD8P'nMDmFJUg;FnbAupCD
%'t">#Wf5q6Kb).k@dStaZ[D\b)Fa]40GJmoU0'l&?r0*ui%a-n=Zsh7,Bsh+FOr3e)]$`bm&S-k?[hB87erAt@+iCoL5P\1`UG;o
%;)'!hYYVE-40;g[cs(n8HP]-Uh[qu@<LD"\03Kf.IYilaIbSLr6B\;,(Fl`\(;D_R`>C+C1[VU+^5PYe\e_ZpjY)bTWZlSa(n$QY
%_CT!)qB[?2WZJo5*Dm]h@Z'tckOgFU,KA\81^o%Cm/B,&Vi0_3Xcb(biCmQ"d>9!fV]E_2]uZW"p;.f4T-Q(#GkU=dCt217F$#Ph
%,l6;::uT<2<^JXN3FJe\8C#R8[%6WQ4;d-nfWe1o(jZ<;`qqjT6D"bKjcHcUQ"Q6Ok=e;SMA6`H>3#g"%_OG%;Xj@@AiME@'$o!4
%h^[k^`%j=8'Hu8*K]YfDO@p'ufF_Kak&C/@cY)GXWWakKlOk\"4B@HEQOX*77igi8*q(1A9cRR05$\Wn*27l*R?K\6c^>]Im-@"q
%1:dI.M^SQllr?!D*I(:0)Q7PoR%n[Fd(usT[)g(8LW=W%rr!^A:Z["LP+7*%ULIEC5$J)$IIN;9Bu.N>O$Q-(HZ4_b9+K"d:@3L[
%#(Cg<pb$H$&gD5uQT[!Tcn&tT?*;!_!iJqeAAZ(=VHSbjn*a!'5n.p\D=bsSZ159aHu7&=[p(0@f@XbpqN\f%H_^3l&_8G9ZLN)^
%&qdhd;1Zf7KkI-tI>*V*T#=;`_F%!'E;P1fEO8'37H!8Jo#FQYiWXQ1HYFP)*h,'SLe^.4O[pajefmO'kb%r&R]6NQK'agr@`SJn
%nf<?S'ePPN7DM55KF+^G0U3`ZCeb@b!+!J$b&'fcG_[_Dd*f6/2D`;lO506L!:1++?bdh8!C>orT/n=(?o*nCGV,JP"7UeVDnbc)
%8M%-t:1OCb(IAooK/j6i(F_Vo+C>8.6Yei0*&oos`kI*M+Nb%7,)%7/;Tq-SPs/Po#<@O,_+f^?C3f)W><,?ZDH$.'M*d5\I0js/
%@nhg>;U&&iHmK+J;hi;E'Z#AH$jn#udGfX3>Se)`'Yge]o?kBc5#rHY?s#qhr&R.1eF`qc`'"K#,S3u]TX;>r_mg[5GYcDL[H%+N
%T%X1d7jO'nJi?m+9a=,ObG&4,?@rF3@^Ejg3X@k\\9!t%Ynij#LmT@P%TaRXBLXk7me(d%!qM$d"(dN;L:p"<RM3a`'gnK5<m%-*
%!/DPKD?*V<Yr,D"3-rEM1#X(2+#)\ba0G/nHM$!WkD?fRLLQ\E>/P!24+:?Di20r%q]K<.:E^nk"#;0Va11qQK4\qt0Wgk3P/=E#
%Pm]n$I2jbmd[kuT*EQ!.'94T090YW7Q#d#"e;l@MaFWOgdL\LoO-H<?^W7"Sj`f*uG9!7q!?0F>jrd-D8uA/8-mfS/B(,2D1m!,9
%X=U.'(=]QEReOCO$qdqAc<Dlqm_&!PZ"'gl?+QW9>3-/g>HM)Ji>]6EJV3S!'t'%oS$@*Ulrfp6)+[LhJ7MTsPNLKgE4"RH4shJD
%gHi!-MjW:gCcT_13`&W8<03@'dlE+p$FP-TjPdYpb`h2nNH[Rag9lT]X8/9#(E]F+O)kY2O"cJ&BfAO3oc`_D:j;>L:)S3@*n"rj
%,8m<u\G)FJ\4_08b'49b3JBL@]VY@d.`c1FS\!_SUq5r,3i>qYeR>\V`5kc-L%/RVPr9&7`=2qfas2"E,#'!DPHlRk#:"FX80%b-
%&UemY5dt3S4$s3sneK9IG8WRo'[<WrI#ir+bG\d\jCen6A)Z-2Z$<nqYd$e<MNEHldA79MD6O_#<]nai=OB!NWI)tVlPMoQ#W`8l
%IFat[-F-,i`oAjnZq)if:#`L*/"TAU?;U^e@`7R??;("((+'mM3&.tCMNo;EhUVjJ.UY(%J\KB(lA;IL/GKbVls-93i%lW7n4881
%$4=&TWQi7HWg\)GU_cCo?ni1R#jE5RA\?%/-$?\WX*tYAf;6i9oe2R16QN#@Z2j!@fFP5j#h")[+/ESijF"aX$EPS)J%Z'$5[%'M
%>DAt?5`)5-3=-?``5"t2m48H=ODnheLk'9bK,=`2$4UGU%QDcY#5tkq$j%@bU`_?kA/55"E?AK",_?aa"475WK>h\[LoFkV3MrpS
%JYAm*RGbp?9XWM1&;n74'!uo>Ha7]-Z*P:=V3S($=ftct3/dfJM_')#Fh_4kjE]p3Mf7D1HDXpXK%4;73)^)7cag803oY6*r\SK2
%ZP:.Q+FjhnY`pJMQORtsD24RE&/J)H+'RX"BhQBH7Do?GH)D9?ktI@e9b2nH<]Y&d5^"`QUJS,3-&MLA#rQ"!RIW:f`Uub[`'goR
%TiDF5I=P9ITVrp3OD4iY"7<GJ"I=W_?9XGfO@Bk&*/%Zfq7=kh]rDW/"W?Q]R+ShY>,\<3*FT=A-TnBnT-+,nNSkY(MrbK(IZb0%
%[-TL"%1+f=er2\dOc&(l#RCS06oed?p$(g@M/Ums*U71A#e1d,46Yi#[UVQ9"BAehRVkN[2S*:ac:0LZ<\=qD=W?B^d[O7']?5YR
%Ie1?rmg8](Oaq%T;.D9."_oHZm`7$q@Fo*,rhc7M(.?2D*UZH&5.%Z')C7tK-A3g9?C$S()H$G^M,gDl[@'b>bN$*3d/b]YW0IGf
%6-B:c?ZS<uem:eBXPh#(d"1m&XLt'Vcl""IYKM4$GOr$e&.Wckjp5IqL'00:7YM]bfo&-]*Cu(3-H&!WS,a?(1p>5;<XJql@iefU
%2@26kZS0[:a(a^;Z&As0rN1iTb8Sn:pbGjs63nm\*/:8s=,K%cO;<J@-B>8k'PZYsJGp7*4#U6*B;3jos/\9f@+049^!mCs8W"9m
%+`J@M])03<LVXX?^;F.A6lo6=WYBcs22]7e+>s$G#`3j.80nk#$`5qk]/TXG-m1WhGjI*7!V/h,qLhCeWKW:-'0=Z1dCOKL_A1TO
%!<4c(h'pYNT[>#QVgK%*l?+ff[r*6f.&mD?"J0,NWetb?,ahJBn\EV,$HJm=Q5GZ6jm>)s(B>J,U<eB72AHgp_"g@iUs0g1%.Ht:
%0$Anm(oV&_4m29A-K'?U8R)go1-(/jk0O[7S=p[rVd\Xi#EGNuE;`b<:l?c4dOlDI0]$9/J'_JB949OC4.I\@)H:\W+%5QC(M_E?
%?,3Rn;O&n'+N8!pfLr:"`sOFjLl37irDp!$80q4eJO!u3%^l[`;c4EcYSN4O$nNn6@U">sO!+-UZ;0KmdN4e\+-<#)e>CWM]&HS+
%(jVqkM=K-"B?ijq4,`]L]!;'fMG#pAQqgW2<VRPjn;On/:CA^G_ZI;$G!3!>4X&@MDCTd0'(J3r91B9:mnTu^$@+`\,$_4J[7In3
%.QlW*,AXc\q0TfOf$S3WT4dH'30tr(XS&WMX'YNMY%et(0DZ1%)N&0&;VjZZGkiPpS/$H'$*r(HC0CB7S7ZCkKC_LG9bRtc?OcR/
%`F'X=)@Iqr2alW):gF$k=FVaji0#](>pq+^)L5)(TZc:5jMcf+Z&`D2DSeQ3H7(1Td-7`1q!^.An\6GGM_RZkRcnAgi[4Cd[r:f,
%P["IklO_NaJ5eaM/q`GJ0FFrjrUuB%&*Lo[:..,$l=n@gOIB%aP..&_jP^P@mM49*5+7BPW;1b*R"\dN=R<Z\_hB0bbWI7fB7*pT
%(>DH5[q2o#(Y*pnmZSckkjt?Lk+)loTGdi:hj2O\HR^7BQcqeDTL[*M/4<E#4`B.'&+)UQ3)%f&N\a:F.9#>FloEs$8<5]D\tp5r
%);[HM#-*\k^892;O/ID*!E_FHRVM(D4Q=NCmel_1Yk3$A4!VWR:)9rK"$?_e[VI=,gTMoM*79E21cb*_cI^M?:unas6a<HG;So-k
%>WEg^cpm.Jac!"f31Z;Z;OcDOh'daM.rTjBIG29F9_3WbNU(Rj[*.I#XsJm:FQ\"M9ouPi\sJQo_]?4$fN"L.f]RTqT;'jmcEf[k
%927giLO7."C4G#3E+e?Q\sM=pNdeX-J8raBpNm4/=Rs$`ge/JrEV%/&#V.";M[@LIG.a0)]S`9JV'$'Co=Yj7`p1'_E:_=H?XN#G
%07Ei9*M0p\Z7TqL#cGn143=Pl6)?f,H5Zciq$MsC`5'=N8"DF=ae0t:<nB0_A]`^"(1FUZJ[;PMDq8+3!XI3]T.%aCmmL-9oV+T)
%6AQ=$Q]^9m;W)ZK+7`;71";`39VaTe("cCKL!kfJ=k#lu=u@A"n:j^c=^kRFj@4`D(cr?JY[hlT5Wq]W\+U.=h^NL7?s82bj(H/*
%d&%dtZoBeZje88Aaneo]LL#1Bhok@EUXY4-S0VEIJ3SJI`d16);AY[^$=h[Z4^Q.lM@,$,@nN`MKeueEjCfY>M_T2@l&^=LlWFQI
%JD-;U??Wh;#-k_[fBZ.,?H;U[YrhU;,.`(#@Bf:/HLO_8:r9qm!,+lCcEV[fR9+>,CgXm(T3q?CWtGnb>.lJnY,ga(gPGVNn)Z!c
%!(>h.l!aEgnB0_31$5\XV=LQ6&iVp+W:`;;r4=JoMo\5H/eY).d^*n-d*#RHYB%A4%bG!-hHAG>pc:%8maQ]_SG)PscbFNX/5D;m
%.J'+J#aOeOg_uT93_lrQVjO8T_?Mc0BAX=[KSLSja5AO1B)/Om2>*<B1r%nC(gc\'fc7QC!*rk0-YoOD#n(V0b2Q\s`.G,E/fDlj
%V$1m>@('XI9=*]ognNkTc2G[8D^ut)o0Ci-5N_bq3!Z6!Z=(7:\?'6bafllL=q;>/#5th%&uOZY<5=%p&<4E3#SJ>#go3cSU"VFF
%_??Fm'1,<<0Q;2_JO("X-<6K_4,FBS9g=i!GeDqp[g1Gd<dot*Xq67SS9e56P/>DDn=]S.Lq"YO%O9a9CJdJ_"/o$>0T*\@Oi;5M
%XV\)-dD^7[>cJQ+GNdAo%Tbb/X7]sQU?Mu5NU=uT39WO5T7ea7H0'TlQb*+uo\eAKVCI$GAHnOF08h.6eNNAKa]/#'(6p=CD=/Vt
%.=8%8.b8l,)^C=lG:7c,T>^4ioTU_'-?\`EH$P[E?6/32p""$rP!M.!/pjUG!H5#A6eZI5`!Sh5ifl:*>Jk$0lAZI6]0ZVF"tIMQ
%8Lf&Nn]kXSV*(7^\Scbq)M8@X8L2DR1K,fLf@JlfLe,8aUXj[AO>Attm;LtdpP<iR.p'C]>C"90)>h:nm7s8C3R9cU?h#Yq$22^7
%mYio*T[`CU$#i;HY[4&Y>nO]*0<]C:Ml9_eqkGQPDJ*#7'T'$5:*e&=l7EZ,-0fUgHCM'rOfW#V]+Nem8pJ"g'-u73.,eT]M,GRY
%5Z.uA7bRtVrc\pEPCVJ4LgpUV`C*RE>.s!!3M\lQE7V:77Dcm%Q%Mm69Cc1FV9CIA5<Dn@L,CMe'gXu7>a9N4LJj\jUR4J,8b,Ue
%lqj(ELK(V0Ip9PMGZbcHKuNU7(A[jU0SmtF[*A`OmXSG>*u[^jP3@hR0/ppo$XIu0Gr+_O1N2$NJY'@Fndnoq(5l+&FnC(]N+0nD
%3Ur%\XRAT6:@buTJf=Z=IksN`&RT,_4CP=BQE-pLco)J6"EC$N:E*1-g(:$QFN:`RL!<KEYGAkUGYRb?$hoM36j"1-58sI,[nmsP
%4k'+*+2<.0DB_gpC9ZrRP#ICB%i7Acqu-HF+73\h%u?h'T:)[lKjgj]Xkl0=^H)!*kn8e-`Cr"1$Y!X0/IGSD*C=!]--it%J]G,>
%p#g=^=ckT()2UPi.m*WpHmY1rVe_d:o.9iqGPhB3L*lou^]*i>rQF*,J,-kZe,T!bs7p%%\,YpSrh]A`[s,U`+9.,,V_Q*ZMn5-s
%%BJq9I"hSrs7#L*n%m)ElP\%1J,\g!GCI>!P4$-!S5<p*c/+sYqaRgk`G-9h:83ReEsiChY\0uEgE/.6I40A0Oo5F+7ggQbQZbI6
%T044WrfUmIcFig2XR"R+T2qTol,2tte]6eJr""9YZFbA;/Qb:jBs's_3oo'ZU!Q-q[df`an04e\4Z!/j;Qo8&DY?9!$A&NZ@>9OA
%#)4eUhBl3#G<o.-B@_CQb^(msDs\STF)CU],um6mSZ07'Uo,GJ8u6!spf;GY#-)2i5NW0EpgbJiB($D6,$>O#k'1QIi:u$mD/qN,
%LZd%IR5MteIV1R"DZPHcOX8V&5;$&n-#gVPjW4b:n/?*WRkST6;@?93Y@$%@I)ep<.sh+W,;[*+WS6X`D]Anh)j2;4.5r*<a%TcB
%rTT;oH([D&I@fVtoW>HcT)I+d&)>e$ZgN"TQG;d=YHnc=n`0>Zmr"Tl5jJQe0GY%NMThuoVn>6i,VQn`cCO]_1o36i]mS$U=:'P(
%/DIl*^;l_0p\$Bo+"`F&?eW3Z_OpZLi7[_=>H\;1c?/buOjMKqVQS0mn@no'7^!Ju;]_m7C)M7Cg=boKbo45L:nbYm5+LJ[QO7Sj
%A[D,&<SI'+5K<6?^qfKJg"V0plE<_PcE*l+^,)7r[oS)FY2dkFq,O6Vk<-]Q>HLqu!aI_oG!Z?&at?OuE!L.7"!5JuU5\-;D"g+T
%_^HG^a&tT0(g4S[H^g]`op6DgF65'=o"F9M^@dY4IN:rPp;_t[A_@64PY.Wkl^RlmH/fEmI</5adTU4'D]gt`.E3#u>J8M!_.TU*
%o=Hq8np>9I7dn@E>>4k2/f=1c$C2?NI#?@>[9U``;dN,:kCk-o&PL4r%7LYhWgcbhBV"%/1S&9Marf+EfNV_p\Dgk%gV)'3@D2OH
%b=;pbbL^oUFAr\I+[YI>iQ\A^]JH,U[s6le+)!:oIRJ2O&)Z!*DqC3gdZB6U&";+#r:3t>I9@<,E$4/g0<3\G%3Rf>kMk4^D$">N
%Kj6jYn^,(en[7&^jDF;q.Hf#5DhPh$c>4QZ.Y>`a*'UkCakMl=W[tD[4><Og[@7@/npceSkAD1X<%&*oqepBR2+1A*;mkFCmB>Go
%R+TG]5$Ae+^9i6^rAF5&m"FPU\*>U[2tD->$cGs9)I;+r+aO\Le)_WGfhB8CHQk=pXd(Z,O-(hF5l4bjs1LnX4I3,+BhC8;io:FX
%^E4<,[X+\pFnE^H5L2-$=fZ2<kOSCIMr7l1_,c&I*Q9^M8YW7k`CEL-_,<__e6tN'*FUgZZ<L#9"kH2bB<&CeV]@))=W_;PBOPHI
%ddE*<eBhRMf^5*9e<./ie%'sdPaAO'?^gpZath,O#n/(uR/n9mrf^;C&Fc%=Fo?rM*!WlV9t^]qoCOE99=sp)M&.K/'.b4WN%A>i
%]hM%prfZ9tc+F2`MLK2!O)N;%&A5IK'.D&4!_utMO.<W;[`q\]i'eh(eXJ6hEUTq5AS<5Z3Jb_]h>=Qj<'c>4@ej\GAGO[AD<g]A
%+7eWe(Z)eK@_FRga1"S]8W.#MfftM*gsl)X<<lp'-Z<b<nHANiZo1mAfW!46Cj5h"/JNb3Hn=$cdg394IYQsXKn8?$]/No%6[p8M
%(^=csVtnVS*oGsF;cgc2fcQmt&Z)[t)dpp'`F;M/JL4>60S(<%Q28@X/_XEBdpbs0;mkHYZt06E7/n-jNtt3N0C@Vn02MPWrphc6
%`bb\D9]uC,UXsk8`2293A56hKWXVHq%ceK7\7!c:R"5+%WBk8(4m!M"'@S#GB((opA?\N"$''cV%Z[a;hBj@DGCX[Y?<A^-$HpO2
%4uECKF<-'X5Kp\);+cO<?l#/c+`r.I8LMspb79dr;A3G_pR&nU!g78EXR)e>qdcKp):aeS4L?fHHu8U9+dr2-Re\Z/QJM:IoD$fG
%I_e[`\#[\:0K'E6BmNn8>%HMmfT'"XeXV7A"eE`h?Y?27)Mpd`@qO%=5(<@,3#KiaI=.4Sc_jo,[s@R%I=4ZA1ea/5I@_f3l*7ga
%Rf1,I(A6,:mlX0kKu<iqdq(*$0</d@9m)\9!LHS=l5ctk-Q\)jE&DcGBY]#]Kk7EhhIkc_5@ZpqnBo%en>4[ibe'jdXH.0RCE4./
%4dZ&D@pJE/faiB<I[&lC=M`Jo@d7l4k*m1*qDK\T$cNS)+QsAt\HTcHk^1+Qh>?7_$YJJ?=WU``=MD4jRq,7l`W"(>n^\rKf!BXL
%g8on-YADg&s%nlDZnMt*,\rDO$408[2:-N;-EI_WkgDuV?uH$AjZRSUh!CU2L>ZnC"N*_3,K&\VDtGprh$%k.\?TYX!3PGTpf>ef
%YJUY.1MKrUclrH^&HHCQ1=a"diDQ[BiW(X*#B]B56p)HMA\A+D=6YNTQY(_r_n\]tV>Ka]%1N_EF`$iM2\+u$\dh1ec3]E<^Fqgh
%[h7/;dp`C7rhB4TM=;1I#eslhbicQDdEW6=n[/9@0\TMMOKr++3UWjk"=['g4A/!GE5*m,"&X:Hi)TiJ"XPD@;i>]X\B"7o:*7-"
%BGatZFX.5RYR7_RkVONt2G2ibls!hV"lfQe%YOljpBnd9qiE;c;pi#E;FA<'<g<['C7$EJ\L"'i-XuX491T0h`XT13eU_^G/uATp
%ama-dXOO<o.\RUHEE&hA\A&&rS!2/="BW`uA7i[!>hF4?7"L'a(6CjPJ`2HE)5W(T+BGqCQ)HsB:^S1uV'>DW:DX@_)eH3tQ60.&
%/+m3!pC9SJTM`"N)?]94^kcK+%`p/$.V9fi%ZO'ZZ-HLVn:9Y:UsK+m3>!40l.i6fg2Usdj9oBn9<k!uNtSRffYm>14(V[ZJ]PeQ
%"ojmQ2B>+m8KU]c:]6'mRj82Y+hhOJ+_QoA$^a.N,bWqKW*)g]fXERrXm4^OA^!YViUli!,7#d!Nrl=:@hF8T#bVF%1T6Nsfe4)u
%Q,@5H20(jL!XuDC2H?_.?L_k&.TT.i7*oaZBfg!%OG["jE3;rZD?4c"7u<D7,Ct)ADt5t9!`ftWrW(V"5gR/s>QudN<tS/t("P&=
%;ct4,=`mim!"D>S;Eksbmo<dr>S_@&)rtjEJKb[['R5+&X+hh1n[)tY=Kg/k-BH?HKP@jfO7pQ`=s<E</_!AciNudGO/ReF!(]2.
%W/ui`CQmj.(//aFS.gGAeoBuq_n6Vno[a8Y0'`2^rfE5J&=mBl97N8MLYN1`ftE:;EYht>bBZH\pKbNiVB+A$PBeB+2uE/>=<&@%
%nIjX74b[iWGr`T:N3\a#!dKjMYCSbk>!22K1eZ9\MZf26$,9]u+r7AkeP6Nns$*BQ6\s4oIqeN;\'H176p(D+2!mLLVs3"!:N)_^
%_mI+Go/%Unh8sHCftXmlj7YTXp*fY3QWa"qRUq!$QQ*rd_^/+bYp\C8<fV]"?&6ID?tKa#[I'\#MT=$f*rb2VW,:DR#&Ur9Z0pZ-
%mQVf(4h#^'%s7*=..[)M=7"[k3K*d$?>;9&7Ss"4R-+/7WZr<8dl)8MXW]eW+XF!1]$Tk`q4tFeN48\*)Ln3PLqr')g3k`0]#jAM
%D!o%YpcQ$0S+mD?2+r&N'0HHum`b@-+uI&RiB63d(+(((RZWI9<Aj!()4mCNQ96ib*)YBT4Us$9n/-Z2-7*doqK%kp4n(>ZhqAV4
%g4)9UH><#ZQbBZ1B[47K[TjW9jV7DAgTdb4-.aLDOKU;CAPQ6ANYE1/$B`Q2K+8ulZU^%T')f:OKnoZ#WBY<ePOn31e2Df*boS#r
%@etLdRZ=!Ndr]<qVq::5@JXr3Uh9Xrra<8LS)_]C:[#>-V^DGll[N*Or\&f-[8d7+b9UhZpIU9YBc1nq-rkio"sUEm=8MN=r]HpP
%UHK3sc+ECcMc']I6@=aHiTCHTf/@QYe`YeX$#j>heIKI.P;msRV;g';!3U]O3W&nu"GB9q3>MaRGGe&pEY2L>i\;(FKW!WDVa&12
%M[%Ct>.dXcW]oWoJCEJt#H-`#Dj-fu0,-p&T"-=2I:rQQ09]q$?21mPV&"MD^B8J6LjnK]T(/eLdom.[Aro=]+2k$QlWF"EgAjlD
%e*5<?I5[shTTtT.g4)6TH>`721NVob`ctt#EKrEMF?PEXbB?SMU#IhZ)W+,Ks.hb"Xt]N=U68e@O9PQQ[:.mR-Qkf*V2CXar1*G,
%l\VQWhW]/re+7!cO.Qs<?J<'>ol0O-&@(DdYLpN!b?<W8C`QT2O1DX.P_g?t,"[/5M?"Mn-[gl97*s[=Yg?9lS1"j1_-1j>piTsj
%d`8B,4.Q\ZOnq@MpKnHDSm/kTR;d8&,'_Ei>J@<?C's\Gh=2+uC%<K`a4EX'8:6F;CcP(Q[DfJKQT&:oABK*7mqu.=qG21]]V;$4
%g>%,AM#G=IU6"fsIld.GC@3ukAE^'#c,:r2nfeh7\a/.LDa'X@mkK5-9)f,EZ>^:5EP'aDKohsd>EnYh\3_i&Ih6VI+0VX>F!JL8
%O&_Zn)FVDpO)d>[r8@;&k)BSmd9D^1f9n;HT3`>?G^S0YQl*NKNZa^50!!;J[!3qL\-M?sA!R9\[.rOal&St/&Jol!,JX8Ki@4:b
%e2HbPE1@4Vj`^Fp_<nYT)i^A_2qO\Y7_WVeH<\\SrhY_iop69#jjVs97Lg/!gu$u^OM[sScB[m1]61!h,XG4el/t>VW#hutmkf(o
%ZHGJTmJc^>gN/iC)EN4`dHH5:`)l3H^RW:A9.*.GcQche5>%ntU*65m?)UqR`mc$U)5(R;m^,nCYZo"_fBDZ(LgJnoW/]X](RfjO
%;0J#X&+!U@]hL3#hPulsSbPh!^-@UtQgsRYSX]Np<*SGJ<=*kcs.d_"C6%l83>K6bG9X3\WX&J$o/=56`tM>)]^7b3>Lh@:F*mh4
%i:bU]?.[KR>7'E0Cu[%6n=<_K?T&WF=#%%aD>mCS?!A%.MXd4IC\=n3NOV%7DJJOV+P>,'l/rOrcLsZU2Xe#;XK`l1G5qBZmCCI\
%mA6Se<5OLF``EH'RDf%ko;rcIXoh4+F]@1iesIM2%Hg".d?,VXV:`6L0m?8dM7EQ6*\XNX%oP=]Z"ikoO[)mGq'`_icOXosD;HTP
%@rKbcG\q9-rdM;C`8OA8>$;aAj2rrpMs\up1+eP.]^#p9U^oaYB]d,0(oU"p\G,<,kNMA5e&Hu(&[g$`,bi?fa9UB=IXeSKD=f`K
%(jkl%cJ5/$^$U/[3K<p&;2X%67c<;;F5I%B3D*`p6,ZAsdlT*:n](8-^.q+7bi(%<(+LHOF-qf2ZhGo\i5g;'j5.YknYOpno\Hc6
%gEZPBc>"/Lj]qLTCYh3rf1']1G^iu6=BjAMP:/A'E`N\J!oQ+OY,%p(WY=;5ib"M`)1Lul=14WTg?.F.%iDXL=hZbk%o:[Ro5U5E
%D;IBL?QLmZ%oZjXkP6O345LR=rQ?ELo?u^g4@al)N;`Pb6""uL(r[0>KK>%Hi`RZ5.Lf]OaTj"h=ki=ErA@Cn@lP(.anr/he:Gme
%AbPol_!Io>gPl0;[jp#31L"#Vrc/X40995aCRZD&rdU12DdjF4=Y2d'br89@WV8'Cmb-f'Wk`&Pp%A%sq<diCe4/oUm>^06J!f'j
%pER<57W6cCa52@9niZLYA,+>+mU*ubNq_-;jSFX(.`/Mb&HHjEMqQGd>jJalD%:i@?rnNdk.F43n`T;3IWskCS%R3ki5Ho<(pj)1
%M:ls62`_HBcB@oL<Z>-=M0Ch0qAirpEiKr<PQ+=2d18n[0oTB^g]C<k@Ya<K:.bPpj4#1MV,$[gOMoLrD:VKVB<!fco.0]WEtMa@
%K/5ACE6Qh>fq2U.T>qgI4jOi30AJuk7d90p<WN%M-821kHdC/J3r`!D,k>G"\UGYDQZp5?M$LnNilhdbMUI;-T6h+dcq@3'TV<\P
%-r+`<&<E8_%lsN!53G)Qeji\*BuGgP</.Nlh[Kpbs7!C"1Yc?Jh:usp]ubV>.EI(aGR\Q%2a8f@adm:\X4dT3V?kQ[8n]]eT[RF^
%GrK1tP^M,!Pa%8`BIgp"MIc:lKS8h4i76=qVBV5!;i"1I(%l>>N4jj1jF*[$>(a\\BKR_7::(Ytne(sBUS+<?QlUF0W#FHg"dFn"
%JRh.rFO<Yq""5TXikg4ZJV<WX=Nk*d_X'*G7%ac'.dX?9=RlYips>%*b^MiLYd2kfE:eQ$[fDa0b%N)*gq;XQ>eI4mAQS(Z!Un"m
%DiW`rnEm:S.C,#]=JDA4-QiC"Y)-Lo.9#B\KHg!M"bI=!;la5n<h"kX!Nk%[Op3Ygd#/G:6l6'e"G7.O:T6c0/u9=j+b$Oj*($kp
%;(/hq\KN_+Ks-mf&<8*=>0$rC`Z.bc6R9Mh$j]*<2$u(o+B9sKZ;X`t'&h?[ce<X*1P`XQiH'gfA)kpT_+$["JJ#0X78^<VmilbF
%g<^cb-J5d6H72%r!YUMJLC)A/?7)EZZS+WjU6L%[Z)>#cLf=O()#fVGptE^5<Wun<^#GnZ-$W]V)_$0ki[oU]mC$PJ-bNc^U^Q$l
%Oh.\NU[cnf(cfZ2dU8JkA_Yf%aVMq>7LIVSZIlH3`aNF?AQmdW1KiC#ES*@nb+`lSp6@5"k/Ln.]T(+i/+L2=X(>P;p/NNdJod52
%Y0gAb+#;3,^b1=e+oBkCEns4Jh=`=&GM\[4$s^:1@YaQ!o/UbM/PbKN=b6cWl\H[pV.M7Y$XR9\8d]'/E#-J<JHah588^cEQO(o<
%QdBns[o#RIZ*o^u_$IP?5L\'*on?1ic-3)(q91nBVKL,ASTtGkc28XSs5uQ-X4anT1GdACjDM"efWKk]<pab[B`DgYrt^0uU2W2K
%CdotBh0$f-S=U9];]U:&?fJ#F9i3BDQ-3Zq!>V@]BObj3s/KpJJ]E#:3k@sR0>1()Lr`7R%j3e/9lGbr!!0Ejh]9N"@X@2!\XMPq
%[2Re/JD7*GD&nm^[g7\":7%]!:?g;;ot#/K=IZL7&3tfDrUZ+(=Yq'b/li@?mS-%J%VMO0F.30#4.?I_&(e`SJC8n@32":lg=bW"
%U9kcQm1OO'k.-r@D7(;:C4t?AbqB^'B'g>O![l=`4H(O&iUnJt2Hk<:BK(-$bT9HUWi<Am9*']@7NeEI;j16=d`8)SgI18\ffT6s
%.!/ei!>s3qV?'(M&#dL_)Sk/QFQ)AmRcA7m)V]"[gT&N%&YWSEc.NNc'N&X7!kL][e:j57mR,8X?9*Scg:6RSQnBNL':MMI,$fk^
%-;j$k9[dnI&tsAZ1]&RhcoKq8Dd'9n8uW'mk/];`n:/%MSXFc+-?r`H`O6]C[VGCTL$R@&q>PWqe`l&^k)BJ-kTJWf#:r/8GCU^2
%rM]fj;!=Z&mhJU5*E\oB2QgsUX0oY7Q1GZcpMcUE1A*Kq%4U`smX/[B*7B]4"TMh7Z[VXl\ZkX0c0MfAJSd9WD:Re#S@>GHN+d)_
%=:d^q'ZJ`.f_t3'#Y'r6]^$VpB"f(n],'UiTJP,3ma0?nZakgrePe]A8^FBBR=F,d+D#]Y5Lq&^n),;<)%JUSRK)$,^,%RkeI6As
%[FeL^gfA9@Oj[mS)a&R*?3A4+@<BTNC"Gc<qm*3$inR>FP0^`nd\eYm;$W^3g,uV4XrZ>qp76Q"7kgS<*[>Xpa#jFPOTh$Q\6Xj7
%bWJsJ]WG4E>7GOU[J=CBB9=Xe@f&>XF-aBMW;pJDG2'-0-`TX6o+>>54O[]!=BkKnbh?Y3/93c`[A+\CcagN1"Bf!%o*@Zu8k[>L
%,J`o?g(UM!quH&(k2s4CjDD:EgM2DrWm*10U*>Y@0<'C.Gj9O2o'A/Q^2htj\iBld,eSa9C"lf`Zl)08@FJ(\n7](pdIBQQDJg,]
%F)M`lXZ*+1bl^5a6d<X(#7r/Us1JHgDEFAVH*4#h>HGfP)W.u<ngZo>0hUnPXbgur;9`e!K5l_<EPf-4N+nO(Ed/j`VkOt9F\Y1>
%`%pfHmG9+InE<V8mH6C0l.k#U!)8B@7ptGdAKClB"2V]5K%i0O1H3Y1,]AUkfN&+0<_\%*if+dAj=&H<<aV'6>4a="n\;-'qQ^s#
%@+*q>;@Z,io3MHBD\6#p=4#:Lga5>MhIc`fcD_<2@fRRThW6QqGR(f<^)4]R&p39u\X;DoYnl)/I+t[?0+sr+KH8C<mGoP2O'4`4
%]OZ(K.X>ig,+!C&55*$Z^]Kou0T=,cDa<($hm1!.l]*95NsM;'RmrK9LWQ.mO<b$C*^FCJOn-*d\6WZ,F7WY]n[;V\D)&hCe`<'b
%DM3k^KoCf^V^S*mXPb\DDp2f/<:TodG_L?I\fIB:>Vs(!G/Hh=9F*]C.ds@/)\'9eZZuO!0N@(H!9J`R56d4<.HJX`"8Dn_gW[o`
%294Hd27D$@[oJo),XP&]"&r58VqY.Wc4F.I/P>7b<DOK6#c;Bs]7((f_#=U?Q.r'&LOccg;7a;4K$Kq3r;62+@lj.@cEp&bkJ&Sd
%_c>RRs)st1bfk,c_qSoX[abAe<L\IpV;#U%0o?"3.Vif6.JdH+mkkhW\Bi5Jc*11ZD3%qu9rlG(d:AOC`5eUE]4C<Wfee61=\irT
%"qXX"1S+ftNif>(iG&A%CJ8AYSuXm.<i`L-7_#SSr$%]RC(X*@TXO&7#sq+k?"8(,+hjp$\YDN8H`9ckg_H;ZBtZg$Y:!NBj>MGN
%eCho*6L$D?iF'Aj?-J`4,gg`&E.>LhS=+Z*VK]X)_fd'U[VG8h"@nC&il#@R;RL\8]D@\[Fl%<fJrV)Xho[PLO=pn^JW4)tmtS5.
%Bc0\B=ES\SkaX]'g%Q-63jW`7Gl4-22X)7SI`;?SHIA4LkA#UXeP^4a!H+qr^IWlO>)a.+;4?,0E5jH>'3U3GX&^^3i^i$)Znm*O
%Qn`E<[_T<jf%MI"EZo0f[u&JB[s8)^*";X"JnEch*]:Be5l?l8%H)CI3]$A4c1/5GNGUPgD:Rbbl.Q-`5gi250_t_+"'8'Wil\Fm
%9qO9T-0%//m#!5B'su)C[O^9_PNePE(S^VES$mb5D&ts^K2ai?T\2B6a)gqT+O)UYG6`*!#b@B/Y,6GJ/]P4;i3mCl&#X9RK<u=Q
%EN88'*4")G!S=#YI$N5E.U)SgmY\!+kT<p5>mK9AK]1XI7aE+2VJi)RRn)E2&u`hV@.WQQ[Bttp#'G<;!-_)jKph+=NjmPRCo[SS
%X#>09q_JAigEO-B@cOI-W9LanlMaIE?r00L0>%S(KEmCfq-)9a<ZV0Q&f.co-_g<US"uX&Rg7:SXd[Q\E8PL"&RG8>^k%6^Y=<KC
%Ee!66\XMSrYo;A3JD7*G02g,XM1h4NN7ac_?&=8A??-q3c*F-ZJa8hQC+EQ9;&#GlleN#DD8pME?&74^D<ffb[s8,D<%u%X7KA)o
%=&'uZP`U)ZE4ZOL\Tt>)H!;l@[Mn,5C@d@:.(*OcH$6_.8Rd\4J-`JJo\%`Z@>fdtE8B)c:Ls)'gVP!Le&8Uf@'O$op%CeY\[Q8U
%Xgd(o^Q/u&Dm<u0JR\h&aq_OIi!1Ncc.kE_PJ"#`@p=q3>IF9<L15`.*t40t>acZ#LJ4kt[K.),@\ugO96I`aM-NQ7k"+REoQ-du
%3;5<A!)\1oc3),fqi5)+5X#gk<Wi*tG2g`iF#CqkC,*0I!4PstpS_B46O<U.!S@*n!$ct8C?#PLCrCpGpIS1nZ;m-KLo5YLb<$Fa
%bLe&$,V'`]D:GaS+t<XmXd^X>E,;LMTD&muk6TD\qLbCEet9T&!Ws):(n_R4Ts/X&6>bZ2-mJR.<U8TiQd;CRB(/WU`d*(9q]Q,s
%g5')(]&Y-[q]WoEXFtQtf=$6g-m?R-.OUmsT[4D*.0R2;LjjF*BCQ8WE&'dt7)__G\$$.HOcelF`L^p:Ja?UraYenG`&M;>_ZY]1
%)U9cSr..[CPu$mf^dLX,G/RasPLh$"7_V2mHVP4B!_U=aHst&&[?2RW=cn,jJrbN;rjOM.0EBj`<N>`:l[BJ.f;7-lUZXFX)orO7
%VH="48sdK)`c7n:B'pgL)'EFV\ql.H39pT,N!kA,#g>H68a2a*+r&EeWnClDJDbJ`iCXCf$'!r+=pg.FRV33UhIN("PsF"SU6lU1
%`(NHPGTlRB:^P?#93en7lBc55AU6=F67OlAaV>7q#Nu;Ra(t</600alEp3$jZ&HspJJtU'Wn13e3%EKK'=som=gDelkMA<H$a9H#
%KO@6O"HFY#$8CQRfT]_9!#ooE'Q=q=L.#K!m=9n@`KL$Y/;bWg+Dm5N"&p<o7HX]%%im2^7#IS<5"l?D\!R*/?a'%J7IJVq)]*59
%?sh=-5jYuLZ)2*9I64NE(SbJ73AK!W.V2r:iA4b?+9c1GO*-0*Z0^f!,:Wf:?'.#tF0EO*$EY(`Z.<!=3/c$Q\@=k<.=B2j:U7Qn
%k,ZR1p;M1?S9L?<rHU']f"^S(`L^E&r:,=4AU/sQU2rQ;7YJ/u5si3kT/*7?fqid;1`]O"M0+2BRh#sMd7f4C8k"h9*b0h!:cnO&
%WKXs$hK*$[o8"hn_eEbTd03\lq-^rh9(;X>p?u%.0?cP^e%;`J@9X1Z>IF7(nh`,F0[#A`9m0S^V;a"#(pCpsZLR&S6%#^O4LjI/
%Plk-YDMT<M\oo]3Lt^6nEdI.j*WaFK.'pr"&?XjYKg#Pb5H&k9)St6mHK""sRcJ=n*8>4]gT&N%Z1*mI='X-77ogbCIU-M!85[>`
%T[n7O2kgdg!Q@0%JaP<7;r_OHlmT9.IVogmF(b(EP/Q#!"7U/e"jhH15dRYgL4cZ6E4ZCH\Tt@?G[%;i[Mn,5C@c4/#[)inhM-uI
%>=Sa"8>PZb"Kq%@`-%H[33c'\Y@q*->A%s)\W3Y/1^Sm#6Blre&tqs2o)MUY[e%'@!9"?T(j?D(Ik1K:EA`:$7Hht?F#D"mC,NHM
%#e*g'?R.s4nRgb3dMaM@["7_BKTN6d9r`Or/$9qJ@QJl?Sor#[)Dl>CD_M9@lU:'0ga5:ac=Z4`?FkJk*[Tr+/Zpn%jR(kGmdCp_
%$S0QRjDM#0fN,oE<c.iC*lafRA-8cc<_U=B'k@F1Ohlsr3b\%5..dp]k6k6ZY_Z=0U_:16'`Yk_p3iAYg;R>ZB'sAF]^:=]d![V9
%%e.u#E@VQO9@e#?:<oq'<ti3JQ=*o+Dd0XF74Op2&6?;!US;S?O)"L%$8bM+LP>V.g^iXRm*HL7b964KjS!b,@W+&NlTss*IW!X1
%:7]Z-QY*UJ<m0GcYtic'%fVU(Tpbfdrbn-r1GdA-$u`2SfN&+0<c*;J"JlV%NMY&W`hkW"IN9K#9&GuNdHF?3gjpsUKbFH[SJ>hr
%0t)oDp"V\ZkDjGe4QkS`&[^\P14+s&UP)9(N;tUXp>#cI!5ikik.-r@D7(;:C4P'=bqDuj%'$!^WYH[k*$]Dhp]+5ZZR=;ID[LXt
%8T]s*==1:bP,Lpb=Q[tBZ_?uEW#a]kp76Q"8)OBD>ilV@7)E_=f.d?>]QI^n0nS/6kfh:m29FTf3O[HD[oJo),X`P6$jKotlFqf'
%&ii-(71_?<,U#,N)FA-c]iXr@69-]ellD5gBG,jL(S^VERgbj7Rg/r;Q-S\Z!/*nAX*,S8OZEU5%H)CA3]$A4:%>YqN,:GfD:RcK
%KRVf$jH0"^SlW5pb(*qR[1eu;BkV,-:mh^JcK!96.mc=e=YYPPH/)gE[7-J@(SZ(oS'l`QD<;qdFNWr6J1M3`o)R\dkk;i%!4V8g
%-YAs.);Z,ZZ)pL)/K4O2SI&e:TEWPQ%4uC2V_JgsP?i[6m8&TC?#.uTAj=41MH].J^"o1-67\*s5I[UckME':i-D9m]"a(Gmi_GT
%!8ng[Wq^$'[u8S#S*+OH\&DfmMt(Yb(;ECjJjf=jct#H<V^S*=#,5EpeP8h\E^LYD&0!?<0MU:CY+o\ND$'S26I_$5PFuu8o*>Dh
%OQ1$XW/7Yo)uBop]U-u&n\kcO(SNWDcda:ZX6%u7,MZ=:IZY0blc2Y,T9p<9*`.D"Du9dtAnHPH.BZb_`H:/J7$Z7O\jbh5)Fp8o
%n4k%*Nc#N)F)UXUg0BEYlokJ(TM"e]S1MI&,Ih#j3cjmt:%G_rNbpYjD:RbbC#+[*%0j08O+=A<,h86=W*%lG7!S>:2<[)E"]1r!
%<hS`6)Fo]g@QtolDJmq6c^df.\'AaTXR?#,AjgDgg!5)/OHoS8^KlB8bWJr_]WKao>7GOU[J>U,\\1,UL^!')'Y$)lCrASQ\5Q=%
%@hGgjFQA=`#Hbk?m>C\q,0\XH;7a;4jZ[lHo<3;g-N9,6THS27s3.S.HME*lgC[^dbWH[T]WG4D>7GLT[.lK`<QHS2.eW%r-BL'T
%PJKtIBDrLuPZX4[+b"<Yqad=+C<5mE.GGdM-sBYI7-WekiAl*?Z&b!XmQ01W8*)RMGT?(fSF0qq(B!'m/Y0FtY%Do_/B,%7hmR:i
%Mf^6q2C!k9@t4&8[5rh4<n%;P7t?glhktD#K3,:k<YA]bql\T>D'G\*T4ls)D5u$`Z\e][,dMRT59aGnSbP]H79e[0s*"2u1\4kr
%n?uMYD)K+Ge`N3dC_\,m?neGVjHI",?$2NprCNeg+O:f+5V(bB$T;/8.\a-DS#E\sWW;cX<ZU"0ZH^)-,<uJWT14p3q5h<O@g$WL
%Ju[b0&c;WmD<BukRcJ=n*8>4]gT&LO&g@JJj*ddZ=OQa%doNn[/2]7O9FYM8*D+@t/)^;>n5N*jarOF@BX0LZ01>3j2AnRM2@mS^
%43Wq7!0,[3E&#B59"V]%I!5S"le?&aSuX<s<f=5b#.Uehr57dR3'Wp8#o<-0pt<B%(F)nY(G]_T?]kLOG3FhA:dcn83SQFG]h)>/
%(S^VES'lEHD&tsYWg.i0nXD<]T*>:J\uXeJ!SjhtT9smVAp@N3`O6]A[V0ZIZp-qAHO(7T-l/sHJQQ_MEGJUU8`5C4_N(E&U#T1,
%,h[6J1j@Ka2bEnVgApDcDA1K?Dpn\_\tf&L!-2#Y"H[44!6k/>n1Oub]9o2#H*6:S>:de&(uMc:nV\qcTEM%>A];8Lh+bf0r2Y"$
%+*hI)M[[(W(o%W]&UD,k<1)%[1laJ`OrQ,CmH?G73qkOn^e(6TB`sFKA/3ng(dS1M=F,/o[qfSgDP!n#hH%h)X[]h&gAE].Yng_t
%2$T*e0eJFT;NWVKpW&V(]dNucUK4$K/4*u(kT`f<Dpo5B@crbhZk2EWjq37i;f!P,SMJ0+"D5^h>E%JFfSD=Bcda:ZX6%u7,MZ=:
%IZY2\efsBbehgrX8P44Z6P^L7L1@@*.>nS*OZ)8FLMLf_%QReWDJg,]F)Nl7H-"suq%$C6Q]^*OA8j-q^KnB7oC?-\n?uMXD)K%E
%e`K"Ef:NpgUDkqRneP.mFYYMK6Qi*hi>lj@[@0Lls54DqC[dBoI!&*+3ldW3([IOOQ1[t[0GG+L%B>r+(3q#'e`<hufbJu`,*5D*
%",iOAUma1k,.Zf4I&)L?KSt:m!@n0Zg=B8&ceo-8rY\@12,Y3sN;rhurnU,)8,Uqlr@\(01-Z,-%M?/jDK'BI1t#tgEN]l$Z_NZ8
%g]S>_Zl$c'jqkFGg<NoAp0X.N(C>R]em;/iOT5-Qs"VUFhu<>1Df>[;q="@V?iKm$m;hq&`R)Y/YM];^s3H2oB/Di2*tRG^c3PUu
%`*`UuLsmIk&ITHH70La+UT:@Q#i+fd(d,Z/)co,^0Ns7;eafFp;$kMU;Kf?(33N>=d7D[L8$SJ@b_A&-E2D'U38mQNA"-/u`Vnjk
%6G_$qf,>Os"pKU!OItZ?Lob"sP%#l)(.4/c'i]eM[e6S>W*@:>GpR%?gWcN"B&D[Y"4aipKN,(86F1c*o#;@i#ttAVSh-<[FXi(Y
%Q\=Er:(*kp60_NPTaE@-f4&:"7GcfA6B-(EK1_e%$a[6a8i(*N!<Bk3ZDKh5!*EouA_ZLNH.Rk/;3@M`grSMZ>#ZQ38\4,(I@kot
%lUP1)96&*[S@I/=M,Wd3jSL>G;)p$<:?&(0q1)"hfP/_L?&+<$!$o[&+NZICXZZS2#ugYsCClEk6uVm,j1)Q6gJKBb(UR6Gi!L4F
%'&]Me[6q]9KQ`\bLZi03fq<@%EgKoB:S\9bfe0Tm[7uC'=EfV0(PrmN%h[L%Meie<OnE!jb:^)<&D=:GCqh:u1g["j)a3@R9Ic-k
%r<Z@`_6&k3mI2I'7)VioqBWou#q*sZg)]Z'Gn43;die**GBp[0E9AkBm:9<iAXE/>eYUc+R^[-)D&RBBq!&H-\Eg>Q+V3(B]kJ`B
%pW>ptSpq'r<sb,"\=_k0EP.9oc$ku1\CgJXC\t!bO;%cF'S,-'mY'm6[s6j\GQ&t$T\1&KAu)D0`_/>qW%g`;3\BZ*.j-Q&(YoCP
%Yu27<[RTqkbQNe2L15[Z_sQYVK+&hJWL7$I!OVV5?.p!C]h4<%7R`"N2_$;@FK/O!r3g?Z+fKFZTn13%#Ye@%:csh]5RP?34f&#Z
%mCOD%Z6YEH)s":0[4o4]dt,GDMq7u1!8mpGp(Ig$U[eJ=S7a>]i[h<+91dmM9^h"g\sER?K.lZE.T5u,J,D5V^2*W%nV54<5M5t6
%D5<c(T+sY.rhliH(,.PMf;@0Cl5-QSc4u&/DaJ;^kCm);_5\9u1:aFWn"<)bFMM-?m>K""f"#Mb<`V&6pID+7kVBKa!_<?i'1pG8
%'N.j:SZHJ2-1qIPP'-NdFqjFoXH`1+nWCQjlt38D9Het.1$#g5[:,dh2AQ8D0&d&G:tG9Fq@!]>&3)-^dT$B1OR^KihMtT7gb0-<
%Ps,OC&2T.AlftrD_IBagL0m#42jdHmb89J/W5bnBY7-rT(hpV%RP*4k/W3kc@VVBFpfDm^iRKAqi\lmUh>:hf]i$NQo6Vmd87-nd
%_!6)`9O,-lG2fFeTn?&m):n'm0a3-ZSHq,Z"RK6(V^pEfk]3VV"(`HWSiM:Vm$u(>SV-$'/S=W1l^)>E>iB#-73#.Ba6VKAQ#cq4
%Adef<-ok1/q\Utbn[<bJXf&)M2U>+]\HGW?]]5TAL$*0^if'31LIffs(pZ_g\+&Z.Upe[*j:Fpo%<ip[:jD8V8D&VS-=eA%5.BoO
%Zfh@PkS?Q/Vif%G@jFt#\p%-TTb)C7*VVON7l`1'(=_<J&O_p'78+f,A5\lIL6PW4A<L?Z(;]I0Pf-u$'rC/_NsRN`$a<Jnao.^U
%<)"q#Aago,p7B_BM&hDsG9t?UC7EpD/9mkRdKW+]`m%3bMMMr=)nHA)%Rn_#\0NCf]`kI9BheBH5t>XR+GKSMb>ANT]1&SRE(6PZ
%U*%2EU(S1i7.DdRI.DIgeqZ3LaSFk;HdgH;K!O_e.-0hP]Y!V\6_n/jWtgWgm\nHL(fV*#bMi\63\e_tnK.\*.`@@!frcS2J+a7:
%U3eXCM/bgTYgW_XWU5g;TiLT6KNApmnNiC^;Q/N^)>6qb76k\Ln\5']\%nod9\HlC:a*/3*<C^>B)#Y1<WEgaNPUV6eRo!pG\2Om
%B]kr6f@Aeth'5*VI?>>9dj`?bnOY7q&\/=dFT@fKZN)GuXmfLcM*GgGT=^mNMITBrEOHFYk7PJEbnNear&,,3F&km]Z;"0,-Lt8q
%Wol7Z(rsVAGee[e;Th`6a[gk^[,));p5rqk[*"i.n4!BUFbkOuNC',%DE`UG&/ZLh\q(0El^cBd$HbWKGTd[o&sCk>`"a#]6n3bN
%6#+E1'b]IkX\">uoKm:38*k0s&6,e`d,@YSF0#CGZSVp&\99OAi[)YQInKc)rjG?_0rZV=DJl7b.6V&BJkhKt?]jO'j]($HDeS#A
%kLosdY6LP4i4)c12JkfnKnYhHA9@7.#nhs"C8uMqq'88r"qE"Q2M!-m/!3(;*,K0047=g:\HIqWc7pJ@5pU8+\.d0p8G"skF294T
%1rb+LpaNj-->OE&2#:CW<CS/FWYU6cK5RBD3B6.k-JZedHbF-W7)B@#i3HlJGNg70eIB<^,,O'aC=>)8:p7!=Wmb1.,568Eil"&*
%'iQm$s-HVr.As`g=g8-%V>#Pj.,a'W7N-+Hn%o7GeW+0l7@Ufo@+Gc3GjQ_p_Z7&,;iAdeJ_s-^VO6=QWA]^2Uu&W51Z(di#q\Wq
%m@:$\3Bd\[VN2KDA5ha+c:JfGjRj$iBPl&q`giqi0oV\;d>OLb_94<R*^`1tK\NG&9]?B0DE5EROMVIOHS<jSFqA0:K-gh4Q-,e:
%T9Gh)'[j\cp8[.1aX#k\S)?G*+VU=O+MO8$o;=5?fL98@nE31[=6@/EQZ[cEJm&@EI8H3;U7+>?"p,9te[$ho_3p(CqkUecnpt+K
%CXK&.SsIpVSS%Za2!oZ^!ep)><$h%\N;E6%GY$d[X&bBP<G]]30WDkjStemI&]t8^ZrG3nTE?sgQC'___LiLZVX]`*?VcZY)4B!d
%P?(,!&[Sg7i<e-CCp!Yt%fBDA1;p?tG]L3ZH/(G"KN]N&j,t2"04(aNgM];?Y"SY^LjHAOl`H4s_g8f,OJR+OGX`tl%.PkN@Z8TQ
%EYYE$>CB_'ct.K7j#N9Ufkkj[Cb(Y(Y3dg9LZf^3\IGM%1Up8#o>u>O)3kO,j6?rDOb'tDe6.],Z=At#S7nh\[3l=R'M<e0FUd0X
%fl$[T5!=EEB2T[M470A_W;)d;kBp+#Q+H!MKUJT/U,1%&JdGnb#s-:VC[fK=0%4oh,(?2Q4PVarSJ!*h>2Td^=>#Mu"uhPZ4"a)U
%#'Q0'O+Y"CqG@]PhI<(M-L4YBT>-YrR[dV1MAH?4.W4m9)C#)>T]bi%!lq\sQ%<@?:rk&!<OZ`MW`A<WIY$t/Ll1NJ/]J?<W1&Y'
%%^XUM^^/ilFGdO8/W!;^$@e=oW[JT;OsKk=b:tY_B/,<;M-8!PFd83t5Q)iu="aC;D(?5BAGe>a+7gm99ik0'WH"IR_T*[HE8/\/
%n6?=LG/!Nl6>uM_M#*()2,43T:+^?N.00m/"&gL)F'hrp<@P#T#PmbF-M9!9MOlnUEdff;%+<t23V(gbZDhf*+>q^p5)H11jFc)U
%5ioUS<528(YBU`Kf4HCBH$;XI/:)qp4W2q_o.!tD+#HWCQWj^:iF5DL.G"Y9r?N1l(4^*I#s7bG(kWK\\-ctT1B`9mQ96IV'8Ic(
%@+V^1]#9k=VX3hY=6nu(ZF,CqC._H0$#?NnF+oc:mtVf@a#/BX1p7r9>,s,NXIT';piKPjem$dk'\#09;@sr6[>"Hk$0%M)XBP"#
%s,k3K4>ouO4lm*0L8GuCl+KQf2+>C)faRhp8X^ZmOc8kROs09'?p3*6]Pq*s@AHjagFXCjeM`tgV23julki`q2O-i_nI`W/@-R?#
%qpbf)Q35s/r,9c%YLiD8YW`_D$@AAtCQ),o;X"RmPED;FJ.#Y5g2!"50V2auWY_K5mUg?De-nU@fX>P$>D^u5S9rbOiEQU0;==mq
%N&G+7r=%aEW;1b^>*adBZNFPE$VDq#DtS3<#,"jec,_EAO4CHU.qTkc,MKL.+]ci4^@pDpX-b)l<UIl0;Ve@D-]po:8[4)5BrrQ9
%b?Hi1iVG_I9K@I&qV,&@]f4on79mc0b\dN944)c[qc*-#8JDW8MZ'aI1WVF8'<-?edC"]oM,#MT`h41>"\PFf"@F62s+1TScErcO
%J0fTh7]f\1Hq'dfnn2*UhV.FK>&<FNF]rN)ikQ@iYDNEETND71hp,oI:BK>-n\dSI]G]EDPcDe0LfheU;:*:%8$O6WJI?^C5p=,[
%#"8@8nK+3NZ%?DW.s';2Zrib;"XnNgO"%%np1<>3*XmE(9LW;rjR&Cq+dSuWMEDBkrEB"",@TiBG%/-k(UUII\,QO_`;f7tZEaGZ
%G$Fi^rhhZNs4"-5p<WGVN:L?(ln@aYp.$n*TD3@%-lVn)5(\RK^K2;Y.S]J`s7Uri%3KjD[K$!<;R9(9NgWAa>cd@CKU`o!jdMf*
%I`W>W0UY^drVO@C@H5>(o"`p@INIl/9Dr)%%JZ;g/tXJ9.NC[,lae4sFS]#Z#ib)QMegJ*(l"Bro2(sHD)qbcb,0)[*'9b,I:jm/
%#EU,e:':1]^]!Qh$@ag@@_V+;EGW(=&Nb)rfsXToCVL9uNDmP_j!"CM`/(nB`bP!HiY1uo,Mkch!fUe(TJge,)rfN5G(8^8:'1mq
%^<Oi@@b</b`,Ml(gk=I$`64lVUE'n_SfR0>I5CR_*+kNLrW'EHBI\9)/OAF&Pk3RuHSd?bO,I)/Pg?d)9K3k9$>^ZTkRT8^k$Rr%
%6qtSY'j]55)j+1l$aL2Z%P->L#XAHW,p%K^#bm.o,tU?j@<!<:K4oY#6GBb@JSYu0W4(9u5:I$?AZS<^qBN.:a?s/W#p=n_+=Vkm
%c_rT$*YFl/?p1:eE:o[TAVRQ,,F'6fVH[%'aLm,+OU.-N@h3mLcbt!OrZW&[']`[rho)scp+CN_<qd`!glX#;(j)f5$kO`CT[=m)
%gG4EjnHGlF*q7a65p/3"L)2HJ046c!Lld]fjBNkj_\l<!n7^,mo`^J&I-l]b_a<@_TJaeQ5WQ-o7n"O&.In6J:5`)IUi^.4%dqHZ
%9%JI0[?9@]2M)]oiV<_B&<Ail$E#-NUt8't^Sjnf+62'oH3WcobI,aI[=5dW9kSlr5<bnK)Pr\AjjT;NrSse8>93>&`c%@"am)Bo
%Ad]Y&rT2M:(!`F,mKal+l!)a&[\lpYR0U[h"PIq8,[;s]>71]I&dihSk#&Mo1;pWWRd$/)fKCrGp)O/eXq]R^rDD)hpnl`j_/phc
%FY``*N`.3'.<pb$j#Cj!l[fW0;*33X)c&'+(PML_W]71Em@*G>$W=uIU=^YT"YcCsZ2NPR`VLHl\i]D/m)8F',eDqp&ma11#4NlW
%`JHVh;(Yq,Gg5?n/]4o6Z.<O(JRYDRcka.pR\h3m5>g()U#\HU@DunV#g(jSGNZ8Hp9FIBq'o0'Wr#p50R4g[PR@-j@O#-\"0;"J
%@7$nKs!2ou$EE*j7'/k*+l_I6':&'gO"HkiK@XF7oGd%Rnu1Xe]rEJ\I]"#j&3D7g/>sP*J8I'!=K3FQpA>X6VW>.a[M9E/[:Q&5
%fIqXJkOeDCHX3c:(T[3ENg-QA*?r5VNZFuWaP+f4m#!p69HW;B7ds4q^R+O0%jeL)T-qal*5=ql-gJhMHMNen#P4jJaJm^^^=B7U
%o=#!RMr%c(%>A_*F0h`S$tB2oCBF8&m5m*)\M.K"&(>J\Tj'`\g1*36*OYWV`%u8$L')eq+,92[$lOiolCm>O7N>o8Np&iBX[KlE
%@Vsl%f1%S&5MVU"T;0c0Mg?9q64iQ-,F]U+/u8O"k"u\!htW5\:BQ9,[!%3<"!uQ?*"S>\+=D*_!#`7sS.G!P6MXW<6u0Cp6.<T/
%n;hZfn*s;P[^-3E[S&<\m!2N.'6dJ]?jG`]GTP@Z\$K@:%<#+25YeOeW;KMLAmGLiJVADWQiU0=\4IN[agj98MFQ'.T]aN[=c(ag
%#:T6-eXYiiohJ8eJch/T%rQfK$"X7Mn^)/S+M_>0$J!6S6_bq1jtX\2X-97lfOW@664jG1&,A/(2C:IT&OVOJk!i3[)hh0Z@ntf:
%fP4_GThoR7<h3Ep7@c:BmO;>?gomK\RRQ9t*/BC^n68HY;&aQ1-hLmo43U@l/TjYOP6K,gd,EiZ'gsF7_2m7[:cPR!<X@!_P0:(k
%@Y\(8d6<loZ''a[oMkJI]Rl>>!DauEY-nH0>Lu+CN.Vg$R"uV?A;ro7V'lAh1du@Zl%G]Q@155`NK;7[d)]Va'i@(E!^J/V`mjth
%=:O<&NA^!#@Jt(h^0ugWM2^TOPShm^7;SW+HJgVXSdhc*K]XP&/@5_aqMLM?)$$FE2/4#-U^?Wh_HKZt`'g3_[-\J&.j2505k*I7
%41^-?OT]HC+sq_jR"up,qj=NeUX5;iQHNK`8"5hq8Pnri>]:sqh[I\nUtX;%>R3ASY>uEGiOi?^,r14o_Ca+=0J$6oH>8rdb<(PQ
%S/0:01$F@S42-jTEh0VA=f_VtEg#aq+scAt,4\HK3tWWiP4PF-"]2WIp/M-ND=*/[c)Pl+(\bB>5u3;'oZ5ZSfSf'&+_++M<@Gs+
%DGq13mTnuZ?BE+"X3@N>%#[EAX\##n-jM)MVN?HV$_ME[:ucMNn.[<<17(CUoK]!Xh!4%:cIj$&.u1&2!V2b:^??D',/@E;6dSHL
%e8Pauab?:o'iP8>Eqn9f<[$I_D:L&)n7,ZG]@;_3HL*0:"NK)>>M14pl*7EC@W5Tnp6>g*N:j)9:u/DJ+m9)7FW,OZ$@\PRYMN>H
%6GVc4"n5.oQ5YT"cEORd3$<sHje[(K]X*PV/a&\T7c@8`G*\7g+iDU2o%1O\;#OU]5DPe`b'A!^=:W;X_RQk4LZ\MKA$s(!ZLc'C
%N/s?<Lo;9E3W%fa"cpDYD(?!P8]mGr6iqZSq[+8H:OgF!_JXo8C>N#e!\3A]jku.<[hYW^,kn9V/&Z-/3lS>*ORB;rhm'@%WgUkT
%V#US7^4H_dG/CMfYl.sc:AYCV2eLPbn<J.iQcl1QnZK/_1QZg;M+FIWg/X-I$<Y/T=#ET>7+niG0[-WLhS-%,P%Wrl=#H_3eK)7/
%?aY<'CoTr1lDQ^$Psks^[e$AJKJ`(8fMsn,&_(ph.S-"n!4u`B=Wg1u3:A=A0#hT`.PMdDPP3P]apZ5No0d]'S@4]L.V-H*Ee52e
%Cb(;)FZ44hTYf?/dK4t^"?#u,=831;IdARom'q=F+m_20N^'red3QT-ZV,bgW!4G,4J-g4/#8]B5Wn/f)/pKSCQ;XImAot]"I`FV
%mAhB(n9-"%^c;l$MGA1Rm]/7m.e>ag.i88t994LTB3.1YJbTQq&AuMn#^4LkNTC:#@bt4sl'lQFCoesR5hQu4(>t2DBjX<N,9HRo
%?H5tb0.2,^S,%5uZnL9;8E>Y@A!la6-HmD:ktPJZD;A=H$@]@b&3>QY\9VF)pRn,-5iX/ZFP'Z$k'P`^*cN@_['>5LR!E0b)5(j&
%@:KJcJ3GklJ;=-"#@d]^_X=\8JFF1jf`2!<]j$OEa`SX#$dO7#8*U(3N;LS4A-jpqPl)Y.K(VOYbqWV!aoi"@_#F'Uelk-j,;7U'
%dp5+"PUJeaipOnc12]0sm)rRZf13/Pf'DiG[\%nZ3L6ii2AW!9KV!Z)<]HQBNTIa=q=]e:N#pr$ll4,JV)95N(501*D]?l"+YN.$
%b;'%qYcWY9:e?FZ`U(IG>(Osa:%iFX_Se!tf!;K@[hcl$?X^ZWZ*+7/RuH1`OT!th.^;bHod"VOHsA\YCS^WHKoH(N`3QM>o"Wdn
%Ab#K3Xodr_LLIUX.^\2SDn?>hi^0i\$Gt5f['j6DiK2T4=#ls,/\B.3p>EH]:n'-4f<VGRc0SN,%so"5Q'YAFR5YjrBE_PM#kJQ2
%:3r#LDnKnd/>AA?;mEL<T/IFIhol2.DlNg,Lq%9$TR4tiWIjX5NnZ$5J)e&@E71YuDQAT"YHQ\1,),K->QGqoGg<a7jUaIZX["^0
%q8RR$IcdUr6@KW"efkOFe9j7_RJjnH(#3Cl.,<tmhR2]F$4t&(&5JMp4QEqEme:+0$*PBsKU3)NDP*un<#U(MX6@K5\^)#'P"rOu
%2HQ!UE]M>YX8$]ubZ0V]:-"81nKC)$8+#L5g_TI.*?DUl24cHK+^NNSj#0P%/WSSe]#B;90h/Ho!<_ef"U!^pYq46/cDfX*^uutC
%I]tBe5#/#Fn8pMU3\\F&/7HqWn?phhZItAS>4#;G4h%B.34N[^Q0U2=5PMlIFF`Dc.V"IIE8"B)gj<g>pD#XuFU6<-.4U6:lmlIF
%fQD8i<b#QI::FLdg9AG)fi<l?aerF0Ai\hUWK<-ClFNt#gs4*?1(8]nVQ(TW_S3"LiRFq21gZ=dY!_pV9\f\)F)I.N5!8lcU1S6n
%>h31*ITgXg+H"[Z?G6Pog9!Y?_cg;4W57'P*^U;C(bQt2dmo0).^CG6\[?'HYdTri4!U[Pd]CQf:(^GFiKhtV"/s!dgX\RkW)63"
%$)#;C!G8ET$_WN>dt/=H.=g^HVeuN7KQn2/h#jTMac=S&-O:t1"VRkA,E*Q%oaK[F#_SACXQbQV=tQc(O?2N4,"h@8aq2`j_"K+V
%HO]r17Yn7!jD2!q-7"!K>i,[n0/;rDjqjYaj[tq(#M$#/pIfo5l&>u:F_,He>2qkX<e),0@[YeLp9e)OoIQUps1s$Y_qG?e4]2^_
%i:e`8;$FD@"i#+TUh'bF;1(YZ`-"<n%/IEY61n@&EKCh,"3^DIfXHS(QIpBbTU%g]^5!KcVHLt"2B[GXSP+3fY[=0pQXKc]@Jrh#
%J-c`h!nTPd]6&[q[POuMF&AT4-qT`eN)U!n]`;+dl,/VER^,(X!#>^M!Dnhr:GL^OS`1.b+;n6Ab$c8->Ci`H25CSUZ#s!aVJu:/
%T#E3+]'Gra<6scs9r4o5l6dJ9,=,+&S:WS9,$K9Y%`Kih!_@e-Yp5BtPunENkE,3E$o&=2&4$V*jD2=L:JY=OMHR>"Sr+H]<VREX
%Ur%X(YO\/eKt5i@,=BGc<b`;;LRHIc=+F3[^NUaH>6P(F!pB[rY)2rM-j8,j;<$,=(.1AaWh9_B$NsZ=^/7]1*HKi$PmJUB&"YB'
%-s=95VqVJfMGdRh>U.J#m>2t,2us0P%ZmJ[n6qh6^`4jU=j\Jri/XX<*-kNW)A%/1[UkUU@!mLTKOOos!ojA&#jdu1US"Te"NL^i
%.P9,i)sBG<6mk=Y]2PF!;$]hp.)EC\'%CMR_2_?J'L=qk[cZ>]NDO;lYUF6tU5oc(=ErW8$+3&uC.O,_]"L?^CEJ,@33qa.(&hgS
%RN\WFQE8N-\MPgFKHH.s@4-YU['O/5-.M-9/q]rUamgdfAWY[5-HZXdmhXX'>od>Pe=#OGqV$@H9AoA<ngVDXQb7^rij(P:<0!G*
%\(Z?B+2[Qe"iMm>Bo*gY5XA`1&Ph<3%Q.:P[u%M,L)\7*?O7^rR2ifFjN[)i;QQ.4C^NTGcV<:6JF,h1pAQ!I"`2?pI*,1agrnsl
%WmB?73"ndQ\d_K\Pp[3<UY2RJ5<VCKRVL#-=Vcqh!8+)6X1O8ZWp<os:_61VY,_giVC[[dPFU/*\EQs4-dWZh]-U&a>W__o%uRQn
%\?<JFAKAj;gbCd$KmXBsGQMghE"ZA2A_)u6O9)E=XVOQD;jc/fNJor6->/dePD,:;6R!9matZGfoKfo[;"^4iW!P6A7@o'/>VQ@f
%XDl`e.G3&-WU4YL&NghH`/s+!LKp]Lf=puqI81eQ<'C:D<m4N-#[%F^Pi0\S$#^s:VWLG\VI7DD*d7iV@gP`I,g9Z$3WgS$c'Dns
%_m$HuLG#EC=9'!dP;K#N`7@Ys1o8^+1ku+O!mEQcq%TbhD"oXG&a,OfNR^o9lkaTXGmfAn`nNcg9'h1)>Ih`R+9Q5_-f/ElW%7Z9
%.ak56<\2Z-]a+XXF-H[^m3l\c,*B*%=KV:K6Lr-dKEUk_U9?iE!cX6G!8p9`g7>cXe+?!,Un`U5N0Qu%NhO77<<[##&l)o,L_sip
%(#46l&)b)b(>L3N'YYiB&$\UJGb:VmKb1-3;PnEN2*.kHTD=F9NmCbML/a-rXO2HB9@`=4$Blb2TeR&Q19#G/HTU>!m'F9BHZq>S
%aPN5Z+M!6=VM/h7CJtFY8iej6U^UmRD)qSI1U6u0dPfJ:V28/Pa0o9$&]_=uN!$*>&ucr'627m"j88\+:BnNJQ'^,Y7a3Y3E;NP:
%>nPFp7hc\rlY;qfBf[h:AshP%Z+D"CNEqI8]0TR&Mm>&Uk=$OOQ,bM'b6`#c0")D*h-_4=@Ajik3:TPU!HRSe0BiJI!Htepr^nFU
%Sh\>@TI73'&Cil$047O%EIttY19f=RYOaPUFBs#o-jtfYp3cV[X`WOf9pgcaLKgYG<t],$%MHX6M44JFn>oCeP+E%[QCU0DB+Jr;
%c4ejWlSKcl\r`^,*4F]"HMm$l\bg-'A?<;f%)A@SMm%&@@%@C/V7bK6b:Dc-I\gM`%ee_f^>+.QbKUm<gqE7>%OLAO&;bo(mV;:s
%#Yc(GlE@;V2\ZY"Y9^k:d)Lo6M'/3$\cV[M$Uco]Vt9`PSaX)#`[4I6cr]Hr;;@tUC+.?S$,j&bd#Kd`_8d[l_:'N-)8n38TJ\`q
%!@O"?H8HuXUdqY1&8CG*map?5LQNB`%W;?9k3H6"==5<Uo$KXkhYCJ^ln[M.+8^*Q#qpM?pi?,SgJ.CEWun+VlZn#k$6m;fL/SB&
%Dp[\]T7X&1O!&Qg'U't]Opcm,B;0BP?ho//^B$PiPMCi(T[.bG@1j^(-NdC8+H.GXj/?GkYW>)0/O!L`VQ^N6'3_R'+;t,,%'$ZT
%b51tpn$i"C==a2Q:ctq"pL$``"&.oKHZ4AoH`d4hB]":)bKUj9gl::9h(.C_FSR];jA1jTs)k[0'c_^)aMZj<@R(LpN6;kH%oLZi
%C2b0=\EKTVJ=2;jc?ktP:GB2Inn-gnc:g'F^L>n>+$dfoZ8ElD7X#O+#s\M_&&S&lXV:qDfq#GDM=DHR7ioIAju7h==EkSE0J'i0
%L%[9>ado8&euU&HGO=EP>P)8f+8gj<W-;7WnDdC=nk*&_l]gn:?0n')6t?^G#X(YT$_NG-`h]n-k$r"61F"T:l/_nbGU5Ih[[\8K
%$sTKociZCGbTkLqKSdqKLdoL;f2orC]CE"Zo`PHu%Fclak0X9*'lB2c:l93poq:<?`K18FP#i(lh#Vg1.nPQ=E"RC.C@s?WbIl[<
%[1=7&?I*q^!C[Y7Xdd1IY8^cIn7>*]*"mQ`op9BG&p.HJ3*?&IMLgh@T1<S<OhFB`=huj,aFoX%Ogi9CTmXXul81"O\4JE-e_*7`
%@FR"4?%0AQol&fQnb!tF*_G%Cm7<`SE41>2H-?hE[hKhmQ*^]X.(o["N'OWr5hnb")OrdJQp7Fc_@.X*(/dX6/HKC%La377HFPQ#
%TYSf^KsQBPcD?.oOXP54LKjGqi@#G?:)Ir[2BE`u,?:Wd`X?d:DLRqo[o+3UFM`gM96\;PrXf-&A1bKAdT)c#Sosb&)ukT!%r22J
%TQe`!Y@\+t!]njQ9k1X5GpA=emL4p,4dk$:$Gf?(^H/M$ctn`]g%gV?>ng(5LEH#pT0:&=e4!U(6OEXbpZPpBrd#;Ar;+2+kqE)7
%j+fktq2[c>;>T\O<m\&Mq8Y_4r6laBVYiZ'ki#T=^\Q]8rpq62pqM:UhgbH?s79$9Iau2-Sb_cUhu*"?s5V/Ws5nP(pZ%bBlX0Y[
%bE'Eq5NELs)64UP-alhG%bkXdFD;r-A)+g8PL:2P3(GGj&7PZ!P:(UFoFPC=_sIU:7I*U8#"1YKGG[h<MTemi(;!-,H8uZoacEDl
%EQiX-p>u*E$<h.c1Dp5,6S/*__G[?s0F@ER!Ab^6-&)#[;h>+A3-A30D'!qa6[S4]G<Wl.(EWK;,Hb6[(N'W)L-o9cB512].H`6.
%RRJV)9J+4KIs=u<DTaI!>M^*VFleG\%[Qq7.!4#QMYKq#Y#=t:cINYk<K*.p7e$[4D5qfKFsO\8%&agWRhE#>-7DT,WDq,W>#GuD
%L_<j!3@&Q5'U&s#UbTul\X?Qf`6FS&UbRftCkSn.c79cQfuM-$gAr;3S:r[eLjBe<^s3L6:'MW=Pn"@MNsUU><l\<`!j13./7B)f
%H"BPY--Y7S!qN[?M8[=QBU]?=6-*c6E3'NT16Y706(S$[pl6d@\ig_`5X1L=0kq8U&,^Xeh2C.H9^7]MS.@AT5D!.-WS*+W;LB4:
%2CZ_=I-Ijb&bXRnig,-L<[C4s+k,at+<2DbY&YZEL79EN'aU5,Uda5Lj89U'^?eV3A;Vg]@\-rX6&YRLV_D_'PA+r1'(Sp(WU#K`
%0Hi'm"m`t`(2XI-8oIdI;q!JnSYaTC4H=GUALn$,k7Ks!P&[P0ap$qXITRq`6I`_9@ZN7_3c-]gPR&ci!O('KbVu=fJSVsoj*M]t
%@(-Zn\?a\;a;>=u5+dPu<'c[p>U9?lbY9n9!R3CKU\[Z1"eH6&1b?[GoQgN8J=2MTA1Sq;7jHgT36DZHO,QN)=$ea>([bd(l@^_I
%3+Sr02ac=3:Ci#JX1aM)(:m3b">ghRA3g<D^HihTTp6c)D<>;kbn#smVin=HZf_1)E<6"1*P<3?c[/q4/J)+nOsfeHPcu,\]6QI\
%(h2&kL[s^gK@;98:flO$/df`cTmVKb75qo#)_1oImK0tkbAAZ<4BE>lGlcI^K*_leF/`?+8SC:kIU8uEA^skadof;+E%#*CQW\;p
%:+C+d,-)VKfVOFDGW$"Ao=f+$Vm"_i.(Usa>"?:?)P.U1L6@$t1F'TNi^<5)\cMftDeB/7E?t]U<Fgoa^[\>T6S41_JNs6=j=<Zb
%I#D$qa"Tn<5Qk*>+mKg>jM5i8IB[E?5]<59m):c7UT[D/.(;0H8S++\XYGQpbXR*`L4DD*P2p@B;!\lF9)ln&^aL0J9]!b:Y4E2T
%^e^1ajSDc\Y2a1:X;stu4:jlN#GR_#3]Fr=2bVO&BQgaldIR?Uo)K9>QD^S9:`-b@/Y#O,15YJk]Jh>ia_WZS^_jA;2M;(4UG:1j
%;knt6LTX^LFJq6sdA$3`,'Fo-14?4iE/J*e;on;AXpnhK+PXQ6`W\e\aEg4.D't)df]l;2VtAR\-I*AEn$(%"6mA@+iotbmG>Fhs
%=T2C74"Kc[(DU9L?`,_VZ<k^F*_3BW`J_*Za#[-t[KhV/(4SmlCcXs5RtNC6k+s:WL0bkf:%0GV-(gC#`>?npOg:h;%0^/u4=R.a
%TK<K2j!%UbKq/V,9Gk>qU#aJMjb#9JW53MfS[q*9-PA%.=*CS!n5h'oF"@bf!X(DS,gVa'hEe+:E>Za?`IkdmQ9@DoY?[\@5.dN!
%kCjBeG!P!rit9iT5,Pk"of"lY*b2pH-7U@bQ,sisE!B_81gHPIQaDDue,1eF>U@%RG_F"#jKgXt-@'/o0;FOp!qX[\UZdk=C(@?f
%lSppag-ocf[ttoDnaY/)JXNNB;e6%Y3pViDRs;f2D,I!hb=m`K)Iq'F-t&@\!W7uGr"2JT.5bC;N1auN[AD'[S_s=a=J3(Xg"):q
%U`Y"FHg%a@&[<c/*F)Z]OP-nABr?T1=o2OUR99>?2]=7MGc-*d(J.o0BRs*INV9u=+`=IN759<E*AoCr*o6,ES?JuZJMl#47?G<$
%gTrohWR_]4+e5ke/GT9aHMbDINfNp('ihTAPsnB3[B_MI6.h79_^P-![#<[F5FYKA0>.BtR2*b+8pNXI5"d-+I8;$uePh]b\VLkR
%J=l2]9q'P1)$:QeWJHGjTb=g^2_!4j.$>qd,k%200Mf`*ljqU'rWd^TOECX]0X>di"Q\+_1N8<M,2eWA,)fWmiMSGJ5:gmF#%MX7
%?"-V7;hRXW8\$$fmmNV#'7e<;@^kAMfL9l>\IE^r;>gqmT!-=+b_\j;0F*qWB=t>j^djNMIWCT'!g,gg3GjIn8"ijhHX&L;33j;P
%M<?;8Vc.2EB5-.`_b;fg!7E.OI95Z)"N0;-eZcLl;?1<(7($1^X+:CNT/VkRl3gP'(;$P"('Kb<o2<Qk(IZ))mI<h5adM4>@#BMs
%X&65C;+7JW'=rFj+=]BSq&pIRTAA'>UneZYW&gupF9/gB#(K6%ROm1%:HIEDRH.KS.heX0`c^-f0]>R9<$VoSMO_olQH\kd.?krD
%#6*IY6r$UM/d5leNf]Q`SBJ9V8ea(7LbkH_Ege82npj,?I88:1*j6-;K1<>J6rB)q=P0mEj@j9s)mf"a/kQF;"@j\*g+<l4@UG&q
%::nMG:<#7ENB3_',=P^mU'(j,Gia=Y:O]s<`D[+@:Z=oTQ,4C3i\o#%m$0j%5EalrQk2,kPSfflL8-7j,^Y'?l:$FPo3RV(au<^_
%7\p&5SdQOYL+cs:VDFb?Qk`t`!]&"%.IOt_eI<jg%>WatmXTaMgP,S;X)X5"RM+8oOZ1HE66]$rn,N\Ln"pdr&O,HhFs5P"&0$.o
%'[@=/Y>\tm:-,X*$<)aY0D;_?Ne<.uNr,L%Zb-W9$6D&C%^+OOU^!]ZPpjf4&n*EU@-I:U>t8N,)aLQYcAkG'bf/_,RG8d]W[q">
%"#&2ISf*(9L$FUf.Q(UE<:AMBTXKjBfV$V?1/-%p,i`Emm+FL@Ikq?U,0QnNAV`*/:l;S;7(hUTN`GDCPfl/*i85I<#XX\\T,>=B
%LqGhn"j7l1&LrZL%FtA("m+_U),>Hu1^;\9TP+Yg2E+,<U,d2$\KREbZc[1_TP*X_LU?Z2/S.>]!hLouGRKdMqqWMb<=TkE1*k?%
%;ukW6:stS)&e(+b^H,uUCBl\!DNV:u@5=kPEo+Tq>><G,&_AY'oJK68"7.:rV(5`/4aPJ6*"?OQ<NZFW`g&<MbRsL0Bo3O4C(SXA
%IOF"QTC(,-9ph9eG1ck#BZj7N`3TM`kYN5i8]rSp+:4*P,StX9h##@k2ojYore\klC$$g_509hl3bRY<(kO?gK5`mrRYX*V*'u*t
%Iioq"Qf(VZP)._$7=1aQNtKcp?EAIEU%F#rG2SGaO2*"&FL=Cn&&fKmmf38^ci<RJIsh#e&&0$4rU(bW+3)P&rZ<0mO8b\o#Y"d:
%a0N9?o<!Jo)P?oXH)D"c[3/@\eY%LZXR]+H3be65k<H*L&[>haLnPba<m?"FLm5tSdp3=*'\Fh`_jl0s5&c50^)U3SR]/U+/6(1u
%0!clU'"UVZ&l)IP%H/p-l1(6oUeY_ReIRgBJC-V^R?8'*M//SRoc]8H7QQ$^R!O!UA)R0[UYe(Z4>0]Ra<b/m>i^SYq5Btk?)f6a
%9q<Q9m7dD_:ZZS3-lZN?W1WgGO4f,[Uajo\SFP#16h,de1X.oH>^2jI^\bISERga,#^Im$0;FIEA!/A4&^r7/XgG/.Bq,+T6NL+]
%,o:`1eh9YA/f;rqb1PRY@oHj'F=<:QV/+>OGN5!h7h5qE%O%k>&2ppZ<o-uogDS.dTM/]TJ)]Ut5boT!o@TPC^uHe[a3V[!KQ?Z4
%Rt`e[1HRq(7Y#+m%u7)3WL\u"fb#.2,ID>Y-thgiekY6-g(@@X1[7Fk\tb7i7tB.91VTXif`B3uL4Bpp]\*\Gliec::,=H,N"Qk0
%bPWdBjsBcH:8s_R@^H_$BBZ^UaciUDj!8VYZ]%eO"rTSTAq&]lLQ0m5A0h^ffI(0(_c4h!3K]TS/^$s&*:oY7LX:@;G$Gf'P*q_D
%Au8kDBoMUWYZdsLC:B)3PGTZ1D.Nd\3)/<dD<8F`b&ObQ(RmHh4.FYujBA#g\m6.U!]M",8sf7Z'Sg),$)`\I1D7H[LgII7M_H<!
%qs`@:!kT@7aLr8"p@9ufoZnl'K`iU[rC@8#6,]GNnTW/E*nnAIW"@@eXhEABAF"&^s03V7--T$]6.B+!O)Y_2i&V`AaO0=<%;hN]
%ASqN)T+3@OJ2ssB[SER$W_X!PWoLPOU6:ts<LG1ce%0jh%%h[--fr%FHQd0SSi.$%E;P'8Rqk)upDm?oS[n/fb<B7A[,&sXN=T%?
%l:F@mVVJ=[PG%n?.8-/AJV*+^JQ4A6D-f.)L7i`NBK8"gc\"9#M^gTtkr-l1VHob\RjU)[-dghSYPmTO0V+68q(d@>S*EL0ANq.H
%@kI@[eoLtu$bi7ZS#C/kojBORD*>V=+d!ek\NKINp@GL"E,[rsa5D_ui9mLY&N]'#%"mYU?:T*<Qg$+_SEXT+)Z/J(5>7R"BsJ;M
%pAE=&!&d]1'6T3k7l(D&@[T&@rWIPWRP7KCrmfRC4N,&YJkn)@`H't5aR\>MT9kEDLTo7Ed\VP^qqe6;+km=oU^P9sSHVYV.37.j
%&bR/4]$&O,D8*r@PjZ&VLfG-'.1K^*D',V@.7FZWDm!r7,'VRZD*M1=[49^JFrBU<K9,;(Ga+k\SP1r3UW,M,WSJI8KmnW0M(`mo
%,8]V&(O++>\8A'J8ft[+S!1N#F2k\.r*j"(_@4;!?MiD5)h=^I&-U(R011%"ESunP3CCAac;E_'Sj[oN@u@cO0$cSZ1t3P3LV^RW
%Lo%X8ar@tMJoL5F!4WO!lYtqeN)INl:'SQhPVeSc)^75N@k<2?]WD^!*"mgUi?1(@a(bn]OU5o/+,CMhYujE#1CR@OdNU5_LfB#O
%LdRSnAoS,`-D0YPSh0eG;;S"$g,I+nb7I6jAigIhB+7*^>=TrZ;a_GrZ'?-t1Se&p_oMsF:o"bO?ioFF>([5L#QTi:C$.CRMt1/c
%BGrSO^Hk`R7)JPMPeLgh<T)/]![$+?N)e4T>pmB6UD8+'\EPPF_2q,$QM@&o#SFD^*lX/obQ6Us1`mI50OM=tQ5HYf\n>P:7C#t>
%5[>i+h;5(b#.RZn(Aa[K#,4[feDsX-+CDWWSd&X=(h*J*q.R5i?2TiT/apI`<U`k^X@l);\jpM^9TnCr6DVOI"tFY]:JU)$<E<o=
%b%YkE?-&uk6rD_l8Lj5'Zq^uqiJ+Z6RY!#o-ttI_J\1u@*sYeF_34>Ibn!h>]bs*WDGn"9X-q*=)<fJBA82Ej;l</OXUH)O%u'fq
%P,)cde:a0'VBPY=22YaDZ-g[joUC?&!?a1$/Th%oG2XHLpQcK1pl0%ii%4a^JS?379]eKSlo'7T3Q<egfP)bbT"3[DD;?S4><<<.
%<bt<8*DS$MNMfs4Si7A8F`nTX$>l2!`g,,#B)$(MGao-Ca>J)m'<Rc5@'_ln>$m5Ubt-[!&@8470.Re^eVh[`bs7gP5g/G*6nc#l
%RkX9^B&&GQ5^^pQ&'!CGGrom:bo*t3fs^C!qd9)DR$eAp;F$Uj@_J8rn1%@!knn=mC5Xi6G]apnVR"c$XI_M.C)J2_WWuXjA29=.
%UGb9SKDTI%l`-I(nsd_-35a*[%7;pP9b"G"#`NK\e&amao'6m/BZC.N,g8aL^g\j#jam#6A&Q&s&U0apC_^PKaZLshYc$)a4&Pfi
%W9^_#LmIXXQgP*(S:6Fa\7[:C$F$WO[dVe;L&Ra`L,9P_hR)mI4B*rD2ad#%2q*g26!eftf>6"CcVS;E=&_M27B'QSm;RQoAbF')
%RF]c4\^80.Xb]!9[E\*Mj'tTbb>HeG5gPo*ZNMF,RX;gT-d+#nLL">G."lP1;P#0eXG5_;&nW/CYBC^F8t0*JXqCEk^Vu!j%Rr[@
%.<;`dfRn.?\X",o@P1ETG'HEP9_X>.P\EkIKOnN:daX2oDeFTb)=!@J7sP=3CY46TFt!khfI$6NBJSf[5^I.8pMXYaM]Y7Q_(B.A
%2`^>iRs?"d8cg28WGj%l't'R-<\JEU(%D/$r&lRgQ_"q2/Pc*g(p;L)3H(1*0_.r!&]<RiPRsBX2GMXa>$2g:DR._NW=I-'jXg-^
%MXVVQih0G=hhJ[Oj)q_CPXupnKq@C"jpktJ3k)B2!_b;'pOm7bjqol*(m?D$Kor3,?ie;Bc(ZENVR,_2%=BhiDg]4((jOQlqt2'8
%Nd^St$obB3=XrP?85$5UCKjXM9G3:?Q24lp4-\4_%?)qQ%7Ii7*]]ibQoD;YE!BK?'r8b`P-dU&PpBp/;6N%#>["k.H9M[/jOB)^
%$MU-g%T6EW'_X!"`b#e,R?+D(_<*,gf]+Wo$/H+Ng,s`(+i&4$2_!4V[dZ&7B"8Q7XAtfN_N;(oe!=-I44;sKaJZA!',UO$SPQ_Y
%r%1h,PPYXR2?:a0:-'BJn09N;%]2Ha[Sl-O)&4KiokY(6c6f"L]tJu;\i-64pNJ"\hj:dmNCV9+.lV<()UPUgj.JhjDOd!`G^f0Z
%53^M34A3:]0-6IlFSXpr`O[sU@k?85_2*4ZXt\Y0rhEt@C`CERl8i@rEPIgb0&tIG-R88`]kp>meJ11![(!/CO;Hpq[]FEiFiGt:
%!PFsHKpeB'O!UX?`0Qk$<%70^7WAobT8m:-hG[!*YsPRm`$p[geN"\ceYg/K<RYD"[0WFLP?:d%qUb^qD[$,;oX(eaWaQc!0Vb+#
%n4R,"<7q-MjfU.HW!qud#9C3K9j<ji#tF03KbWW+Sr%DOfad/%;Ef1s>AV%O?o?jN"1FVn84,XcM`88%,nc0jeRn@Okf]Q5BX'\f
%,t7C5ZGt&Fl(tH<HY2.rRXr2?qb4+WkkXlo7?r-r76,]0-T0mL)Q<BZNRiLqg+6."g#'lTA<Je:aeBbs#@k9b'TGj;-S$F/X'lcg
%&jG)'(3U$H>a"tX'M.r+EP<^DIHuY!I^5&UmcRnYBdBm<Yj&$hgrOTla-oY,98o-N'_11U<B%7%2AZHJoPl5-OL:.8[\(#K(@go1
%etr[3)P.TU74^if2g,Y:<@e7g9im0l?)R;YG*7=m8+SY&/o%\71+2;]:d9+Y>Pkm*AmDN-'XkDto42IfIVS`!_2N&9M!=Ke]7Uu<
%irn1??[R&O"('R0lI,He_;H5O-(]kNgE"Q9RWLt!ERW`bbCQ!D8U&o%G8;*(p4=e%>$5<i"gnB4Pj&ED1CXTcT\>[`2Lc@=MeVXZ
%,a,]_(0+i#k_$l`\\UtT;T&lf,6]OqY,l26*m\WhWOLbhI=Ds#kEnQgB;#\?d(;rW8Bq(jFOT6DNeY,/nk,+1e6G,,#d@@0gQKS$
%^*J:pS9\Up/:(V2NC/O`]MTp!!N1JD7]iNn%X'/o=I9Q18:c$tI\,rbe+5@-[g<152^$GVELGK<UL?t?`20pb^-t2&q$1`,4JiNU
%XH,V^,^`(^"Z^C3D>/k=\i;;S6H%sqD?cK2YRAKJUQF-6nkr:B]jTqUZD7M:&]ldR"Z\`(W/Q<CbuG,R9O,-d)m[tU'GHmTF7[!p
%AnF$:@l+M##*:-$+sj7pHN0Z)Zt,Q4'Aj8`1_%3f$Mh`FO/D/[06"bj%2s,kB>u5k5Vg144Xk4UZ8m0$[iZ>u!KGIWmiII/3,1%_
%"T.TL%PXMTL)`e?CAf,K\Xt,&qL.128s(d]mKoa@U;@Di'tglWTlPmd.gcqJ`;:r_@BO)#9o51&WhRZ\YsXVX%VID%JSQHt_h[K2
%[5r,=MI<#bSf:WD<HU8*ZOKoC9]Sg@Sl#f?dZs,_M-F+^H.1Gj<pF%\4?qC\O(L='*R&U+"/62B^qpX\n+bdUi]MNGX&l&g[]K`X
%kludYKr,Ia;DeeXcV^f6($c]um4;i='9IilY=[ggQ>qHAV-rQW`D9roNf0.dDQ=%t-aU(TW6LekW[)6o+B_u_dM0qP'TVRB``_Y-
%@Ke:q"\Y@"!Mrq9@#HhZ=R8f"KQ&ks_5_!V//IR>jRhOWUoS%2j=d<$)KL-ic<sROG84[HS1_dl$_p%BO!W-LlA"([(Let3'c^Hi
%+9e?#F[c1!n:cZ:h!qDS/`WT;q1^<=iIR5EC35[G\YKPI_'Cn8BIc:hB`rNZ='P&+%?i$^X%3l20(O%MoE[7_7]Vb#;pQ)/5rM!1
%>>?f%RCLfL#kiN=lG=k;8tb)qAAL?L"];/aVXO\>ca*'pX8G4*ZnP&dR#SBWRd<Y9?H[4Pd$]n:k)d/0og)[D6/4k2gko?'EM=MQ
%)@X`X7ASC$WQ8>>o(Gh@/S<a)CVpch4c,Vs8QBn^nQm,3IS_m=b$gf'8c3:=1omn^<H+)ne&0CpM,a[NX9VYFqA9nfq@Q8_@Ib/"
%BlakDW*7Io1Dh5iJ0odRir2X]WDmbKf48'p2^O[7/0SR=P:%)j"`@bXm*;8+2PIG!XC&;S$pZ>>Bq+@:-fcC9;?W^'HI_7V!IUf5
%KU1-)**(gnaeqdB*]J_]!$l:85RX*pj'6*tj`6Z4JQ!g0#u6pdHN4"V'^?dt57#g*N.BmIOnI$=VC_3TN\#,>R!BHQC\hF:@2Tqf
%p_6GnBR+W&6ekg%"`CM,D4Rel'geAHJ=(&&!MR-"r8<f#Jijkii`'!L.U\dD=n$--AAU[8<lAM"/B$%[,`d(Iq5[G)S&W0RCUaJK
%'Hn9es$b&Yd$k[]!mofXX2o6iZ3OHo9d%-Pf--aZfg"ccZDCGM)U&M<GtcIM-s=Ja:n!iRI1kcbfC##^h*D*9nV;j$<lGb3Euf30
%6q_N6WY[RQfDQ]V5)YjE"=.A[<aA^iqB.P(ga]UcHcZR_J<*ea.Qg,a/3!.6A>[G.DhC=-)?L=Q_>%Q[F&WmS_FVJX%@[tY8j<;/
%1@s?Ld[AB+K2t#BZ>HXl@6n;eNQAjP>D_RZV'(Hp^g%&jDNr^T3T'rPI.BM'\([S;8SS`d`Ss7eN[Y-[%6emRVRi/p==U866C\uc
%k^1a,/>>B1ar##9[#M`<4'43>Pb3qZekPjjTMfUoZf1>FTb[!G1'jORd,D&]VFa(LUCUO_a\3C0!-sl,rPOk.ne`^ae?XmH2)n#C
%p4dRuRIR_OB9`[^VG`-)oq\@H'J$cAd"$$JSrSO@OK;uSV7;?J&@5WUXl5XocF?%Ajs5pWANUul80ff*NtQ8TU!X--3RJdq1UA1k
%ncf#-G(,in?sLjXOrC5[P/D[rQE]A>%2f@S^!9YXEDP_-828>CQ?e*'-$21=!GtEm<a1uW0C^U<gp_rUhDeVFde)R&-F'RtS+W48
%"k0ZL08`e4J9H[OKMr<2-g2e]e(d\O$YC%aVC+GfBr39Z"=!;6Nc/MDa_(M6=QtM#e[*ON;,imLXHJ\i!I8gaBKdI')'F;R)j`bS
%K(+K*A@UkS!&eLu^&1?]K`(`6[K9[DpOHH/@\,7>filsEi-9-+c63.M)[F\=!uC[1ZA0DJG.^4k()hb8U"O&>rIsW\Hshh`i<l++
%f!fTDrH.])7hD)O42)h_!?[;,#ZhrD!D.QbbKA(AlHkeQXC7RHj,#hj'lX3FojLl@i4;j.6(78f:r"&FqNMs)k2p;(ZcQ$c:]fdK
%)>[7&/V$-oS);/J7@PXFo=,AHN0R7/M]a51bG.o?;_%+RcV.E'=2MKQa`P+BcnK+<Pn20t*,6R&Mei&h4Q5F">g.;k(Y*s5p@H>6
%)n;@O7!C".lZ^.lf8\JW!PN'Jdro\B4"uTc`AFMKTr96V*5((?5`A$/DWX+O6HK2jRuaT.jn8j2f(Xg59WmYk8ouDP[Q]0F$,-Op
%JYnLYEdmsL4c-VD<`kBZegDN98U8N8q'&m#,:NrU.aL"L1#)fsBWoSRj)GXJ4=#a#h>fg1Ce9k-RJX*i7]E5MZM*.Z_Qpue@]X/<
%nL/(?hopTTf!E/":=lhfZK8FA]mMl`%=5*OpB\DBD*&eDH1NT>7W_6GZBUYc$q]']rU:P:he\rgoB(L`Kl>R@Xq[G%IA6kb@F+H2
%Iced>RoaBlFbjR6E%^J@C/M'^Il5X-a]<h"gY?VN\+\6SgBKZJL%$"u<(DZXb3)*'"e7ro(qbVAhreqW^o)q9Vk1R;L.ll5qE07]
%e)s<SVk[&Mq>9qtP_j^/?Z:HHDSbM>E!nko,(&mb4FansjiMJHn(bQ7?J+H0j+Vn:FPW^ek4qXj206JaDQ]DTIe9O%Ij]a2PPH1.
%?G,I)nDZT*%`fO.n(iPK(Ag:)=ZAmN,5%,fZ52HTm\:/M:pjlT/j3R>la1htT'?cJG*`Cdn4:d7dGD,HX/Q0?:s('"aQ4tYS@r(Z
%6>5,cG1$4b4M"0k:cZo%2G^5R%Ekqm,.g/*lh6'[+1Bd,48Z:ucP8*KS3NW2[W4LZ3uJB\<E4<>e:;<d'.q3bAE@ikpclOrmi$KM
%4Bu`$4O8_fbkbm'WaUi=P@:37Cs7XWFNi>gdp^"<RLV"JA=X4k6cF/7%MPD1@l@ShA%qBbhk)_Gj-]YlCeVkDYrNJ]?W-:poC^"7
%:0EkB2<Z-!P5t@Yf"!ONpL,Yl;h*>rp5NmA+R;;.=6VNbJ&cQc7I-Ua;NOt24(*OWQ`eJ0%VpFn?:)c"hUdL$`i2:@Heg;XIs7%#
%&):L#p#=EQVce<F[7Y*!;%ZaUX*Q$^QV@f%3-0$_r=8bt4S*</abJ"E.7480hY$]on\A&%:Q<=OBK&;*56j-2FYfkdReuIS+nB_:
%cX&jL;E=Cc7t6?<TO]PY?:O?D`#jFP*h`9,Vr.RsF+Sh^-s;'X4:DVD]5$Q,pY+D+k<FWsSa@'JO`j]J`WTRo+@R(6Z\2KjUrb$i
%9I[:QaS3W`V%e(*b+lj3TUM?7bR3`(KVlG?9G5XVgRnVL=ko1nr,f`L$E+lX`DA'cZ5SE13i'RE&K<0pEcZKP(C%2oUSW98$=peb
%>B2J:56AqsWDH/i7qo6pGMasV"r54diB/P%dYaX.M9N%G=ir'bj9-bL(-pGc@*[#mm>?MVI^46-_CaoH_K5U%4,9"ZfoOJ0JN,2j
%7aOuZ'Q%9;o<>Wl5H^9Nf*-.s,qTcI1E/qB57kZ^Rr<c(!]frB=Y>-_$6s^7UX7Qdf.^AKk-.I+]+$SI+tUi13Gjq*2&)Z97iLuu
%<&e!H'%IH;R'd*\euHVf7>7A&c!nZX]Cb2Z.15%E/bYN_X!P"/R!R(`a>h@d0k/&'<qIA0?:H&3*q'"N@LWE.`$dkc;;9)4\,uB&
%0"@E"(.(FA#%F8,>$o\3Lj)LS0B16/<&$,q+#rL-,%L^C'uVER,B:$E3+GCCeFb8-q@OhG[[GoN'^'(?/5f[a^:EQA7[<0aNRh.<
%AV^5T_:3lI9uc?rC)hI0Kk(F`YFMA$:cZlR/7#VYA3c&F#Y@)';crp]C+i25nW(&W0^?3Ul+-_r0:=8oPrV.]fEbl*@D[5!Q@kt3
%_Ed\-bNcN&0Q3<d8`:?6i<7gN869]/O#C=bi.T'F*K2KcDpl@8D?pm8L^2jhQbu]\5EW97]FpMR:M^N^ZFCJS4Q_UYH%:^UU1r*R
%;e1?hC.GX&&Z;'Xb7tS+l/Cb9qI"t1bq&tf*N_@W$"@cem0hi#9l><DoX`Z\M"Y*HhpYX&h]7]]Yu1XO6/s+r'XRKT);Y;SO.4>N
%55RMM,n<ro5_=+LS^Mq!0ZfbPR*0(ZWhC89`@_=I-L_<7f6P4eTK6R[<$jB8@ZmiNV&C(`h>+WN[/B>Eh*5k*h;4-,J*2oFg=Xf@
%2HFZc4M>d;G%aUjht[eO]$!aeAAXOS)FTdlK,E^#?3emD6okfem4,#:"qf@o[?YkGVs$*r;n@q?I,-i>qsU\?3'V@"`7^,cJ%'Rb
%S?;u9#_&d6E6_.o]&@b%rfB]2e9fbMa)TnI%f9OhE%Pu5E:BoK"I=+1HAQ46\>n$3#,3%S*7H/IlnnQFLWia+G$9obCFV`@n_%B+
%A-8il]Rer)s2^9fk>IhXK/m-B0!a9AHO9d6LcQf@!\X]AD-(Rb,-%n/OhLIC=iCoO3DN'5A\`pc<1=J;>br)/ZA?:B66%MfPd%$W
%E'LoNH=t?`nENWZ4$XG5q$<t4W`/aFj1-O;Q6NN&E#NUpEXu#a;+H[UHT38\(dcnF4#eRNR%c;ArK/lgKT/E29>cd8PI=#[$G"=?
%Vt@A8=uW17R9Gju/9q=9PFp8:&Ba7)'''Wm@R=6L0>BTNR+((*%@MVZBj_+<OE%+:-9V^`JfSjh<iVt:X+hOuXDhE9WU_Z'iPXGW
%2'IR,7'm*S,#eH@V$knsid(O`hp;#5&ffA6jIZ^M2dq"eT9*tAWZlR!8'!Q!!h%<W_uTL`f_^>C<;n$JJE/KBT?T]K2`ooaS8j<,
%V$)?j]A:jPIpc]K%0/X5j/.t#AuDUGZo[ENVaA\Oi4CP-VlsG]?[bGY)8]GaTg`&'=>RHj/B;'dVC]Hrl_gr5:Y(TL6055S'91)d
%#(_%:'&f0,$B4ms[1P["Qc$+N1E11<]PjomAl>he@=5D=L:0ft]=Xl3@`8+d$m!bf3:8Ci.s%2Dp&&1m_;46N,Q13%=e!#[GK\ht
%ZqBi'U@@244$A"oG)?qDc7;(P?.>U@a<Vih_8FJSgDU.O9F-)DD%%?^%'0+oO3WVQ96R($H&cCA`Y-HB&I72U@T."M^Y"pF[kV36
%80q:grkF@T.!!J7cdHd#bPAa8UjkL-s4<)rn?lCTkPEc(KT\h91iAPD)+'=uZ9?UM>hQoiQqHH(b1L;$.UubDVctHN(lMD953@\0
%kHq<>@WZW323-b66V=tBd-L8PJLe3M77Lj%:kZodfq.?J6<P6^n8OiCm73hBW`%Sk$>01ll,UGsK%tW-$osP0b!R3*-]FY(EUu#s
%\T&*(c[154M]I<#;3L:+m6ag8hQ%-,1UmMWmuiE]6$#TXPQFIk]W6PuS)jjN9jL<"F'MWTKk>335+_gI)XtUE9AC*0!lkBcT#n#G
%h6Z\&LMa36"/lstUXYuLq.\UB2ho`j$79uo&5lcgFS92fXtQju7PH??8cA-NLABBAB1+OG!g\$7Q\fts';?SsET##-22Sht'Z"n7
%"/3*Y8I=kN*Ae9(U4>V-V#V+@ljtIi,Kr>M>?DH<1dH41q7KSi8IBKqKN^RjQS@L6$rD"N\/CfW\2i#HkmVfnT*"`q79Rsj2a?,Y
%`Oft/@+>o9as4!I-j>C:)`NMl1!_Uk:qdV:%\g4UdJ#b_&6+4-bJ=NW-2.7=4q\0Fk9rY$<4*miiIOC7D[GBUK>i(W,_D[_%-s7Y
%V1$W(:^Z1'lnGoN3#(H/D8)T:H\ae*.I_%>LVE$;^Xp.$-Y$VsPDAB1^Uk3f%>-*%g(A1H<qnErH?;8+ALkC"hFS$+%;Dt2AJ&'M
%nB=jC!=/2Rq8V>,B)815!to<5=C"bnNS*YBJ[NH*T-gCl#]STlZ!-B=Fie2!QUETd?Y)M37"O%-gD<*1Nl6;3*;lJ&$pChhE;4F7
%]:nbT7End@js=.'Jre'9ho!kR_%imlRS]g?X@-+#;Ku0%"SL1\!TJo:'5`U'aSsVD5_l&cOYs^Dduq`@NItc%3R@%(X#^PVb`4t5
%E[G38QqW61.=n>LQi?tNpCD"rR?\B(G;F:p,TiTQ$"mS\q2ZKp28Hb:V4s%_JHS&c>`sh23/u'T2%H2aC/g.m-tNdh>c#bj5Os2'
%V*[+f-K<1PW<C9M^1e>kAs?2U,RkKAFH#WVL!-=I3*g&j+IDKg+=2<l\9#=,X?-3^I&/(K,Qrgk-$`j)4-N:O\lMJYQVK;sU@JpE
%k")N+r>B>CAJ/L2:>YkVUnPF199s-l'_Oq=$>5;<f!-g7E(\fi2FFqVV8e*?6hPJ(fL[m-`R%c\+S'QM4rljMM%f:P[QBpoRMuCY
%kBU:;!9t>6<Mm8XR"g3Q+YD]EeB63ZSV3WI0"-T0n`*8]8j+AVOcR[f`oS:cm`d+S^O/]7D:hG!Z%`p1p+\&#L[-]hddoH3L[cr]
%TUYJ!4\E27^Wt,9(8'acD#=(aZB"0FdKQ=Vq=Q:f4K53%&3`m],@,]#,;H+X1h*r3H5ceok?6IqaB?\+eV$)aRm,&kJ649;#<!fS
%Hh>8WE1)jU?KI,p;YWeLD59i_"!Gcn&9iX_LqNEt98"=K!$_qle/adLG`JFp[WsEU:%(@$nfI/CK[Zip_bPdAgM]$sL\K4;B/mKG
%.X4*IWVh-)XUW'Ib!iY=%2bT0CKVT1g7+MqQPF!Hp@HG<>CVu8S3-'fb6Y6mom.1pmshmu3A7j7roNRU0D@ugQf4#[F!ba*.m&6k
%Y&q#E,VkH]j)fDJ(oJ#gJAk1^g=aqS"<pe'/KPGTA=EUX:'e;^)9=-f!$MXL36`Ch1U(\GpM&:cEQ-]*Eke7_kXFi0iAt`&2f2J[
%c"#d'W('_2].i\g`IoB16b,9eeraRoiO<W$c1::H6Vh((%d"sMd\!r7=]^+_9knh*p,"<BM1JUj_V,+3[@iJ9#_t,jR!b;0*@!nR
%0`rEP"rN&H7=%3&#P:\5i??5j'Efn=ft"b[lU"Q)n&m9!S`ndV*N2Q`AmCC=&dX[+W[<`H5uEZq%,J.!B_`aol=MJrQHh+^ro%J:
%4W4+p`2lDP8N/lj-KL>iST^114)CrNStqW1Prt&(j'/GK"?8P*ZA6;JSq(h$;AX5>mJjYTZ?Nb.3&f!Z-dQ/-I5^'^IX<*?INIHb
%/D3LaMZD-E>f[Ze>T0?=]:#>TgRcWr^FqP2Z!eVZMSd!8S+39YKJ4[UpM;oC>NFfe61)KsPFCk6mK]UhB3VT"\T2#kV:&J\B9N@N
%!X1IZ!U,KtN=Y1LD-Nm[0]JI;m8Am"k"r_U'P-If5eI$#/OS)BELpIj<hY1P\UFi8NN4AM/WRFt(KKAcFI7Ele-HX0]3-]A$dhs"
%2ir\.N'%/UREbLBStt7t^>I"K@!Uufm:><UT%Z==\kS-kRf^PX^`f^hT.)](1.@[t\d`ge,ul[n%s(M2>[;Ea1&B$-M"GPe,:ir"
%,BHA-&V8U<W"H1I<>gl%+\>/G`hrdP>#Nd\ie`[N!@PVW?.Zt)T28["\mFZicn6K2[R[#i_DTMl\bQ>Jp)dFmQLcZ@dQdkk"U5*&
%YDDG'U:-^?@$ZM?"<:0&g\SO$W:d^m<=:DRMYqEq:;cd`&(_!YiMS3LrK+VSnTQf!k2D-XPl7riod%]oMrOPY4\/)VRl&=S[lo.N
%kk"EeYIeKFgm:+!oQ$_??EWb/[J/U:&t:>u+7hm"6#J^<F5TGTHD^KOF#7=,XD.t?B!tQO/E"cO)e@<0DAXloiU`PU8FIRS['M<[
%c_*7tMLnHR'bWm=FIX(R`CL/0o%Zdr*@s8QIalU6s!aZ!fc(^u+pFN(22^rUgSUpL,#6r]gLfLG6")4kn.:R2[8#9\D+MuLB%asN
%=S>Ff,$Y*lC3c99`]h]S.=ZS05jaC3cMYIS](0n.,$C0l\k'\=RD$f%Kd+lA1H6s#G:0mEn,gB]@beaqr,fCjT"b:-7dC,4QMY=I
%@RRpIg?AZd!S=7-hRkSIH4VrnO);O[=W._<T[6Vm\mb_J%$aN'a>':HPH&A2Y0SlJI]Tn;Y"U$-S'Vs](IJ9anksNu0+S:fI_pd#
%AWV]Z@i[FGjZF_D)<1%e"sF$+_/Yk'*VlEpS*JTsJUDp2P=TX+#"B/D'FY.'+>OkV\k^ksh36(<k*$Vlqpk3VnU=RakPX_Rf]fJ@
%Dua+BL>D]/@uQ0F=`!>C5RdB&V>:SM-Gp4mr9jhgom.0)=dD]dL]Q?5lm2rM.ab8,VkDEg7>n]oZt`0>(MSi,=U<D.Jfs`"M/8:4
%<p)%$:[]I<%>&WTmg6HNCloK^<s'.Hmgo;n'60b5LMIFXfpD`f!GM)/kF'g]/2tL]kVBtTT\f_b3oXOJeT:_"cC-03E;^b8QT8h.
%m(g&mc3d:72d<F@p5BmDTHp#r50iq/0PsRaFg(tBWFEHJ<`&jOHC:3$P-Su+.j7?"l`bJu>;UgEo:"j'cED$1iN56/4b/R[I[/-;
%IcnhbNPhRM%7(r")Q%TqE3-!;OeCaXjppUj8!gfH3dsK"JL%8D1i9b[E"koXo3aT"T&5]^j=0CKDp9_eVKs=l)5+PFYr=pdj#In;
%F#(`fJNjfhelCDVN9$3?%&#<eb^V$`"0.niGkqk37!Wf4Mj\P%2:7;PfHlnL'd5kW<Stdnngpc-7D*QUO"k@2VkLDD0JVi`AaU#<
%*hplr`m]=.'4nhob*Z#TP$kn_q/YO`J/<pJg+(7/ia`duY\tM'$&(9jD56\Aoqi:gK84a;o"SFr`:pYB3l[&30>Zcm*[>UKrkX5;
%A_8jH\N%jHqS\OS6NHqH9\i,0MrNFALW?b0M#dp4KHAmpe/JFkYhC$6&?e<W7$hVt62Tng7#3>of,X$Irf-)s`Q2&6A:_u:(uM+G
%*#<5"I29UXo^[;0Bh^]>5ji$^+G#@LC:?tS::DSY^]oBJek"%B56:m#q;ti;/8#<>P\K]9jq.DmJW%5$RX\s;+@OUBE&:^Jq0J-s
%*kU*?-_MfP*3#Bj2`*emb=fNY^C"'U\I=-O8rU\))Z[hB<sb%:US@Cm'\PhBnLnf">;;nMBDG[W8-s0Os#rDKOU/15b_qqKVQ[bQ
%@tgA@87QTH9F->9Den0"l0WXc&6`Dm6;R]tK8+nJ7EAM%RMf6O9E`\JnG+:q@I>8Y,O'WAV;j7hal2#&4Y_ILa8L,VYShWEc*>@G
%1%_[\1PlEOPK>\Ws'_d`c?V#E_PcEP(:a[_AX7K,MF7b&"n\=8T0-/II%.bre4S&5RsYcdW<B'n5c>T2Zn2+]-Qk39GQgdD)r;q"
%c^V80`G0r*3/!/Xa(_F^JI9P>YgZZL1s\:$*e]:?Y1*kkT/`=Z5lR0N,gTB?/cY'Q/UWK:UcUmn\oCW2B8HGL^n<Xm=lnskjT7iD
%b:MT3WIf-lb[Ufo2%mF=q*1(sEW4m@i^K+-:Q_^lj#!shF@\F:lF<'6Bc7/k30oS)]09]AHa6XXT7(OnH4eC18c^V%i\g:D>[YXS
%iPp'fJ,dF2/nj1&N^`[u7%oN03PmI:@XRK=E>d`_Pf':E$E8qf_i6h=Dnh^.8!/_U6K!)(o1YJo+rNE<roTuC#!Q`;8h=4;]*Z4j
%(_F6)'[+prAMNUk5C]'r0NOeecC`)?!?T!<QIdLLiNLj'++F/qrq)P,rpdmurqseYs/:GIP/[1]J,\sK0E:["n[nf+YB]imdr0^0
%TE"hE5Q7i.s7]n"g].3#T3q80;]S+#l8O4je,T45pV6N0#E$QOrQG4hq=44VB:V>/`Z"fNp0m`ApYjf>dfbn\L4#gPJ6NA?%f!gW
%V7+=,(iZd4dlfGoV-7VL@6KouV,3`!Eh9QWkJ<%sMa8d<eo]gQ5]jq#En4b(U-cT7XV@21?&rA=KNX&I7$%]ih>k.cWk=+JXKO@!
%"o(c)pRs,iG(J[Q!(t^Ehl;e2O'R-G';,pV[.p8$!ke'X^n`D>h#-+/S*hhaCdlZ04d(B2D4[S]1`hSO^jr'rW(*aS#us2>,m8gk
%KiS"P!@9J6e>qg/9p$"_a;,SW*NFE.'EH4\>6QAJ#Z=;CpCQq6Gh"&5=HO'/H7h`40JTg(";":N,-sHMq;jJc2$\h.0/@AM&<1WG
%;o6+9/@-tu-4&_`-jGn1XLH=L+Hpo71>;n3VNC$;!aZ+&?^S&*6\`->+9LsS9FE$VM%j.tYrlhVhObtM%:'4&<\7/fbi_D+$be/.
%=^iQo_RF\TL;LX]'Ua,]qPMSsi1$)FiL?5HW!j9\n@2.K*DkdQ`#'4C1$P"J348pS'J2Ba&]!.3`YVCZ65l`e_iI&E_\EksJe;/Y
%h5lDeS\4Q&mro\4G<]A1Zrm+PaP\g(@[NEm71<B]^[]k)d\0<5CiEPij'(ZkMMS7g4\NDniOTD[An4$IMASj$PSFdaT6pU:<^$pE
%3'F,V;4*G81SX%/8%TAh^]K@9$i\@i`l!oY^bfE8hlV]Q@mtcc.t4?1iDWgX[<IJ,f&Jl#OreBE//dpSL[9h/f`jg=H+9crNY#SR
%[V2Je0GXjkK7H:G`-YhA=@Rqlf`6le"(8op(TL#]68Y&W!:>:BO\:TK3Zn]YRJOgS\tX>0"<Y[/5$:NnOr6MU7JKScJ@MmR%orF[
%MYBFI&$TZpZ7&$H\p!W$YoSD=Z6S`d:=[RAeBeR9WE;PtM2fRUb.Eo)S7dimi3-H5NTP:m!jt%7]5f`nlJ#!7/]Rsn'(JS0aT><8
%,QN*Ymgi9TE(U1"*r`_`/PVVC>is\hM$[V3o)BKZ4l%T8+fWZfktSA^FR'je4'`h3aV3mXX?LX`=b"0Qo(*YC]Wp?k$'20rH(?1E
%'lkJQmu+S!^s#J>UbL+W`@?CoQb.Ie9Y<$Lh<h,fea.qJ;>Y9U7=%2p6.\oI]_"i0#5K#MV=H4[4q3q)^0@IHX'n&A=F!EG+?AYW
%V[46C)A!'te2dYA6Q//851H\oqc_3u]_qKpf+,/H%N5I0AtBCVibkS7-!FqX<*:&jn]8IYQ$9;BB;J)Ao\8gY<!o)oFcgu8:9.eT
%XQ2f%^Ih6t3LOM#<blRKhT1_Z#V\k;T5Qsl9/ZnM[cGKJXY3l11B_3W_Mt]XD$FlA[r"<?EMm2.6EW-*KtQ3So]>BoOUt%i?Ag>7
%[.*`:[C!Zd$L;5V.kD1G(Q)[PFf%T6=u<TA6NiV27shu9c1>emT@HG$$DFjGS`1EbU2(Js>]`Rc[`['iSpA')XO"AFoi[d?J:DP#
%]:uu;<32N&,h?:Dqd-AY1(kWRS.+)^N#aB)8f.hV^OiR\0'sI]/cD%#PDPA\c3e8J(\&\A#LE"+U8A'b0;nmQcEb4m0s1&A0'7P)
%'0F"a[[8"a@7)"kcAm_.ohP'_2!s.f:HFp@*J"lE0OZ)^5\l&V%T*sO/mIEgQ?l*`%NeUl`nl!81<51CVc0c:S2#M@5IG+_+o3Gi
%ck'3uTu#)i3Q=Z+dYQ'Pq#K_8&0mcX9$Va8HAX<Cg`,Dig.LS?lCUf'm2S!nSorX!'pm`mY7G!><M@Ku4q:'HE@K6PEERiGoAhm4
%esG-Tj5p!J?Z^m*f)2S]#E>5`(r>.b7t1!1Sm:-QYIdrgYID^O743fPZ=]?WNq:G>oQ'i[YI6L;>O&,9AgI9aFp2`sQb0``Aq&%+
%dFY;e"9YUr64+(K0U@ek2mQm%4WE7'SBZipX4Df(&k0l/ckOW/Ad,a:d]X"n@Glp7H4[pMY^'qqTWTMAdN4^@Ts>;.M<.g$mEgO]
%Y^[_B>8$NQ[Vc7s`hf<b57MD03j2GfL9gj`Gdbc7IB0XD@`)eBs.Qt2,1)W*$9:k6A=(a=65tV-na&Dek<ic`hA%2EgH\d?l63&+
%TdY^pVHQDU,X*8<hFKD'.5HdmQHadt]Wo7s?@FhI3IEM*b!%M9l!s)b.W'N]\EWI+T#BGO@FiT&RU2dt?,^ab`PIt<""+s!0i"Kn
%j(PJL>H#)?]oLj1hb&nl)"q!-P_ue[GH%cPcd(,G+[rTL)cY)P6(_uN(B?_^+-'W:]#%0[^\de-``d5=1cm]V@?un9R)Cc+-$iJQ
%*u$nk/!I7V6A,2Z5hK].#9q2Kc*\$@haPJ;T'*Gl1k_f?kNdq;mghXPA937I(XMP;3cp8jLRog-,@C?Eh$61!3U<],)da+BUf[-!
%OjI.RX<MB[9M@fOKWYjWlq#,07@O@M?eV5_3u!(D#8*XDdsQ>*P/VNk*?;hL?c>jmmDPHc#M.lI*Y'3c=`j&rG9;0rXiR"UqS1%!
%'f&?#,-q\t^*:B"=!04E'6(nO4Iqt`l+.L(K]Ul`Befse+t.c!poo$49kI/&oi6H:T:3M$[^_dhUs4sA67Z?R!7Si>LMKu+pXg^_
%/-O.)VL!_T9:6*\>d1aV,-kW#ZJ8?T*,Wj-D$g'W!Mhmp":X!-61?;^3A;2W8ZOt5lg$%YoY]X#OV+)RSu^H*d1-_c[26o<LQhVh
%h=!K-h?]4R%\jhmg/0>a,ELX<0^jiA8rJQM"JQlJZ61hUWEc]+=e>!=OLJiYo^<L@AT,n34%/&`rC+O0!1$spB&-Egqkn_Uql_"?
%6j&G392E>"fGf=;1+$3\XhRMm@3YLVAWHik?AY*o::CFQe4ftQ[O"K=/9g4Z?3246%gPsp9>mFXV/hUaDaR@+k/5M7AV/Q[4hkp:
%%@?_/Hf#)/HdgeXcieSr&?f^qSTS]QEODh60G7g!>kT<KG%"Lm'r3N@S4(2DjAr6=_gQg$BB8pY]7.q@?bR%nO"NU9Hf=m::Ae]X
%II@K0L0g3BiUn=i1T"h7;@U`\%Er@=$pVQiD=M=l[+T5>^Mr=8&^?shK9QU<XL#KGPEIDPT#1:]3#G8(l`W'8-#C>2T>qR8)Ye+"
%Hqj"eVRPH2r&6\S\bR"n=G=iP>YXK1Pf2,GL4:lPZd%BdraY26;kR_;0n<*G2LbmdG^DDV+ipp6]P:D5-XK$!Pn//JnA0D)g;C>%
%hgP!V!7gJ&'A\U[XjX5EXN;cKMj3u-c<>$lZB*b2<LtpGc/uMWQY>R[8`F3ZF8VnWkTFI.D_K;6$XJ5rB^EnggV,9p*3aSd!K>_S
%DL2/m`uaYnn,6te&(2qSXb=7qI5$>8e'Oj(X<#?q$WUpZqc0q_r@ZpGIXg)lr8hRX_;@K'`d[0f*;aMI^\c[PDQ>06\C\&$=)nMR
%>dEc0-uAR7,u?"Tkq2KVH$%'0[2Raj`ni2&qg!1CP0JH(>u90prS=\lme$\@F$"^/7_=VD`+s;+p\6D.5ZD4(HG8kMihMaUKf;dH
%DSLQCJ2GN3rK`n+AA2;[o/%I(8HA20n]!X#hb)53r[pU9@R'd('"Z]Z`f!fG=!!BME/?L>V6f'-pil%9WQmOq):)T**e\'.4kMk3
%fZ!)co,-K\C>]raeknhm\>.<$PI6Xoj?[l3UjVsbXGYW)aeP+tf7P(QA+gElSc.uo^L%),^i3$b?I5P%I<"*n1K<T.q?[^+bACVS
%WQ".][_(m>k59N-c?k(LOYPU9I1c*s9o!(LatZ(cGgl;GY2)^T4kt/OHOkNIR/"<"\N\>E'1UrJd)!S.CBgDHX/i]LHbI[H5J_r]
%h-3u%nn;)WU?$]oO%q-3KG@LS0+.i#>(>(Q\a@>&T1>V$R0d*<aPUt(l?==s5Cr*]_*4VE#AL4SOA_K108[bmA*l*gnE=6LMt(5S
%bhaP$m'SiZMB0U(@"QlZ6>*\KbH%"mRb$B7ALu=l:L*cV<:U3np7;P;?*#/-IJrT/+,l;80(lrJ4M-j!@PfP1"N4os`*.WHiJ%#q
%c!tnl*TpTg=F+9N263ZmPZpYWY-lI=WXPWpG>[M;fK:+aiE5(H--gC-!VbCApD6eo3tl"O;S&=+1j;_,pH;lCB*HOCerVZ)`d:>]
%.fg^$7>+>Eit^@G!"CKV7LZ.%7rGaPf<!$$lpa'`R7sD=J0Ie."1&5[1I(o*,iMR,nRUT(;&o?XKP>ac68eO`;Jt?h,2D61>k8kO
%Z2tdb'#_>NUJTQ%P(_;tNpRJrb?q*DKCFBK50.R^es:(TImfo*',,c2]G0_U"=S)VD2Fd.1?cDsdZ[2[o1+Icr_dD\.kF@jE=4'<
%?-cfGT9lF7>ZJO$UCb#.4!ePPrBC!VjINToVLN*>&nR<IK:BDR4]OL%P-#);ag<TSiJo,?j4]gnfA2)]+>_T5)@:p1<=aG>9Z7Nb
%XS(P+!(Q_CF8uCF@"Q[cT2g+7C5aIHa*\L3XEbl+Bhkpb4V3I!L41C$OjO7E5W+mreTb=?hkCVG-X_%UdjC7s%7U]U,,44m:;s>t
%<O^>TKH?uH7a,CPEtBFI^_*gX8+6;]6_Yoh9#,G)I8i.ENcElP7?V__6rS:o*<bo0*4J,j/l5s%oa6>d^\MP"<)uc=`92(?pHn`W
%U-N%VFfKAW$QJh(HPC$n/;'t-0q7P/8Q#W\;6-N+4;bJgA+<4%*G;2B"C'(jPWQYY$0)FggoC2I*I@L`!$)>%)K[,gPkt%MR?Yce
%Q8h22!nh5".9A'W*sdK3[];e,`@Nj?#Z;V+Br3'XDj;k1)S6\YkuQn-[C;"<Vlmd,J+*$_DP%0ia(!>jCJ@ej2nf.n)$=Y?bh1C0
%3K(/)).6^Y:pP?h<B:(&lQBCH!ALI)RFY;;Jo4q](+W"QK.tD[_ErY'dC?hS5GNP3)cTO1_.QUH(UP880W$b'"ufc.%3:O97Br[*
%;.c"5]bXJ=!%1SW;aV1KT#sA#DqZ:`mOedi9'6L+.9VM2b%lpJ.Nb`-Pp(1trIu_.1/YAX!g[qZL(V_>k+2H+2oCsb!%cQK;-08>
%S`DMd_1:t`=Kf]KR:ThZ&eF&B'oK33('jnHj<B/.1ua`b-fftDFik=Z^&g2FhPrdRE)BRg$l23mXJW'<kd.KoFcD>FW2Ua"03p'4
%.POL<9d!RLm=WM*qO5RhL'GNZr++D.JmOIG)7k!l$TK]==_X"E/#4O5HE31pI*>Au#37b,*V1<C9QN>rTlRk-Q)KI2.F'^>j8;+@
%8"X.Y4$6l/j:HC3K3]/]Dg+RZbn<Rc8KcH/,@Ap(GCqZ.4`DT"-^0Ykr5YT]ekRe_)?-h?E,ORr0AX?<LTe1ZGeX(2k6(b6(Lp;f
%e_jo4JgKT$RBVQ5JS$p(aTqIHb5K<oTd:so1I2Z8NWeE!f[<Wi]U?prO]W<;bbm*-Y+Bc.3*?M+aW64W%O?/_F%apgM7D#;@S*fb
%QcG'(Of][=Z9m\!l7hSQ_TOaDDTl.F,:k%QJ&<-rjR=[ZUgd#&O7EOMlBTHY6s]qT'!]FS[^jsdHfsG\nL*L(J&);W#`99m4bk;2
%dk!C4Ku?H<?@+,qj:]/pXLodZ;\n#3mOJ3a9GN+ei?aN3:F$'9J63p=nuOYgX,,`u7?TOu+/G)oR,h?1X*DNU5oODRX2ZbH(0ciB
%K!]1AXN%33&6213@K70A7L13h-DZI<kd_tT"\UZ+r\m$7!@'6M9sQdjYT+m=S;Z>5N$%XdF;As`YVIn&!>o$pR&;kp)t=(_%!d'f
%9HVt7A\VjF64SgL+l_70M+>Z%,@SO*_![,0g**VD/aQne)`0Ugg.;J"#)s\*I!<m0F\t97fD0UTi(W<@KIjZ"#6hi&/up<J,"FVs
%bALA,@2t*QQA,?-c%'Yhj,=duc:$170in)q3,X:^O+TYE'l-*+n%b%\2WpOJ/)[i>H?'-%!0qiR)pU%%#gpj]DMrOXn=8R@<Y8XR
%/1bD):B;PiG:AfR<UF7(L4nf9:lqJ-iYNHc)]!IVD1gP3+GZ#q4\%-c_NHQi!&-gWe02XZ3mF4I:j'ob4YAXoY%'gY<*8/r,=O!R
%AqCg>'!6mf'fC9bhA#!5[P3k,[9K+GhW%;d-!:CdgSSk0;ocGJrS5otrr#d#W=;@9mo1!u(O,Q'odH*5%$*i'QVe/@`8i=aK,oc?
%rNJtO=8M>KD19[k>pac2[EX1tT(fNaJr6-`#_(H-'1r_L`P*q6Z"?SV[4f]OO4C+"U8\d,bDRjdkatgGnn1scpDUcL2LhkMHp%aP
%F$0KHS)['e`Gr&QJ*sk=Wq)'dXk,bL*e`,!kJ+'LG>JH=Qc_Zn`JPQd,i;.L)+l<p0[S='aK9L^6e53NOY*h2E0(r.29V[O+g1mO
%S]DNt1b"im"\BcDr]ics]?lQHictr3,@jiB5h<qi",jVN%9#\a;D?/4ks>e4hX1C(lu`\5Qim)e)"#-l]Ofk,)t88qIA*,k"5#*N
%73QlY#sO_hK-b;;UZq_'je(JB'GnS/gesQZORh(;UIuC'D:!KnDKQpCU+c#$bm0B7PGST*$HMCk_<@`X$'q[f#-_r2CX^SthJ(Jr
%dKNiGF<5L8XqUT;>d0#!<n.Xs)hZjA5W!,+^3.nGLJ_Su"b+-V&(PFJX&0/&!:h4=<2SPemuI3eDN:MVd*cksaF_Tp=FWa>cEu3-
%5hWJ?FBe9Wd2&f#,QI#MXJHO4\c[cj]X\shagm<O^'0$ir!+HFoG:jtaVf21I<[$lBaY;9!tIU*1*O\Iabj4A)F'7Y:^lW42Aa<a
%(fJjrSmL6+8@Q&S[TE,=fh599n'D[Q@Ki\NLSi#8,:;*t2K@?(S#.rW&$I!#F6`_Z('I]0fNd1F0b/li"g6<_'L%3Op?g7k(=2E\
%EkMO=2W67i6D5BYP;=T@cj^jm`Y=XHo+.o.alVc7ioE#Y=]rAr%/h8O!IQ^`,9+`Y:fe"@#2D\(][i`)rH>Df6b="4-R::-,1R>I
%JqmruHB,cQG*9F/C.+,gpJ0%;,*HcKaoM3@"=o'^c(%4hY!7E['bPHLAF.1ZXlKCq]''fWl?TU@kG/qp"iBCTX(_U7&U4dmoWV,e
%YUI@lHb"F^bPMdb40MU1n0dO&Oo8OX9#qX0J@@$*).8.L)Xg3iLuBVtbomP.BpIn&!K!.nR,T4[S7j/d&4%dL"bUpuQP,^^/qa%C
%pV$%.]Z(R6"L]8]/-jVp%dSkE=_`Z.LFfVI<obFOj5=W.h^u%E--7)BmAnpL<\fIZU64]++P-E[14=h]$-AtD+kXKbOO3MS,u8ik
%,*5:<T3sL$&.1hh.$WJNQtc&3im@-h?fEQFAM@JMh#]LVCFT>IfS%XA=q:lIeias(F91_=%LKA)\SN7+?="'t/%O92hkG>J!9]=\
%nM5@X4PB28PsA#6j18[u"F:<L?TK@R;7^=$Wc1pY!0DlmV+Bid2SoEk2C)/Tg,L$VnA"$m45Bhr46r@0<jq%-:lPPG(H:f3(*)T!
%jN-?m7D&&4A9/)Xk5+j7GP>n;W%W5a.Uh9VJYrf,8r,Vbiu)XLo.h8E.(s2'1!Gh\1eLX+Z-O=)a2$19-<,L\;T+,$FlU9+;ZI8C
%aPP"EE\agLKT(nMh+C`O"H>?MA7C\H0$75i?u*0+\?QZb+"><$pIGGJb@u73LsOPu[PP6C0g$1%`DD4^`-YejifM4pNZ3R+f6:Z/
%6P0PCBKgQ*H(@b[Lf'@:p*4A%1d$[]m[;5)Y,G;"i#<_J=@HX\p6oMpOir]BoL0YQ&/Ha.n^\rKP*&c/9g(62Mi'[:?*VEfMHJF-
%SB2)?:Csqd23PMra6WA<PiOb<=Qen.%4V3@B=MW\fSg/kn<gT85j^oF`fc465pnq87DYX,g.>_q6NIA,=AkD=:!cl_G7\PpJ_#W&
%+i[N-fo=<]m39%(<c\Zi`V_8*";.C3Xi40UXFk$q('p>fJA"lo1L?6\'8_:SWk51@:%q::33R,hoknW\kX[k.QS3Q;f?;u3hc1E*
%KmtuR]47cc_t=+56?BGcHj^AW:/%MEImmGpFe?]pnZ$-WAR36i0lhN&AU8sPA":SLd0a"Z>!g1S0h/[9RhBKe6ZNbB?ZC+-_%jA8
%TXn.OZ:bN($D,W3D8]>-L=q"jVc#9%Y^IPi>2UIV4-0WbGNn3N7q)Sgcf<m\'<\i,0u3L"N)-oC"62.<f`Qhn4I`RD$k1PI\;_#(
%9>4!G2e0&4kC!q+ImdCp7lQ)\1bdbfE9u_QKgZ/Y-TAGR4CX[*#-O_;L?#<RE\DI.(J0t"daj>0`bDJsW<eF%e'*<WlR+*S(TQ&M
%IP_2X[0D'@Z_ZIKIfUqP2lT'B.0[KrQVo\'cV/D+8?1Qr\Z+]t@ku5?S_\k:6nmh__[-Xm])XD,(5CRS"h&\gUZ-*a1J-!+7>=5^
%UgBTn_m`0q:%=4]fZ35no*)r>_PP?@L)FA7&"/^\6NnSc0Y<a+R`PmhQTM_i`\.;[1:.)3an1l!+qPa3k=6W7nH4\ZS5j(oOW,2'
%FN=XU7"?An@=_d8[Mn0/DHSZWi:+Su'kk5;P"Pd^\:(IM&B:-g2tA"t81QoIFLU.M'5!N3,8*H/_)go`-<J+N5%ace\Mfd#:e'UY
%NYO%PTQ+$AG@0&=\`#$a29D]h=TaRpI@:>EV2"VF*koraQ9L/rJ%M0K-?8t@gbGE-huC*.R'D#A+pdCT<,K8hK\]<iBG;P)Q'(eD
%l:\r>T$ph2%FgPiU=^2W`'d)6RQ\j<SQ/')X?(L4Ui:N>.f9%MTsP_5jo&7P=kD-PM#'.R-Fc8.4W)F)DFp1TIclo@[CP/jqlfI$
%Ku$q&8jqN3!i(HTll7^,_"?L.Tg[nFUCDs"cNK$LDHS9kP-'n?b+k^4k!Y?F^T(F&bl3Nn*6p_f%BrlD5OA=L0lbMMQOa!-%5;lZ
%W2b;*^d\i\'uKZVJ@0,^qIY8o4c8=fh5k>sUfobS,(0BG:^1%>4W*qHblWO9m$>n;_5TC2@',Q>GHnSQ8Vtgf/ccl,l::_e#ePP(
%RU84XTPV*OE;`)Mf"q,J`#4%ECbN/3eK7L=#a:[<[(L^LJ[QM(ps%AcG#nnk;d#&1:oEBnl2kZU\.huE$b'&R!q')*DQ!9>h<\lN
%^_'@$CZ(OiFtmqFQAoj%G+g5l*JSUlXY/u*BcNr7PLJe([(<g_phk4WD%P'>lW[C+(KV&oZaio7,+EB?mG@!"qAN/[dMJCR#ICt6
%6LSbDXd=$WYIhn&+A8),GMh&kq+PX^)Q;KO&h+JFY-BVJ/M?mo#Zt7GKBj1\.YB7n!B/GWqn'Q7[r-+-&dI]RUV2@dYh0b=CTK8Q
%o.GbnP)K!@D.-RXT,5ZXbs:3l8:ml9O/<\1a'l6[5U;sNR6Lu%Q%d/kIhrWT[$Xk?H%;<pp@(;6TnRT%+hd?Mp]I(EM`m8XJ@q74
%!'iI*rGEXLfGb,>Rg"LX-uiB88UQm16OR#uo]5GD!Z$:Wb:cnHRs'9<Zt]]eeb8*iLKo>=FRL#[AiV#"*R--FQTUX<cHbq(bc1pM
%9[=N7VhuDSPFKa+cYq!;@q!k`'#31'OAo!01pVjh"HQ%t$OWc74tU;s11mmdP5I6D/$#p+X=[IRbDIe<<`ZQnb(Gu0:bcMNf?MHQ
%J@<co,7?9f[;SN8b;.%[,7?`hCHNM<pp-mIA3f*UMMneKkp/h;#cimu/rQ!KZQ5a3h9&&aJ?MHnbEfpsaiaIEF%]Q"=6\FRB'%8_
%aIb/m&;rmb`(tGlEHSZkqG6Wu;1#"*I;"t>jP/+G#pAg9$*Giu>0rSO\"Dg:Jt[n2p3n^%5!#RQR5H%%XaOO8g>C/V?a?)2[(?Q!
%X$qq]m,j83;(kr\L^VAQb/11"4Y8Ql.k5+6,`&f(I'g0t8e7oQ[oWTh(.$mW#G&Ab%q\kMB^50U:2"n(0)insZYEH'_J3^`=B2LU
%G#k`@^fcU;UjQ6n1p^#U+W&5,T?n"Z98fT>Gl1!b'[Kkt.gs:kF?o7Y.*A6YOl_O/FSg#1K`4X5IYhYPqM<ABK:,`-VKT2L+Q=9Q
%>?P9Hk)8onKfa?4ZV:/l&YU(GhD.`I6OQJf/ZsgD8oN/"ciP_DDK.D3``s;:f)R%rgKcr\=s,F&q=\]><T>Xd%4qR;GcM,+%'=7J
%U^'8Fcm,5+/M.YaQefqRj[d^UR0CFh17r.o^2'`*>#7V;=KF(CT.g37.1<Da<`[2]?Ku!2eY#==VjeFj9<tk?['HEslbc-K\^"FE
%1p\Z0UrL()Rou^s*^,lnKK87E27)$!c+<^NZa)'jQr;\@/1`&M=^tUk5"-t0O+F-VZ*Nq4A_fL_<Yh_4O^u11=U[IBb%g[3dE7'D
%%)&fE<h38l]QnB5=VYb`DjjffA%J.4/;,YTmq1/.\sW_`"aEiSAeq%((q\GFRB"D\h<MgB>@TnO=]cH9[`,751LsZ@&tjJCO8^KM
%.Q:^@'q,'1r#chfGFuTt(J]tH(8D4OcQ=?fZ\s;8B%G)bqWmYo%k--TWZ]S$*a,\.UAb\2HPjE\`8V^C@On%XN=HM?q&oa0K*iK+
%6NI.JUQQEMU5;'gOAIMufUI\u(DXQC'+Rjn78c2#+UZo:#00>,EW-$":Lp^$I4-YFedcDf+U("o&SlIf%IJ></p@(s87OA'-se4"
%f!%CW+.jkUcI;TK`R<:$+sh@^bX<WVj27_@+X0)Q7+J.WrErBZJ3#lkSAaKRUPTe]<n5+?M<!-nD$#o'M&2;I^W*Mi$F>dI3XJdq
%18ut*7719Y4o)2D-hI1rAnA)2,`@sq#hKn0$.D&b4.^pta/'H7)tJBgTY?+ki'Vh&H4S![\=,u.!eIU%S'F]?8^UFIq-KFF/r/"+
%hocZLB"$;g+2G]3cS*W8PV8$:b;0K+]K`kWi2?=I[Z7$\/t<hm5M,#N(ja9dEt?Za"eOln"3.:2)Af1ea7EBF0cY"8;`YB-HU6L?
%CGUR#X@`e9b;_Bp]Y?_CYBMA4Z?94[!#'ZmgHKU);d"<J&:!f)G,[i44BF*3[qM[[3p89[XY1"iL2Rh1d%]iFR)SlP@c`I)pdTu+
%cs#HVW3Pd=6J!9no25&a,4OrGptE&BVo@P+W.'pSj=r&)f41b;Rp2#S8ifq)oapfhVT48qV%0V-L()u>hV<!"^l+9:G8C:*/<-XK
%Z7pCGD1hHC[_ODl:dW4B6T(i(s3MV9PdmJog?S*RHL]?2Z(9SaBB9]FpYHF8Zl%tJ*K0YF7fLN!&![g(X$Afdc>Yb[8gUc1*pZ_3
%LFPMUV#e@Q=D?.@i]=&8\2-H9DpYN6d,P<V_I2cs"pJ$N7Xs6e0^Y*O^MZk$5J_&d>057)6Q:>Q%m(J]bH7@Z-o`?tAW%m8hlL#r
%\(#E!?MjXn<MHsiU*5T`0p+sMe(eM\01$ea`Zi<=8qDCf1Zo#2)&2_9*hNok%'[f#Khe<]nUUKIBFc2A=q)U0!7nhS!'LC=&(<E:
%CG$:m`4M!u`K+pKlPs?GJ@RTKoWb8378\RJ]-rgX4OW.mV+&V3cUV[coZ$_P_G=E#`YkW^3jO/+pgqC\f=iOGXt>8kC:.r[C`fd\
%,5?:SS`k*t1\104FFJI=k6!7=pn1SkTrL"i*ONoVU<<4,m1:?X6fgC^[$f18o)6)U\l7p'M%2C<bb<]*SuF!n_+R`%E"=P@Fs"11
%QVU>._2]Vk##pb^o*9f,_52O.D5)0!CcX2(_FRq$^+g%0h".4LX0+reG:GqI6M9=4_;[5]%*rZ[1h&aC!BiM^DXaNsfP?,3qS_f-
%f$nj(h(R0F[=#=?Dn!`/$f16WbD,q6glP9TNPGT4hI`0';":m-S.I)c:alo=)/Skse,d](Xced-3!lK0O:B6N_+#C4"Z[$!="LU&
%jNY`\Urh7!gCMMpGhlqq5?tFU@%O*eOtN<qdl9CHAn.0>rP\:W"g/CkRd_ma,;?&YARO?pR>gu]:(J,_,?]rA=;NYH9(57_2D0^9
%+ufjd]r66g4CO$P?mq;n3>^@`:C24J2p!PTgEa2j0(h9dSrZde6J[+oD[[aG>e^Iq/0Ph3T8aQOE@"rfB(3?(pT\I=W,p8H3!FkU
%Y@A!X@oj^h-KEjZd>s[?!%l8jI3;a>I-NJ#8ERm8R2Se_+'K14MJD'9CO!9H4W<+o#+DXrNb-m4>?g;gPg!E;19^T-'"@CN=)+YQ
%+H@f'qOqm/gt'CTg=r@%WVFYpZh%bW]!Lp'5r,"^[VlQXY6DR*XQ-O`d]]g;rUg*Ff%+sIhCmFFP.k)n[i=C?-f+4"bJsI!fU0aW
%9"EB_!QWn=nG]BV!q>]9$kX@i.;^P5`@V*A9hQ>GPfU^/A6%8A:9r_FXmn]4%Zd&K+9V27\r7Ve#"$)ZQ(LsNfo"6ccP%"fC9<O1
%`%a5H&GpO=TV<MlbR]O6Nq5UjMW=V&gf,ot_s7-Zr%NeHS=efa=e00&q!V(N&uhl-<Lj3PTYN@pI17pJX"jqRc]4icenaST6u3s#
%jurhpo-P^I6(?k^&[9RHi+HKEhTX#!dAFX,Si2;C(skCgR&-\K]$[C][2Gfo2;-\VS(8/)\N,nM8gjAQ:o=LfHtd@'F_qLKd:(:i
%?OSD7E9A5\*u+"o2M]^60+MAG$)bf4!6`Gd)o"*I]1-)H@aV+a'IM2*6OcH#e$p@uB9'T>%mucYRm0ZJoR?i.$gYD%map]G4^Zh=
%mG>A+7(6CfZ6t^%'PO$k6?c.mkeC:9Be0TA*>L$/Ck/(b.+7<J%lG)9*9L=&U?\IDiFG<gI2OtOc,0^61VfV\UuP=4o]pdKWWg6T
%+g,>J1c`L7>:1e:>d;K50V+l,-E!MYju>FSqO?.eE#0L,Vo?P3c[[8*nYAXp=#IgI*TrQ6VtDFcH(b3Ae1a,=DasHV3/I<hJ^bsA
%irD'$U)^Qhcm!6h9TZ*gh9<hkbp6$7NR'IRBD^"08[l.#1eH;bT/9-k`h,"XO"^LB8\2A/Ue/.X_eP?XT\+erRj:c$Vfq$H6&!ja
%+e"<#G.5u<j+:uIFf3J'7&"p2I\h:==Jm?E3pb<nIgEh[3j*c(jURc4=e_gBRT']DghNpi>aJ?R(]U:"Kh]'-d9$Mr\S>"&J;9=$
%%7LCWM\7>L=:VqU`GC>dHVpNB$e/r4b\/onFaQEM6t8S%?p;iQI/<YWDK_%TFGpt1nrA#1;>r?I]_i'-=$A+^e-55`<2A_3E3o;Q
%jf\0@AI*f8QLj?]Nu)E[NbU?V_=;,(^8j7$*Y!<1nlYNe2i?*'+,nV#r+_0olbsXqg7E0/V5Yol[HZ'QSS`RDFDZBOUJ"NA7$"NW
%%FNjP[mScUpB.[9d<-.(1NXH^e<MXBkhq8%YLEmpoT<;:r5VB[@VOk;IG22&+Eke:`rkY;5%F/]4UP"Ce3P,l4&MX$4\D3ST(XT)
%"T\,E9kJb1\/Re".o9ceTTXZRTK%pml+C\+d']-d^<i(-'U^e9$7,rLI\DNhc*<m@W#)]<3h/h)]c#a(C=#<6ak,;#H2a;&SWa+4
%5.-RU"WmWY%NR^5aE(\\B@WfJoI&;aE/*^BX5Xjt8&0&u)XC4"EDNY<)FS(^SW</SL_b[Zeq$NmX?/Mn)B\<BCOS-.b7%LK6[IM;
%0tK33b&_KG1.#X.h$@<?*c99+l"5Ph?@+@lBA:Z6?(/J^#`J-+8)TjRTFk_KiI$V\5u+QBZ3/grBml.Mo=./gR1RPN0,Afg2[.!!
%HoQ%@,h;%PpW'_XEA'(BGLE*L.$]_i"N+R9#Q5OZR<[/P<P6b<rWK4)/,MK$oA\1iJ"i;2A-;.:7Kl;#7bD;aR"C8ENe%Y<l+uF,
%J-A8;.W[8UA[2'R'^.8qRQ%&/#GjJ45GGFZ)g)8BGM],4r6XP^WZW3"UB#>DC_sNn6#VqRkt)!56jRb5??9HB86SG^<C_F[QQk=@
%c8#e;\RSH1;_<qsA6%b_2)o<K#g8b0ONhV_3;CHf3I(/CgS>tX'QKs\^_.V*cB%-VF^FRr:ao#rh1;1"CsQ^;&NR\dGHg.k,]&iJ
%<)lE1C#>`.M7G`VB]g+tpn@Ho6#H4t)+12Q2I:a5HUaU3?&D\?2J(LNIBjSd>&T\r%W$2%ZBZX5Q>mOZ7?P'hEl+Gq7M"+q1(.BL
%\$*hT^_X_&D4-)%<l/tp9QZ_Wfl3@5VSqA7(1:pf5%fEdOP2>V.`"!/ZuDZ`S';#Y>0[1BKq<)r9SlerqiA(K;Mh$;^hosPbMeFl
%F'W-3X71SKhQ6%4eUP>.DYDQ8Y5?`BXMP^JaNcYNi>3.VTH<D7(5B2Cb:KP-(#$Q0<nG^>n1<FtWI#:u:FTgP\u60@WNcXl+/L!.
%OuR?p50[SJW+U^:@R&8?V#<2K/d'n6.@QqHR2lkNK',J<fh3@SJb^Co?H:rt5+8!+f\F\N6["-8[DT$n5knDP;/*k1nqO"u$'jHE
%-nQnN=ahU4)TN;3rtmeS9:@ACI^S_/XF3aAkZ\;.$ZhpjFW2nX^?--]PYP>c>R8q1q:Y.'e8FD^R6AGqX1>[V&-mWN/B&AM5IAF)
%3seT'Da.rTLduW73O7$B08B]hKEXieV/68Xn?K*JR>hU,Z16K!`;VkW"s#`7gf)rY8,E&#@=6&i,@Zd`EGYNlBV76O6-$64N5fjH
%TT0?8Et;)1a';<,(ZWdRRBC'lT;6LC9FQp([JR1G.e7XV>8\:GN/4RY;!EUfot"^^*Yp[,m;_q<d+oc;8b_)62JiT43;;(:mGsp$
%m*FpG4KL>;BA"]B=BYi&ML^V-<t[:`.dSu61C.)T.W9?X"k`&0MEmd=Qq[;#9f\LNCj13]e>Ylbm,bGdXe+]fPW.(]X&C1]l-`kH
%+;CqeVU"/%i'B?!YUO'i4s"dJE)toLR[8=3;VN1IE.$A!S/%.TaT\1Od+_"4'^W]0JnY(t32,a/9p+UJB/.'E(h\a28#gB@FGGU;
%M!WBN@0T$5S.YCB'?tkr07IboV:&JMKeg!;fqX>S5,@:#Hd$8(Tn&ao#!`&F^*2fP&RkC!RJ1^5R+ht)F,N$5Z1oJKFs:CFds=\W
%RY$qUE.j"&/TR5]lb's,n[Qe/K:Cim3!Tm@g>O^j?l-n>.?NUI"4h:VJ8Qb/1':iFQLf4IU'/#8Dt80R'agTlY+$@=4f0gq`d"Gf
%c3$YX2ANpfa-g[9-N)rc/[Kh2$hoSAAoV*Xi;HQe>LV2hJ%J)9G1+Waqo$3*-?b3XBO#%J8dn.^>A7FQb("ta*$\#W'`rln(l^[Y
%?;L+M\t3g,7aM5;fW>qtPK]ldO\)!%Uu7PTE\D`(EFtM($4.b2oO8h,5W:dE8\e'Q),7q-&eqQ"JY!X1IGluY!=Zn%.QaI+_Mifl
%/SZ\#Mij46IS/j,.SVsP'=+XQFC@#!p5St`'IcZT\b1uWl3+`E+30@l<I$ioke0[!UC\^q+?R@nNe*##>Blan)C"@T*C,G:F_b1$
%Z0cJBNp_*?VVI)k^cjO'd.1TRKnYrmPQ1[VhP\DX,e4Dt$fH6-$P,@A,Q,=R;3S$aKM=]5<]^jg_B:ia(W`BX;UC$QIf6rm(?+e]
%HFg_gVL+%b@*k1YM"jEKS"#n:4aUd0r26TtR'Ld;p$7ZJb&M_#n;]KK[8op<Y>5WR.:t,F]iMP*iH?rAht:0;;Pq,=C:uHhH@Khe
%J5n[:N0@=QG38GPkHSEV-aRUT3YGeZnA#B.p4CLP[@!dWF.'?hqQu106"U1rH/@][&*taldom%ZY;h*5^[e[bnTe0<ZRfW$&dbU[
%/EEgr\1D/9"JT,,i5QO&"]PZ=bP`)M$oFT`7gtbr/V[kkaiE\bb22K,G-"HC:0?$[hD#6rXj-Xk5aBoa\ui$Bfu$=pIH?V9"KnY>
%)aCYNMb8b*_iWP(k[JZB3es!$eKrbm`UY3Y,J<(l@9j+iFi&lr+W&=[5#C3MH*_\iZfO'RqdOiOKm=HW3u8Q$EisIFo#:0#Mg\n_
%n+9'DlFZ#Wk^ZXTam^(F`QQNEq?(Zrqeb]fO"UF5jBZ*:DUf`/B"+?aQITh(/6>'#IbKuo87PepI'<HQ/iB-1>^@jsoP:-mmJ>IV
%h5=V+R,$/#f<S1X$6*/Kds??*j"RP=G8Z*QAT5DkNcVTn;,+8IAf#I'E&5++]m&(.>dOpk<F"'lmp^IBhql?=AugPjbUs5Z\$Obi
%g=Iui[k$BV0tTCQ[raC;Q0$d3+8ot1]6C`.qr6uX#Ghbs&-\)@Z9/^o80!,D'VQ,^]B77FBYc5PVL\3C.B4:eY);B+Z4+[I"fMO&
%TTCl9SN%rQlf@gcHkMZ-RThel5?LUB[mk.>#O1GGRdUF!dG3]:`pt<PM3p_10D+$<r)j/\l;jj=OmtJCA8rZCF\k.ALk]L0!]uGm
%DEjD[1Y^R3/^Ep>Rm]7nYN=Wp?Fg_;$kos,PTcKUJX$kS`Zq-\;DC`ba_n5:l<B(c17AL:lYDE9SLN971dYYZCORpV=oukN]<I!*
%7r:!i;e/if]oK>sC9D^gS9$B+=Y@^O'1\7"%ZeRifg,!p*ucd+#j.2D+u#17;cKKP?2)AOs():DdBA3g@'#lXWLlU'k%,\CV:\cO
%#BcLYp/k-2DTK\.R)$@"TZ<q^*^p\?[9JGfr$5N!1QqEBETdZ6ojh[(5KZ%/2[.!3n7Ym&+aXn^Z'+&S,pLd25`A?$p7qtfmX%%!
%4WGup?Gt,C_06.Sbp%bMAH)),DAC1]%0/8oM%j)!7(-nLS@*nk,=,4lo7%MJgHQ2PprFk.e?:.8;DJRe;'*].;AfK]MN#.QcC=n9
%kL:3^/s'LOkS56G`=7]&nT;aiB%_I$Xl&3uNNnm\'em\K%J2p1Jg:\CD,Jg`N-)l7\^:\O4_49nQeC<P%4grrE#nekkDFl/)N6qB
%R'tOk"61#9Xc@5&>gaQh:Q$l*<i;BQQbF?;J5H`2VC<MY.VTQV14X^Ump+l_5[m/0V$*i<`RSMB2pEGY0AdQt?UIZ640.XUWnN@:
%P/'FR7Bs+G""B\oAo*s).Zubh"De]>3=NSk(MOJ[rq$-'On=^=O@/-D>q'*J;WnW\1ZWEXQ`Zb$0Lmr5V7AK0eC<la6(*&B<>h^k
%E>$/#&<+(6TjG.C0Ma_eKkiq8'DNUS.`pJhZ'h;2[tXEH@#t]E"C"j8Mj[3O_/.>N=K[5Lg3N*gEX:%.k+7niiqMXd]e7q#iSS.U
%-3Y,9VdW'2<u]E+DEKh0IN8W)Qe^0V0C>aK0/DF)Y^S_n[aZI'.e(^Xl"V!sr*NX!AB!\9ltf\nEL)47PPOi2JA']6B%ZXp(iM=J
%;uk-tVL&$+7H>%\1gK)KFr%;`C*<D^g!dH0)<>FV8D3@W(1?WT>ss6+;HJc%aR\#d/tIXB!FD;2_5*8Q-71d@iHGDm23^44o@8ZH
%d7Xhe#$AV#0jl>W0`X\'1IOWHZ2_@ZS;@Np@i`2+1;*?IIa5m0j9#bdS^]!5OYYFh7S'T0OB#.?.$DqHkqd^SPBFg^$tY'o!?Drl
%M7O.S-uU\AWZWB>i<+cQG!#s:raYL2"\W]LnKLSpEV:DNI%+'g*E%-H8\])V&N@Ue*\RUoB%:)*94R5fOk@E!@N;$ja61K^J2[+0
%_UFZ[eqOgQ6Di3!1\#;pn3;GE*t4td*)-U9e9)V1e$`]cBW_O7l"U>%E#$F=Y;`QFf#h$s%kfE4?7ps6cHU%C]!'__RaU;$AG/M3
%rH`I)!kJ!`"=-hTpM1Ko^-$US7>R:GP@^c?(Op$RGkHm_1)<La5(ns/1:G"32qD8pJIS"7g[l;,g:R>OG4Z:rh*\Mdg@qPA2dLm\
%pW%FHY^Z"um'[bgc:cZ#=7J+fX6TTgJ.\o/@Fua=ku"@%ju:u4)^eO&X3gV/MWtAT;qY&aC]r))-%h\L[+0il[]cH?E15M]J&[3Y
%a'/%Y4%+dF8Du0'$h/J.Ai3tOWAZ863)>Z)iL:kUMP6smg!6XDIZ/1YG+^T"mNUBG@NiT=QMlo&SLT>2%]j>03UtpUBfu!hU82;g
%MitXu`Q,Ap7eDeB"jQl_RuXZ;bJ5SHDLZqGYBaD;D%8QiI3!sNf7^:%hIf1Z$nu>l(sgI:<US?+9ap7s'b%pHbf/$h;4XE46*#;d
%1SgN$VlOB"6Qt[2Y;\g0%H`[]g)l>-mdqq$MeVYNBR@U3\[GT99C&u&^DcMV2\f5_0:ldfmM/4W[0#]%+.T6tV9?i"R=5&%(Op$V
%AAn&K%*$nu@/kieGZV#Zr]TQ2K0hf%rU]l1=@i2:G$C5Mk>g1D]`;P+L<X$V`.d+d`8bZ!!lE5dTW?QpJR_S"nn!.+=V-Z9_Y)BL
%j%$J'oE4km(!UNqPW=e<OFb(So%fbkg3%d_;8^br.`[2eX;*SqJSM4$(l[dJ]8/f$Z'Z5e<arZZn1n!+,hWa4b4_ct4jY6b>JLA>
%Y@W4!0JW`]@ZDO>Cjil"^O:L[f<5DKqTLY[;X]fqqD<.]V5Sj@cQ?DtC9!NW,\c9:Q[\h^5Y&;-ppe)A&\):"!$E&<$\7=dW?u<B
%'RkDqqpR14EBC!1<i:;[q8cmER*-7KA5*89Rtdo$D$-RMn#jn92XS9ZRhUsp2WXpsiL^WpK@L7)5=PC7.F$9[PNH+D3g+@'F$cTX
%WthJ$.@om5V2]4a0KkVSbd/dF2B[dsH/:iECa?;(#.lA?4/M-nf1ZO'1r`ucPFi6'3WVHN@jYo1]g/nYUt6(1*Q8?@kJ+56cI/$/
%,0ZXJ2FcrY9r)r^Kg(CQ@N#;8PVt`MZft+90',>i>>$^l(9U['1KE&nC&10)X=omCX^k'eeF&01Y_dP:<pbbGR$>6SOs3*iqDdlV
%`2AH#+WJ58N2`W;mq/.!k%k/K>M]='.+G[U<!+]rFgqcsqf.dNbpiC5%'RnYI-IsgIda:e[h[sPSNie_s+7Aajh1N&J(GM1G^*=K
%V]Yq`r:0O%:OdljV"^dbhUd6>O7lkC50h<`.8t:bk%4(2)eK$G+(8@8+H\;H>8i6gVZ$8.p@/g@aH']GQP&Kik?j2:VY'L^1;:5)
%dq`&l(MoU=Fa`kg=8@o?/5GbahuEGT)NH\E7I]f?$*iN.7sh8)I%"</jTV4lrLEhPi^INVIJm@HpVg[:+t)jgNnOY)"[C;\l%JjO
%Z'(L`GFXYN'F7WUJ8or"X"WV]"O-nL-1(S[s5WSIq=hXLs8>1\h1,CZs8'e9p2C!/HOl;>k-J.fkPsQ^*C'E0?SK*j;!k^%o&TCN
%cD2$2+?Q^>L[EMMl,P].4<]Q2qt9KiheIc+>:!j`>F.)D3(Z4-./]o>A3anD.V\W0;W)N'kT>.sm-D!mp@H=RY2l8>4=oF)dI_./
%H!Y''/:X3XC3]X-dhClEZ\JMQn[[Onm(6AjBo@/=a!*s'FW16[F>djN=ikoN2IVMN+.rFQf%5ELl0I[8nW+1RdJWdS>8g3rFQU>c
%/N_^@f=T[<lVDQ+ZU=BZ-^+noc>g2o3^<:u?tZMerF0DjP0*B+<7q\op8b/5L\#J7m[o'0/`I@%S(_a#^+Q;Vi0[lDckS?cI=1Il
%2mol^d(>48AH9DMX_LoDh*hYrKY'IXkC,d&lQqK+><C?*oPA=+[H*7\f\3DXqs39`^V-a<C\R4P0t@umhg2h8<B+IJfI^>hX[7p@
%@VbqQs,LnIn>?Q9SSdc$8ce#bB3RI'!7tjf>6V!PI<t1f\$`"o2G:>HP?J)oCi)<^I?CDq>BRQ*Hg[N?XW=&J/)b5YRgs:J><>B<
%OtTjYNY"b^?QYp;8$KC%!ck`WoCkgHHa]q!K!sVbh3;,hI=1Il['`/a*ZUA]<O97e>\n7UGIrc5?1%4M\UO`d$X0ZsYI54b3]UHI
%.PPGSDW0#9Wijsoa8UE@[9X*sMlA;0R(ZVU0!sVQ<702>L3Ri`m@f"493VGF\pCc7EI-U*DH"q-A]2J:G=t"t^#Z4qld,McYd@Q3
%N3f?$;=Nb,V(GmE(Rs+mjF2N)m^K[4,74m*Z*`W.VCa^6WF*M2$5h\5a1jb2)d6E]fOMO>[='HaHFC3PFZ+.U]0'M*jfP>Ze=QP-
%YdCX+f&,kVcJN7\_qCp('am$-V*PCCf>m(RMG<J*rOK_I1;5uZqri=$Z/)klUfo)j-urBY4[BnN!_DWO1%\I,O.S^2&h*fR./+u`
%qNR`'ReXhJ8r^IrYE-HlqFfk*^AtjMIZE*fNup)M%:pbF#HYfGd'*`8iOQ_u0RZg3a2;P=4R1#bUQ2uO%a"V2L@9"RpSRCdC8QI.
%N$$JS7=fL,K;?)p5:Jbj;GbU.9dlPt2n4nj0if#ph+BejPt#!@d>-oaia_(=Z<rK^H2-B[8"KJB6?sE=pWni[f@eNUm>?;r^W8Gq
%^2lb$28(*iPtKSR'PBa#eRY)J_R=MRoqG%cXNS3YIWTA*_Hhg$`SX+FgP&f'JbXdWe<1;!8^l,W2pnaqUA:'BK[C+kfp[]U#k;f)
%6FOiQ#*F\5Gg<MX4k`nrZ\jk%d,PU=-G9'N.\sICX9]$M(nD1/1ArnUO8*(M2A?coQ&MG8Zu/sWeE_QW>,8^tWRk^`Jaq1*RuDV!
%ElUTC-L(K\Idsi>`HLM@VIE5/+$XA=K%Lse@teqs9]ta%F+<_bqHA(,iJToAFlrX"BAO_#kP]HHH.RI(Vd&MBZY;kdNE+]16`LgN
%.NKug`f%'2LI'!rrZjQrln%#,Mf+g-d*=t8%TM`#ILNRmFU5C(CTt(>Lsb7a,s.pM]KY%("rWmV4<n\5,!iK5+QJB!Wo0232S!+\
%k-;#R8#(Xc2O'R]D_X\^Si9#IYM2>7rb;2(L'F:5Df;k>U[$-QOQQ.ZMHGWhM&c7u-N<eEG92hdkFG!Z[Z&k9pEJmn/3Q)$O^0Ka
%4'>^IbIs6]h0'!`rR#]c<#E>Vbj(n57;jNc?CNF>=R3@SHt3q/ShD-u#p74L@Sl"6SXj<+2JVr'&"\]Yea(2nkoSH7T1=MMX*f=9
%Mm(e=',kN53)eki,5pOO-2B:UJYMV'g.LKf``,?Nf?hcPgK,kO\Hq8HRQu%8Ct=#t6k%k$9iOEe)RWCs4:#.'F#/B'TPFX0:$"Eo
%XImcf7/`3*oIZ/m!=KQL'o5gn+k0e?Ij5ir/udkjU)6=YVl+3#1_j!u1WrL>dkHJD1tn0@7#9EVbOUc:LA9/U!)bgm[R"uAacnF+
%"r9^?$s2[m8mp&r><(;$!K544VXUSp,S;9sr33dND4Tg4Y#$3&oN>pMb(0Ih;)L01i&Zn(=-DP&,&`I8GVBK9G`i'UgOj>,0#bj?
%4.e*&]HOBQrY(s$6Wa'E<PY)*m5(&P%Pk-OQW\b%3Wtp11q9Xa:]Z`76Dntm_,m,HVhaO3-MFhE&1%ulGSg'4T\J'Q96r7tVae,"
%?4;0a<Q9MnDOaCARnE)=kT]#Jj][uHCh^W'rR)V,j\kTr'\#49Y/O#?eq2)QNO:8/G,\?_Sf\n$=ICen+qVFnhtD=<E,dA4>__3Q
%RaOF1ILj]7Wo(.O53_Zkeph:Wgm?FK>.Z?.\+?=fl5u(kU33Z.hBE;J)']F)Qo%>!qdHOC:8UU;?oTeYJ4((dKM-<2,\8'i[TPgf
%N(Onn[i,qO3d+XrZ%kVo1o:D#[r.m_Em%itK*`:=-pCOKC<VTEYp$1M`"4;%]b.]jRtRAnetJS@k7e)[9kTrX]S`Za<?'sib&UZ/
%f'1k=8e:":A>lN0WPP`?78_!+,X2Y4e,obFUiU!>m"jpL:OIC=%Q)?QrPpi9(n6ML2dEla[u=#a?"_Q>3gVdbU.Ollcp`hVW?5kr
%r@l`NF@40If"8,N`TX_T$q&3M-rI)Nn`aM.Sg1]*E\ir2I69-CDRP5s;K/La0=U\2.n=I>92SIj96n4Z43RA=/WRTVQg:Kc3D7\Z
%/Y1RLe$UcThqR8@cO>G@$u.d5_Un*/FC0U.A]\g)I-8aCSZW_(c#s?QKk.4k##g6^\IXWUL9ZUS*d4UEHj<Dud0r%D+"Ae$_9FZ;
%'l5d@@mCs(#Q+"6[MgR0f^pC'D0uK(7P?"!$IQV?0\9aJ4&f9I.E@16NcQt[(WkW=fTCqTq4kRRR%VI9&!ZOUFCZE++@u6TQliHk
%L9_*3i,-QR!TFCMrJ6a]A6%:'0NXc=meRGgBN+5=(Ap1cB9?YnN(8,X%Wf%'R'>UI!Atj4^;Q^sY4Sr20;]pfVrsl89oB'UY:#\`
%AG/TAS;\)K<7QmP9.sUnVhB-4=PEUt&k90g;rsaS9hmZKi$9)-@J*`oCKe70?,(?Ki$\5+[;@1]Kf6.AK,t9/B=$u!.U*K)pBC3+
%1;+r$F--S\ke61Lao'%_:I<QQ69S/qR%k+(6BIXgh6!Q>/)Wk9T"hH!2NP0j'bXHdqHa#fSU+ZuYs"UGS8LN0Qb$qE4t=bt=h<^%
%^F[^R=1/B3'Go$78W"XK:&Q809"1j98F`)jNd2&b8C@@BO^%C-A*FZWRap8up@Zj.QutNIiL<U9N%)Ur\k3B?@0:.?oZ?O#h?WIO
%H49B9d,1_b-FNYsR.[M']L_G9HLr]QG1F&,V7c*]8YJl#:\q^VKno?,0!)E5XKo#p\ObKo@W@N:U]rlTOSE"P<.Vt9C<Nq=ak#8?
%lXd'_q?ABEN`P&?#s1Io<!]g$UHt<niUW)Gf/bNu][@O5H%#Uu?T_TmohqCFeD.NX*PppD!p?PJ^b'&MhUBj?f>m(Ria_YHG_+6`
%b@t"XWk1KCE7>C1<+o/>AC8m\r]W;(6EtObAdWj2maoX,hV[b]F2*Nk@'g6)ZMDK*q$D%jB4_Gbi^N/cK?/N(WujjqlgQkr.,i5,
%14F^X`p\rqqu/V;r]H"skO-B]"HaH+/O_5rM&@r$Cq/rE(##Jf$/o;8NQQ!Mon"]KF6XgIB<A<$DBF>n(LNS;KQGj3VbI-"[`c`T
%O&6\?mWjoV\W6uXf;GPGia_V7+K+W>&:S1LOOGhYJco<,e"I@J>n).+/40@o.)]u9%/4`[]/$d?O`L)7\3'dDVmkM9^W%m\/KM0<
%HJeV2>Q=Z.8N5g<hX:G4ZdCHk#h\'Cq-Dk8Ao5q4K[-iaOsl2F!1TW"&2=5kkFja#pVuF;;kg.G)BllKqrs2+XFH[,%PF@H^?W)E
%8-q7hRi3k5B;>Gl*DP+<04B<Io7D/]XQU:Yi\&+<D.MamF`1-);aV_dGQ'dDAcXj\h[7mB+.aYg0+;V;q(R[A*Vh-\iU^!h%!S+t
%VTSkl>gU!OkCW!3c:&DemVORi*c?$b,5644^ul9`GqMu0)<Z8t2CsL8>VM+bSdV*Y:NPL5_WtGP[DBON#/>;ON1qr9&&[UpnM:sf
%7[Bp6_oTXVLSU?n]t9M^$"PZDL`g>(5t)A(7>.XBR%]<s)M;la.#MOA`SK)DJ0N[0Tu>#@e=qZL:XXi^c2+rIQ)NS?+\"iq7W/Ao
%PJYC^%S0T2TG]rpQ)P<#64_gG-t;b1jT9S#7:[hSO*g40Jp:E!Wr6qZ*AIK\`XYtp?K6LQ/6=i>S5l-JOG-+EJtbG&`.!NCW9iL.
%Z]oStlf3l"6GM9W.%jSR%H.<o?_[?(a^&!]A(a7+,<[Ce$oVa@\EM1qoD4[YV$9/gBKe45_U&IRmmeJ(R%JL"YIh-]//HV"I@Op^
%b?gdbGo#(3pcOJ*[c93&h6RKe=gSRg=gZ3iZWL3_I[e;oq\iSJ7=$c>%$Hdi0Z>Fc<T_M9-75XD,V^ri&53qYD5u9ip(,LKW[:eY
%\nTuYV:s35qJ&i]].2\Prcr';/>7iQG$C(^f6QQE]i^8*R6MRA5@??P06V8nL'HtgmiBNQ)L^@-V0!/g+`^<bPhMT<*;6&*HRRsU
%*:,5D98cqfb;tSo+g5.j",(M2Lg($O/*iMGehXJMeXdc83i=rAEc29o9f/[a;/hEBq\r`X16<:ac;JS(mk,%l-9=@ddI-%-Xg+om
%,BD$u_fn),Li%G%W4bl(IePp4<g]6`@T#6THl6H);S?=K).l'm5Rks'n=Qi5j6Wmb2RPQDrXDcKla"*:CWnIH2$>#d\pfr!7W.J2
%7B4kUnLVj4*^AB/iSDANjAWCQZYV4$-B4gBSDm8:abF+iX!6?kjlM7m2F"eKdT<XG,;b0P%A^t"n$2f4Q?lZ/%.r\"'$MsRWnN)]
%QW'H4g*+XG[aP+69knU7bV#O8$l$rtD\j"LDJs^a+e@3Qe,$Ffafjf=o:\oX)M_Tg_SoR_)4R@"mt-a<ZN;mJ+i054-E/WW]?CH8
%[*4gDIH;JFgXLso=LfF%aWM)aL5Y#hVpt=p_hYYd7V&HRodng\ng>kZq"2(2O"63(bOp()c@"$HX7)>9Y$(B'%Bi)^9ldZ@%uVdi
%<(>#)%Q<5u=d*Ws5=E1c>qI3U]?MYg1dI?Ni!V!f?]r7"DFHEh!%N6ZAgOaa!N.>*lU!H^BpWAJZ^bPgTUd,mi[XohYhu8!fUIQX
%9$O6]L;b1up'4A'h?$)>D<6<#6U)o,Acr6YOl==jLLe0H'n(Se4:c9Tq<nM\pqW6"2L,E[]h6GM`)[o[>Rs6lqlK@5[&[m8Z2'Ic
%SW;:A_+>K9oWuL`M)9H1RU<LCZDho'4k+<"k*ReXeFrW5KU]]C*aqRUma%>^>X]OKHmcU[>mf!3OqiH`)EN^*=a[<?Gr20-;M#+]
%4BmaS0GW\I!RJp,nEnV%_Ri^[MN#CM/EO==a16hUm[EIf[U]/a[E3dZTm5@)gOV<.?O"@;BVJ$ClfK519Oc'%E4QBaR;dHb%ei!q
%o-]`il8c+<;[:b6@ZeiA?tb._1oOhiYu.%qcD#'QjKl'l]5E+%T9&kkrn3ESop687^*_.RDt#cg7VA@Pl'VNfF4Pu%_RLp-6V3rh
%LH(Y38P9J'Oja2&_9.E(rM6BDBR`O^lt#1TeSJh%\D\!+3/63h\bjLkR06GLM)`t&G4-SCfC8ClLpfBoQ^/[2@tt7l:Q)F+Yoam=
%F!)$o!>3G;,XPR1HAT$_&j%n.i]:r.`C8&=C!g'Fq6S%VF_37q1Vh5AH*lWoi$`VFe%T4rRT>tJjA.X_p5h$e7M3*kLb`'sQQOIU
%B_Ec`2R9<g4>jSB0)oLT?rE#VQ/JAgY!u]ITDAMc>2p]fVQ@s8$5)<G'\*tS2AEG26fbBmQRW!ZZB(S"a*R.#[m?Z\\6a#F%a#W\
%,i7\K,,O+1C:ln?ESpWCBYV,S*SPXQY15+GX8Apf^U;2I?0_/BRmp8t$@u'k,3$3KX"68:-p?22LlF%L?gD>Vo8OcOJ2e>+=Y2W_
%hL+m1=KTK/8fo94j!Ts$bFbUu#FYO)<Qn1kB893E]/8<R,HLf'FZ''!hh#;mq]*(.9XAEL7:lIs-\*:78+<8Z?OR53Pt<%<YtEo)
%Va:MH59seBQp]#X\j8uk3u>U*ZMDm(*e>#k,E[j2)m_7NV=8AD9f.Q$N&;Q'(c^3p,.<oHd*s3bML9\O<APQlW63qraI_d!X8iA;
%NLj2s&Q?+$RGK69qo<S&!.L`bNa62X3N,$oEFI4KZTKgq;FJ:Rgj_2ql0enpc+^`_[jXhJ_<.Fg"gkNP>#u<,PGjeO#944&f7P,G
%lu@n+o6786m\nn0\)EWf;qHY+B[UUsF.@H7S4+)D.e@F==]<rM6u))jBMs.?A@*[.=fu1Cn,V%8acB-Z%_#YVFd)t7jquX.ZmF!@
%h,l+*`Lf[B0=!4%7:,,(P0meL_]_iECVBXZQO:LK]QZB00QJ>)(KAo\NDb+g,4#pY%uKHd<_ZIo'A8,V!7cC((@/ClY/h!N9'TOY
%%,3F%Q>71Yp/hKXP>U2iW0Z7m,ji8]&Ioq%G4.%Xq#'aDZsEHf-4s50X0`e7ceC@*l_6US'3mE2Tf@agCVa.TbjcNn^t+XPLk5n1
%Q5guE<^&nfdJ[L^9MJp!q'$Qra[60R@RP?\H!_lB\Jcb6'7LYGA@2G)0qUl?35!qX]2U5re)TH-3fN`UWAK!lDN/aX5frEtF[`2W
%[?m;:dH4\K(cn8"9!=#gS=mSL&ma(32;b%V'[O-.2.mi$J/0_q;`EV"k7ZL:Kf#l96G?h6IlN?UW#feXKWXK"CY"-b=Gdm)Yb*L^
%88lTmpYj:jP,%TdP1M^+a[]&A9t7-\ldB#EYo,u1![@Y3dNc=u.AP47\;4_s#h.kTc<)[k'"s86b]qCS9*:q-hk='RP=Es(l4Na4
%4\:ZEln/^(9WZQ,J=rkA-`FeZT>4f5]TYi?ia=/'<gZ2kRGb7]A3;/9K#c$H%hW/\PAbZZckS^J\I(dV]1'L#_$8K'/#ngBmtK"b
%OEdS.RDscuU.SGaA^@*'P@Bf?g0]p,Q6@VQVmcS5^WYaC0Cg$%fVd$],CGNr1FVrPd4r,2,$ZtE<N14U-6*&]>5tjR]XGID3<60!
%Mq$ZfI2H<K73.j@-SVSC\npQ.QAe8.<kNBp*i-m8!t!V_MhFBO2nSaE`hMdP]cC-KG5bL24ru[n14mhh1K5%5X6/k=J!K'u3uC%9
%2(&W#E:8H(^'dR4_W<fn@&sn1TQCf_`rZ`N"TV5ZKcT0:"gLCe8Y_aK2;8;3\;8kk!tL)c=hNj9>m6kdmrjuogW".P-9-.f$&2aB
%aSYZk/o$T[C;N\V>aN#gQoZ*#o98YGUQe3i!;Yb$<SB,l/qLb_&LbXP;fie"Q./Eq?r9c=8<Ic57IcLua=<M%;FW([O/#aHIs85F
%>tFpY15FA@NAqQ^Miktn`)EE,b@*Hi\+@t7j!&ctX]E'??K\?&5HX8nG1KVpd"0_AS-(.&;UdDhOJu]/!aE)]5.h/']P6-f,&N2t
%`0"k.f`0t+;.^3oUY*T4[_&!?mP_@T,8EpmdE\?ngTW3F9k405O4JKWrgA;1o4e%%j7i'WEJ?[Y48;`OB+N>fcpe]a_ouCMZN7;;
%Oeo3)QM8GOG^k,-qiU[Bo1<./#bB("!+Mhs&3.JD4%JaU3us$h6'ACu$7FA7[?lb+MBuAlhb&W&.q*'i8((+_:I$`1o6/lV2G6lT
%P1&J9Mm=ea^ndIm@@n%$MX72r`s5?GPOt.A,YsW"O]e"0BFou%D*..Vi2WC^3q>u!A/jNeNd4buKqd;\4QJ*!1e31VX5I-q4H@;i
%_KLG$qE(]/^(dMp#rCDXrPRbGoR2aY4:S'^_`,.7,,kLD3O1V;M/$GjrqP:CY<*;&=b!O]KRI%o9YUaJMC"oII:qrjclt6@EL0kb
%kUL&&G]i#?UKa/ol/-TddB]ElePJ<3lcb8.G!Jec%.hZkH[fULRjqFk!NsXRM2Z33g=9rC[B*OH+5S^G9%KnpMItM%l;lDHKhMOV
%b&a6AhC!2%GZ3MT,ZnMn>%_c98#Zu0PTji83RLqSQB#PG;Wci:1*L3Wi$'F2$Dgd72a$S3K2i0e[=G,b:\se0l+&:4m.#&,=eAR\
%/9D3"i@8RB%<]e\D&_BD$pchr#*O[qcYLYN8,%T4ats'?f,(G?78[$i)P#R]&/EGB;<0Y(1;DrfQE%_+R=493m@sXZ=,&j'VsAku
%coN@r`UclTAP;[G9l^g=RhOY0_u0"bjVB\<K<tk'X!j]SeP@=Io)AE;YPcLLfK8X^:ELpa11eR*o;L`XlB#\!8^OTX@RX0?<SOug
%WQ_X7o%LJ(Am>RlgX1Ws`>0-Q?KD9R9fpmpL7@C,8JuN'2krnS7#33VJ%+XNG/s:Yfu,)hJg@/NQ@bLQn0,Z(hR;(mStEGn_]DsU
%_GZ>M%k'9@'ift6gog#BqTcjM9oNZl?%3GnQDg7.4VB&5lW1J6Uu'oM3QuF06mJ1<,h%JF1tEpBiOel6_.dTn`*r=6Pr2/ga\O7`
%]dXkUN,h"YZKLI;aBpi^]#1hN!ZKN!'=\U-i'^"*5>jW86YdS6c-p_5T[(Y(Hd/t_"6^Phs+:+q_AQT\\O1!?^XR4am'(]5qH@(g
%:P(,*[sYLO=9/XmI2$P9/'Djhp/S01hN@2pi<b&%[r9imR_':"iQ^+,@VL.0bL_-4O_,%H!B6p*$#G!uO"V"oo[i6F5%s<'UW1#`
%9>55OmuNLaqr;b4WpT_=XfFaARmhnD?6:ocOLn/*$H+^]_)6J%ZP__bKn>Pe63XA*$ih3-bnk6Q_iJNZX_?M="B0,KP`#?XUNpg`
%FQG\<1hI,>NjH2F?DUL'c;JpnJQanGFkeP;T"6f^*u'@B""eQ]7tLI5K\-QrA.K7u0_hn.Tc$Jjr7S.TjnUZ+?$%E>,E`Z%Wc`$(
%(iV_<pN[#teE6#*En^*VUH<'FK`I41qVoqS:7+l%ESB_Opk.BEc1KQ,=UGT'[\jqJTUN+J3T[;`#Vk\LS3qI:aQ4Vj;:qYqa*7%!
%CX`)4XH4<@(oalj*aD[]cM_T3@7RRR"#i^Vqnk(94T=@;j&`u[I`_KIF5LnIRs=t8Ef&?23RcVkfq-'&#$sL&Xa]EocRl%:o^Ln@
%hpi6uM_qKMkpPcjh`n.)a%os<5@3s]rc.a]r3XHBitph7rs1EH]-pd1RMl!:.sS%ls.VQZmA;@;EOs-&]QB:1Z*J*oj<YP8Yuo^'
%VD?NH@B2/RK$ZCj?n:AXX(Plk&DEtN6qI3"=kOtCc3CdC%3<_u3;k>2.+(RXqf30YVITRTW2d"U07E`/p$4iMI,/"JOV%Na_?>aB
%@`<!jUN/I4GUL6ZV0h.VI6'aImR9h_<=e/_A?VVl7Is8+=Y.SVAra0.*1KlM<%A<]4G2$g^jWA^)_cuh%<G01nffObTU6?3dNTUd
%lIi.O@9V5&X)<O%Mn+)H,V^THleY*;5g/;lm(HX2dZO5-pJK9>JNWEP3(jgAd!0ed-l\<V8[fa7>'0)cifpC@W*_1=,YGp:ftE.T
%ePqe"/=-4]0$co*OllJ+RrZ/j"4G,Xrl4a3!k[!C:\-7D-M&a=iciW.e"!+Yi>cp'`e%8O1>O4)iN+RMBL1V$K2*$=4^D/V4JolQ
%/M'*B%::1^_\NS%'lsGm/GL7\'hRqGJ'F08-MH]%"Vo%!0\ZR7_s\-X9Iqh`mXH?Nom!O_0t7r[UtrU*m?.4N;pDR$me:V"VL]T9
%m[_'^`m2#dZDJkkpN/&pamR+em(_:X_h$]^e<K:47'RQ7YN0m+c&Wr[hQ4pLQm^:-j2Bm>)bu<\gqgOO8n-"e\cg/o75:pJ!)e#?
%6ko8)HNW7u/>Er.93_'`a/.5u$";J,O=_oID*`J1\)J?&lT:c.jXT&2U,F&m13)=l0qUjfj`+mQ>R:1VA=+Tg=<cqGqP-pCOLCbZ
%m@k)qlSgeahu.&7iI0m1Hm*^Ja04Z=&2Bk.e%%t=lc$D,d:R<W%Ehk.LKXsR-bQ#YLYE&K5n*A6`?YhtMfUlZ5-!eGa[&LR.+6]#
%XY(#kdTiEa1W9*%=$#jLrSU,rnnJ&Y9i/Z]YPf43)Wqnhm]8pTFXZ<'B)&U%Rg"PPYV/j6"H"&_@@bg8HWfcHLpN$3onT=mJ)D0<
%,$NX(@T`oDQt#$B^cln)>OlBD^G;>03Xl[_i+X)`L)bfDNkqRr`PQ^J\S#J@oQ<ro/U)l8m4."S\[r._<<3(OI\O&3/hX7r!5`CQ
%+\cK+YfsgL>EGe_/@>g4jdK5*$'T7$<kbJ$/1I/Y5t-Y8@QL<daeEH!VVt3TWM6HJ<3j]sbEI8M$D!/je?t3siLpNJ_iH*2[5f1^
%ehaBfpHW7@h-W/!mEsT&O@DU5mg#DClVC_q*R6HuY^X[H\D:?5M5Si"K>,A$f"A"dMEgHBghmjb0lFt%on0Eep"h95;gYg?s5p5<
%F*?2\bsE`T0mjGIq*I#=>YsnaEL')AG&T/As#rrMm_Dmci++-Zbha$q$"]AcYW>kXJ7_=LY9_0Eb`,8j'Q/=3neSd-IW?)lOI60"
%[nZ4[lPFAPK(JK2s"6Hok/\dcHN<I33(jLGk7FlL4J<8Z(b;o"BXnbAe%?RN[JE39r)m$[aY0a6(*B8FhMC!';Pm!%);*u,_53IT
%/PTA6_[bDt+fUY"K#^BSEh-80p9hXb:Legb:kH4ri!go'!>Lc&)EZ/@p%\b;25(=gBq1hjXu<?Ue0#)B;$#R.Y<O-d8dL@u+;te/
%r=D@Fok!&ZoG#7_SJk&PF/u5ch)Zq4OLLV7eB9=nO+R4);hRN\@U4eK+,q4`F`?s_kX`V*%\XGfH\0rq>-Ln@b14R:9NXaC#3j\B
%/nNX4MNXJQ[%A=u&d^/YqGs&_"a+b<M4o^pgb#87Z[SF@eH!%NA!A6[1AA:T&PM`=UOrCNS.0e3E&O;3_#\"RN<q\(]<d'i1-T7f
%hBqg0LRYnU92&u.?3KDpe_,bjZOrdY3K!WErq(a:>FZ/t5BJg[UW5($G6ehofHaL9,OO@-UW_!p9k3sJnMXi3DhE0IO1/<N.]A3]
%l><oagNXbh<SckT#SOo0r1nm%r&O5camP5MD)@M&=g$=8G7Q,l^K6!<XZ$Z3T?aRRH78r>Q/S%(3+NfZc__Gj3S8mSO[ZQ9]>Gf0
%0bpking'k_H<bq3Wt,@j[[?I4BFqLn)?26!D4#1MI-JC9B-ROZ*\c^:h2tcQ;kX1h=_\7u?:W):@nHCZg!F"&i&84M(Y1S43`K6m
%!SV)JWuduf+O6J/oirtaOnEG;n/3[Ss(\6aj.46F'm!*9:FPd$+27F"jD(4ADG+D6h`>EX/-E/(k07(r6&KnK7_h=uV9%nOa=?tB
%1&S[tW%QNM+-Kf.#(q`3%u=0r!XVm:An2;Pb-69@e0%p=PNWS%/_Q=I\(n;k;&?9u.D[/RB/`s%[iI>bA?Im.4c73uHdT%J<)*1G
%d99H%G/2EFmMK:)O*qSm3U2n;3[)YonKGb#r:2PF(tt:6ARq4]_i,/ZA1mA;:SPEZW&dSR=nLS9#G]8X?XXHO9i2J(d"@)N)L[TD
%@N_=19nU<kD=2.L6P%F/39#kl0d4rH#]9FM$.6'P_lh#PLY38@c>u'&&s'38mFE7O;u>Q-4M)NpH_ZA9TL$Z<s.HQ8]2tOkTVcdW
%r]sWGHE/J0@Zm3B<^1Vt6WAM#G680E7r^Bd*uNZhR4ZFaj&L7O&"6`3U2%L#K9fKr9F`DlJ,l%cBm(,X/%Go<M.#Et6Q*R;e5_iI
%pU[_g<G-_b<<qd]GEIonhd'Qm..+Hl7MUCDiHtT13ZNFc'k_LpJ!a2P*D9:<4GS2c'gl-/cDhEf&kl+4G6EqTeV6M,_765W6YtHu
%Xaq<XlG6]?7On$5V&QK,MhT4A31Uflb&p58cZ[]L!"(44"piJckCuPi%X+sj>HfS9mpGsWkPVq_`+<gN_<5cmA*Re^k$$,(Hq;si
%[I(ULFca-EA.rrh+UYp:^!=P'kqQ#i!n"#e(cHQtX>[7sB,?-aZeuD^.-NESihh<`NN"m=f)$m'\,0VjW-V@?M08Zo%RL0VZ/t1I
%lS)DAh_dggY]CQt$Fq"%JBbNP8@3."OS=f1$;"/1V#XXPkr7ibGsj)m<AHr`5Up6ETXpKNG[oP+U>PVD;Gm1bf>j<VArZl<kV-]B
%#MSq+!2`mgNp"5%5^b3?(9A^Lp6rO;PtqZ1,FXe5=N[id%X<"#7LVakf!$61e%4A+EY)##!5!!.GIRe:\q!?R>L`7?PH%clK,4(H
%&koofM$3?Z[a>'Q<b9Zt.uk_KhTW&;HCTq!o@'hjM=#=TM]hJ3CRS">@(p([GjkSep[2Z7(-s!+M^bGpYRtjQF>(*SDEqo[J:?QE
%LV6,0[Q]5-:+jBGbSRiD:360)U"eJK[4&%1ja7dSFIHoR.sL5!n/:"YJrUF?]85gg8Y#^E<lS0Q<#-)jCYoVc!96>,m4f`K[(H^@
%(<OX<oHEdE@hDiFIQ!Z].*E[\<&2M3?Y_D1p8^VMg(,;&9CFUdfB0C/<u#=\F$Ks._kbtp)`El;S;>FY]1B5A'!/6<+'17Y`hrk%
%QL2QQ`>IYCe.c]LZcMY1TaeHT6V,<_9r*'4a?5Bkls&039[tJX$n0me`2SJc/b:r."XoVIYus[%>>Xpc,p"r.]nlJ(+rp']IC83=
%@7,=F9s*mYK%00RoXDEYa'_N'*_<F`qq9W$JHV]<<5u*'L*%Ya[guEfZ%#<o*q!\0W">#j\^_1aFM9,+&HZAi@`'9>O_C&F,_tdf
%fIId2(?//I=9sd:hr1FuDr5$Yq]"5=!"ck>_*HHPUlKMDg@R]Trsjio)1fW@S4D.+KKA+C't<Xs'q*t'6_X4d%bTRPAiO-9Vm90k
%DN7b4dm=J[@WKfl3PYH\TCBI$kDDU!@SY$(f`?Q[h!nCkia`?/V\V=-es)]R//^";0tTfAAG%5Kr"`ZTOrfV-^jEuP7cX5)R[;mF
%R,A*+Z*4X*aYA6Tj0Dn0k3Yrg_V6IoIl,O.`6oo+<u%#]=74(n9OU<PJQ-8+X29!G(>_7JQehu`G^,St;lsgdh&pM$@P/OoXE"HG
%e5fknnI=4L-m@!-%H]B?)ga#dAQU7PBHW@)/)oN^&a/,([jLLQS=Q7QcUg(Z2>J:R=2>KNCch<!1MF:`H4Xr_<AmdH&9lDMCW=62
%lt"=t7S^XQJjQ!=eNr8)s,O)]Xgkq7[7tTNMH%$BfcIQ2U(d]$+_]TJbZC9p?UQB/b-&SsQ7CJF9O_-2loK5fH@;<o?dW;7O`;5K
%#8^Jn^rf,*ERWTD,</r=iTjUJo5N8g\nSlFgS,hqf<[s>Z\F/UDa,8m9)t.Xm6/`5N:HG>n_j"sQqsC"0&FS?W"Jd1`e2l<6Dgn2
%rD<*VjfFT&SMeKUoQY9`55DUXNZ)UrC=MEN6fj`=),]F4If)1sDR%@BDA^edV5"5ZCgV,r^7Q9$f(_l1C(f-J[2NdVkgaG!hodu=
%f=jrn2_lr[&;=@C1Vl[8M@B@6'^@U*7UM!j'1L+cO0+%2"nEjP^0(,7G1OF0i*%.%_@AA15ARnO&"i_lmkIUnNJ3l6AH[bB&Vm+h
%A$I&g-/V+J9p:J3+T`@r9VWEo%)Gf[P1XWVYtLBNRggq3Iim<VL73OP.,(RjFN,Q8?NHUff(N=mO(chA4*M*Q*)D]^"[nc$GoP;!
%aP$f,NuLjcCu*^DJhYuj$pk.qohE^D^NL06&H/^`oF\$r];MTmmQ[10i8:9pmS3reC%p.3&o/2_@tR/qli!np$:MSo8hP]_D!HXG
%_2d@(pL>V[3g'q"Xgi<I`Zm:@'-Xoi2fkb8*;?*fhr:##J,1lE&$0ubq^?g*H0f;",'21$Z`3o+U"^ZMFT<V<>\H7rqaEKM[\5iQ
%ZS^%Tqr-H1p`Ci\Rd/DV-J6B]qkSf<Sfj$Z)NtU%Z8m[Si5*6c3B&=RDOZN'8MmB_cN[./+98NTm3*ss\0>k>f?[%1KP:=cmJ+`]
%jV[B_XgYH`07Jg+ecRQO@SZb]nm<ZC=</>j(1:AZ?frRn%cXOr3&tVMigV,5i`TDth59MpE_<SQc=:cc3Uh0)^P2F7a,eJJ-]<YN
%*id'nO6F56LE?uPRCS6SR\;#3a4)qNT!Lm,+<7UdikWr$5287r*Pt[\O;m1C97T'h@0,Z1kMLc7o=,<Xhg#DcY_J``p<^_+YK"g[
%^q02IFQ[M4Uakp,oB2OR^>0`_,CHcqJ^1SDh#]J;/@,g9WolI'1VLkjnR%iF4j$]oQ5p44qn:h-^rSt4?LEjoA_bNA[b<?]Y3PIg
%2K%\sg5lH^aN%GP7K%fMYVP!?FjrZ%bGW2qEEV'M.V8ruqnb1b\@_D?-(cGoVh\W4aam1,ZSmBIQQHA39C<QpgYWLjD*[t>T?r<f
%fam!:$R_da-i2/+rQVjGG6->cgU!@""O!W6U3VAmVXIU63X(9qM:ZB3FS;@O0BqQEXDgJqeuiCEV5-If:.N_.DVQt6.%Q?@O\MHn
%8Ge+'CMW-Hg$n_]n`a8S8Mn9]=lnJdbqNdENVS4n,?"8P7?C0tNGhDiAN/s6GdgP!nK,K@USs91(FU[)b?2ho\:J4_KI3?F$P39a
%%.86:(pm_:QIn\s[m?`XE.m;N@2:%geLDbQ\IYN.Vs>1TU77n/64`!+2Zj=")ihKIW#X]4o_hec*X2)'F]tIW0R70nAKkLSB&o6c
%K=.gHO$QD==HFN;&6n[<^GVoX7u(Qh"=qjuJSFUt^<Y?JX?KG[>u)NKkmsebJ_ZLXD72!?$@8)rQQ)L>`BQ/K,hb/16AhhpX#TZb
%#IK\7Q*Sfg-iDl"44b3hM_,d/2'?LJiWk2/TPRnNf^_M6)bgCP<UW[.#1pj#Y1ZIERo-*X2-h0&Id?Tqp2213&GnkX/(p?Q1:%T^
%Z\"bh<r,$/)s0No%>C_\S*U;kg]_cF*-sNKB1=62l,;VfXLd==fn?86!uk`1c:uB<YrRh$<>!)X3u7-:n1F6udJ\COnL\<h'eekX
%JMJ,"iTVjk&5hpI#H8E7`aTTX$c:28--?4%1DtQ2:rq;>fR3M5/rF_?/iabg.'PO8"gYs34bR)H$+-+.!&^4qOK@-5_&Y"J(Xg?"
%2ADS`p%O*#nQ.KNo8Q\qXJ5TBLe<jOa>FFu'0$&J4$d'SZ)US+PKtZ/(Q'M-6#(Ba-qn_cQJ3G0nulhDQj!s)0glq#A*9s[e[T/K
%$0"/V)h+>*l&5]",a#p8Z2g`62*.?7ZM_L!OdW%LoV9^Nroq.-hL)k_NaKGadE$Ai*F?[p(tOTsF5_$.o,(r#gD/l:OlUO+U4^lM
%f02^'LrS^Dgop%nA"JWbktb49/g%`IK(Wi#'U^f3\r8n0=@0Jhatk7H4u(d=eDW7(r$f8o/!=OW@;l.!W;\l^S/VKGZuP0@F"p24
%rF.^EaY(4go%dWZ:5t.$kWrMV(>r8K:chGE,V>Re;":8!6E,5&WQarbl>LJ,J2J$!]%k=f^m:]eq=?95n--9kl>7%l^dN^5ICS[%
%Ma;\S$%m3YVoR)Z8o3)Udkfmr`Y:=$ha<ZG[t:JW7YfHi=PIIqlMUK]=5KOZ^ZcQ;g:;Xu6u5F\Oq1*gK4_/&B"_Im;ZgNI/M":7
%%_&IP8PRGI@2+X"VC5td.*Sp?4[@h_!YHKHP8AFS1b\7DG%GS6i,*eI!QX09@*P.E(lBjJbT9Cdd'bg2=km<QD6GjdW+cKeTO:!_
%bt)4Kn7Be#BKZ,KaZg_+@k0HQeBK33OpP18S,*:5Uao^8e45*B?8s&^9/t`fKZmcu1olD(=-<mgPul9");6Nq1O7MG@;h[Fn#aJi
%K\#*,D`bcLk0iai);,1Y9L*??_V#j*ERNAn06bBu.;HiU$'8Wk:&!dRNB*B>_C:WQ$M5WJ"[)"qgX0BeMqu-TK8RB?F687fj4H?k
%_+k\3?.@@mM#D+t]ka!3"eX;Lb*m!_j[Ze#><g<(bt)*Rda]<%RtE#kWE&'?&jVqU`7nK1flA2S7s-^"\<.UOVob"b?"M<;--3DM
%M\u(EK1mMZ;M.D:J1N)rU;bRJ7>P>,,s7$ojDSc2e<QNW%Sd`aZ_Df@L^mjqX']7LN1IV_,=;8IcD*dsBnkWhV4bqA4X!P&XZNsY
%*YPd"0T^aG)75Wm9mTo3DnkKsHLfeXLFr@BHfItLXMX56N+)3PHlOC]MIY[?JQ%]RY3)U7*pKI5!T)=-:(-4@13`uZ*[&B7)f:A1
%>4W08*o&XhB'g^^)`uSdUT5Cb5`2u?[PZJd3El.C65'3-mlS0e8S%A^I)H?l@ln!!j]Qhbj^"(_\E/(CR.HBb7VPF*)WqqWlX"`C
%+/iC-h$3i>)aqk:%"Dd/dVt,+ZVCO%(?+lk9I;j;mph^W?N6Qk'+-W@5@+1m)^l$L>>Fa8"DH37+sE\0\f;*160dK6(hG&"qsDfO
%]tMsF.4JoqQHn*6,:Jk&\MaNa!\W<XV/tj1mC1,forMN'm8f0o^@j?-0e_tG&TAVB4\cGuJ$^PTF3$*>\6O0T1B\grmF]/2C10WM
%5PALJTe1+WEj#hH*GJA21+Je.P;Vajoa%FMdrP)<S95j6YiWM;5oR/r$5XeYEi51h\n@scTf%8EE:R.L`GX8ulO2KV:(5jSU[3Bb
%#kAjM!GsMMK>o+_UOY<M_"$`^*[&,mNEb3Ul;,"5/fg^"Xkn!6q=Z$7;bU_7CWeXoK@IJjE12`[VLH.=4C&6OpEA[%)G`D9*DgeL
%<Cd#&_@"QO/7`TO%)C/+a:=rCN:FJap4jHT8f<c/WK`S[SI`rRMRgo?frU>d!!lMg].f(YiUnIt!iYM4B59Up&=1p5O.p7+dU&74
%h/iN9++ucYaQ_fuZWa<Ad22Q9$*(pJ`YD_A4DEZ-s-m-7d!ic>U)GJkSX@uXY]K"l=I\0j/EW&lFKmCZaKe*T]dtLFI]e`Li.c.8
%V/@u&\m.i7MKHCNK<#$3g$)\%0r/,/f)e94?Ll:9?#c"uA&EDMo/L*8N+C60Ep[KDU8*`kbEl(.%-H\?rpuq;6</[Rg),4]pVX<D
%f72.J*f>QbCl=X&g-hC>kZeghpS=72#bRD..`C:QS[=n<I*5[nf:D9pBupp5F^BT2!@j5FX61P+f9p&Nj/oP=Uh>73$@?#G)8]j[
%1?fY.W_fJ3"BHQeS'_I`3feTG,@lR,mO:#DKC^ipRn>:#j8$UDngcPq(t`9&J[YFee8>kAFd7MGV;Ki"'gj1Z+Dc*j]f[\WSAMdn
%+Aj>U=a-r9&t.U_q]bR7%@%T0pSfd[bs_nq1e9N""kkLBO]laOTqg'jA!JuNaXQJiG#/e[C_;a*)T.3CA2)B79$!BCP->#DDTk3s
%2WKT6C`(@/Zcd:+JP(HpAph5%EQ;mWWdt5'R=XAE<d=uKoZ'=71uq%HH;UEJ"\`V+5c^\J6G%EUdCOc]("2mT6UKspTJ$dq2d05;
%R+4-n-^DO[.61Y(P6<?pm9+Q)G$h*IRmNrON)H4L#+MA$8sq4C_uT^nDVTq/m,u:94o<8W"GrfPWZZk&-P^"j0)=h2k`+e/ljQH&
%G$2Yt()"e,)\n9KN9]m7<s`^A4JOfUSp91'X6j_dL*?`3d6+G3Sikl$T"tKJS/BGPf)7^8Pr0?QOSp%"'+dR81u?TI*tku,5p.1@
%>m#6U'/EIIAD:^DAjbk7X506rdARa83%X3GAD=2PFo_IFI$<,TP24GW8sWCX!V_78d5>;ZLDHs'"9F[hT$ZgfX^EsCPb5T-1]M'c
%S.`F_)]"P>!W&65,!AJC[JS#KE0>J'VF>0Pl,:a+DVbj6%kL/292pV7`!4<p+GAB$K+XbsF.1iL-Rq".H/-miBRs"HO<.h;&/ut>
%-#)"^EW[M]KH`tiAIGrW@9Q=H2=T3T)HhD$&Xa*=X3JttW6`>?W;K94cHJNU[:TS^,]+a-8+Rr1:+"O@'^_tgZHLl]WHkOR8e@0%
%B%FR97#YT\!A!!n7RH9G)e6A?P6@8$W9d*n$;#bsbBc9aUZTA0A:nbq&I'fC#/_4V8\-r]Tq,<n9g\EkTG(L$Fr<qjZ&bR)QkI9D
%Fk"QBA.s+o*c/qD$r6uaLDIpn!1ijNVdo/WFV2>[)!i&@O4;f_0Ud[f$f<=JQFfDCg4Dgl.Z2/Ho$Qhjj<:MhHeV8hq@Xo[S,XJq
%5#KbYhR*!U2qWoOo(W'm._[OXkf<js^A1S[-A3tAkB0CY7)I8Y*4n?Rou`n_(663Wr=]5%,p*3D<a^%GE`"Si"25JdL1!`8rc(C%
%@((q0@2WF\/$m"LClpt=,a0KNqQMVU1I]+A#Wfm>CiEO1NF2m`X--RBBN;Xfe-2fomp.7H+pVZb*\Jb&nHZDEn.DQVJgcK'l<Ro9
%=kHt>$0.DZ!+AT3&OKB1=X:cDARPt_Q3l+g8\h&RS@K2';n7K3/N!V6B3-^o!ZCB58(M+8OWbF0og2nb.6a[Ss(]OTW@(ZH'C!(]
%E"X5R[[76R<t,$o!s3?V:aZr5%&CgR\T!F<LT7]gFhi.kJ6mfmc:Y(R=HTO*(R#!l8sa?/okK%1T7:Y)g%j&%9infhL_8U;oR6+:
%O\m6"@ZoX>.\7ctgW;'N=<#N/<aaKO[/(bFChb"..RpoELnZFdot@['LbTTC+8BWVBGRe*Hs!\0EP%_R`[N0al\3&E\bakY]to\t
%!SY'`OS&b>T4lsn0a)1HCr;b(iZY%H**HHU#Ujf!YXOHj_+nTeV)$^q(lW:sKp&ZCS[-)#Gd:fB-DT$b[UU8_mSdSG%lR>&>tC(<
%.cK0Q##8iA)tk70HH\;$MI3$@$1D17a#\luH*G2.Mfc2e.>.4:-,k),:cTC[8.@=4569'99@+!,gE,'`$$61f80u:BHgs9"BtYCS
%$jj/_1-M*4r]T.h"<p4`LErmQ68orPT&q.-66$V8X<DGO(E_c#E[-9q!a1.Y\3W"9BsF*G7VDS,]'Kt4rBam%'j_`]'PBuIh1%3`
%F4Q9XJ!!]-2qmDfJfDN]ng7QhB979$Rpp,Q(d$^0HWYS-njUH+3Nte5IJgd(l:nY.J1Qr&p!lc?q2fSbj@oZ'8pEs<4uM%O%Wm=W
%\XuW;%nPam:C5^]'++>h,\67A]Tfj,6-[F/;(%Ljc$ER<FW0V0if.2uQ[7YMJKjS?$uLT[82PnV"fp@Ig$e=m66HITfJ^pH>ClFr
%j;gOE%#9<#&9<^Pkmfc5a0-,j8!Q;po2ZXrTY"mg!H$$X]BC(lEjT#(q9dSTmqgd,P-@krg8cX[9o#kHN?L:*5-Xh:9K+1D)]Ka`
%70#XD%c,5&N:2GiXaI6#4:U&,(Hj7HR&/!HeFtQ3btC1[bq]u#(EAUV=:C_Q`83$9s23n]63a4\bb-hd_@<U!JOGJ5cj+]'NSfsg
%.j&ab.tf3Q&_k)Up*:f<lQUnh;#9:nVC:IKWPZ%`mnbSFl9TmLY@VQea3.6bn[=O<kcH)<?2M9;%0C2;;a$Pr+JEN1k6>dnFZjt\
%f_<>j,)1tI3G$Ja8f-G_$1N,'i?.7dk#oW3:s%(C2.XnYi[.DLj=.a;hcFOn:M8"3M90&N_C8>ZFZ,V<bXWRFFl[;AfZhT"ZQ3R!
%)%>&@.U>"(HpAi<`4T#j1-^uu.!D,TU_[TQLYlm/5e!fFRZ0C,@<,a$Th(q^*@Sa6n78>@cj_t@,)jWc4)/:e]UtRjYJ#7R2C6of
%-fZS)A?[=6F`hQD6(Bm5bIuJDo4ncp_W2S2NFE;fE$rbS_HKAP,JEY*A*Xa!ZB@`ZT+H^7.:VV]2G:-k'ZAstjf*o*fc($!Nh/8'
%&otTsG[=A&PR^0UW9RIGq>m)-fHY,*'"#+;($><>8A^b<Mme-.1PQHV$'I:77NOf;;(FW#7YQrFjCp?5+K@sU&4P:eW9"H#Tk$Bt
%Fn<8uR>jEJFOXfpXdFdc`u4hY*6_6mTIX^u',H0RntboK,f#L88JY#eg:fLNoN;B6"A'lQ-#Gu5S0^-5^!NUE2TQGtjQlnJ<>IM/
%E@g/o:tLpW<M."Q/"O_7+Q3M<$?rpV8"p0&5gg?[MIKD74Iu7>,gnV.`T[p_%C@Xah7t];/4e(!1%1,$YYV5s`>!=u;)+7/-mgaI
%h>grHZ<`[#ib1R\<GhsPB+;e)!'fX#7l2g9hq$4l)&bom`!VUmE/Ef3E93gX5bsJeLs;pmJ]&_VPa?KuE.*C>9m/"@7&eRueVi1&
%!29Ne=Y-!1U'aUc13!$p:4<_\pe\sE6;CZ53c5"\;eTDL/8kC(BV!Y[*oZmem=mrj2hE"p#jta$%?_[,g<-la)PE(KiWBi!I3=)s
%_1)e3X'o4e9ZdoP&RA-:HucinT,Probl^,ddhm&P+C7f_]1j#'allkE6Ib&S=B%mZiXe)F:,`B0BlDuDK7oe<FutT&A('7fD<\Jg
%e3V[4HO*+[Z9ROe%`tYmNAl&kOA_sG0Ik'iPO-%.s%rqTPRo+8]5"2""6;F?+Fl^u;'P%Rr"KVCC^14?,5eQ%9;Fuid[A%q67#O_
%W2">XM:Ea4agQ"TFfCumq\;ESK\OR8PrV>g*W2LSO+?EO'TW9'VB_s6,-B#S!umYu5YrpO2l9G1.mGcshuH2;mu`%V#s[i:(8k;F
%Gq1/rqZ(-n,6>)-Vr\CTHOYufH*O@NX,qFAfKgI"jCLSJS!k]RR'W]PKssQ=#@t8&@7!kDnPf1hVc/s&'jH0n]T;j8Wu7(a,_ta>
%%55j_ZZ0NS&C^d5iK;)GgoE;.A69%ph2'dR3NL0<I,s&/F)5YVrSGX@Mns5OhA+"6(.hMKX518nfd>gF*@(^PShGJ4]_[!_dHLgb
%)ksWR7EcQSdM1U]a?/O-AclK=D58BEU"GF@KOXroMZ$0rp+N,l5L3.WJr>,ETidkYrZjh8SpRV-=7+]+&>,]$07ShqrZqpKo:iI^
%-gur0FtZ^ih>),Q_m9&pES,,@][<6uXZ5[j)GVSc?Kn(W'(-J^$!SOCDY2lRl^q3s[Wq9$RZ^-_QgfCB\_*tiAZX;PUt!*NRoW-q
%hPS?RfVSI"Lf$-1PA"SYZE6Ec,<3?0rXE>QaVtJp3fKb=NR!<`RjUPW]cSblI'#pnaCNH%@h0%V"oh/LOJf<1X&*G1-H%[hh&4%>
%0VROA+W+PeRiB#=\DS'&If2oEq,\;4/ma]J/W(MO/l![ic@=8^AU2G`,7YU>8>+`TF?$";YK5A^Wa/!(EK*Jp>:,k_FVBa;/Ou[K
%HHAmE#*7]%LOn\pGJ+g7\8[==N(QhO%!RQb&MI1i]BSr"(%I]!(b/9&?k>+0KTQAsha-2Uf_6H#&1TRQL\O(@gThd[6)fL7QFYsC
%8U*qWM\atoN&/h.36)HV#22&h]Zo(o]]p#113"'s!E#0ld!?"q=p#')ZDg>F=$SWNH%?,-(8<.4J(]#<X&bi\Q6-J<2[`;g?F:@'
%[)4tn7b*s?+iHs4qsOC,Ycl=Hm(6?8@Q"f5j,(juljKgTZRU>?fGeF7/2hMOg9Llp\:YP2d6^a$e?W/0^EM[;N4E(b=D"A,aLr^s
%,p&Y@e*_)(eJBbn6@O,oC>lAHK=YQeaE2ANi5VVlq_g;^!g5S6o0el"]s2OCVlDN32#K8tTn+sKi,Kp&O,EEhO%aLfR[nI+LbE(Z
%j!#H^-fV')UI,9CQr4`r/;1o\[lP\7Qg#3l9(p0R+gb2%YqAnW`99PA6X=l,Ht1Z;,:b5Si6u?_@$ub'8q8%tL]:\N7H'.TqCFdO
%/THkk/TGatJYU/W5F"3]>DY_YPrPS;&r68H;W8fHGqF#,:F-M4<oVJE,n=0sQP,'u.rfOM;<$Ms;i*m6&dJu-0U*X'S`_GV,nBaM
%`1_T?QT14<&he7W"^Jnt<oW&uOGpZT`1]6dihhS8l[j41E@A:/#F?DV%fNBF+W:$m;;u!([%kP_5*\,&AOhSE^6L[rV\04NSk:!V
%Xi/&Db`3<kn5SCDXaK(UETjkEL\+R*&<%mn-ul2p&r1"/&>p.rE[u.^DC#c2qb)d`B!DGU6*,&S?K9E)WhFZ'h5SE1Kh%,T"YYlS
%LUPbnfR40?Z,RqhdD6Z+j02*,Vf-=G&#U>$i&(umLguE3obrU[j;6(V?K5Gf`O&-pL=J,&YAu=DY\e!:)9mZ9.YhP'Q:I3-\Q(Z"
%jAb5;DH.22>32DbjJg4/]+d94CQX8"\t3XVZ3=Ws)M`X>ES-jt*5\ht+^Jk'[dd>W&FVId(;2nH*5YX6K1FdZ)M`F8EG/-*%dd<W
%cu(]N-90O8m+I-,`Za2S*5[l]GdA<Dbu->fNC1A13*8A`8fZL.,Gm?AK[l\H_nncN7?D4gP"^\7j?4<5FA2sF@IbBR2Ii+UYGkp$
%?<OBAgQK<cdB'gS@N+3KUc&ug9?*jfl8ZgS!Jk#i&'5EDKe5rCpi9s]AL\HYA3E&3BnqJu/87i).N%n-B`o#:<&bDX+aO8YP2nn=
%,nP0n"W=Ak@0&l]'W$<i7D4;I'M+`)BafhG7JW.sLCQVeb,>i`A-D20iB-8&ZbdeCilpI?;rh?,p*4lJ&G'AG=X8DkG:u;CVoPQ)
%[R1L<jJSdk3er%&+jJko)DZsj+;p3<+_(PH35s0:K]9W]'ZV<(6ZGN)F+WDI-R_a&6#l`)MUNZ@38r<iMGnFiSGEB-WE1L.SS2(Q
%:3hBLLm[*'`Q:%ec=S2g',2gA\j17WN*;l6nHk):DbqFm3*%G&Z+.jV`<eIO:A]-aifkf=%SHq#:n2K[iY_#oL#P'SkCDQV)\f1h
%`o[ECkltO#TK%\YfqCCRTdpuCdfkUBmnfNM2^FF7jU/ucg-&qcihnjRB=hSlOp1+\/5A'Ec3hQgCT%ZqOiHQ')?V]Y*)$P=FqTaK
%Cf\rQ+X2Hhoqitd_,uT>hRP.ka8D=,hCq(NdfmXahT'7;cfRr%%h&u>ee<e9>_n@&-uV$Q:VU=_aqKLWh(Ur,!Br2"oa/OR<5f0]
%'5n^/O#N[b4RIm^M)Pjhp4VC=2[iKm@<c$t_XMAbj+61R2[iK-_XOK1er&EX2[iK,_XR1:L8R(e#KQ@'El%7TnA+Pgnb9igS.<JU
%G1&k;[#CdRFJ14!V5I<g>8=c^1I,4FJO=TT*dD(#?/QaAhN](ZkXX#lN//%dhH;.f5R#shePWCr?(/snrC`WJ7?+W@h3s]In%\/3
%M]n*TI$f!H+o/r4@+.'_B8Y[Gr*T#*([Wd/LWD:_\rNJ?.UT''W9sSj^O<\;V]>Y5Op9idC,/`1?1gPs'q+?W`)"U3R[Xo.AYb@u
%5ZBP_>k_hGF&o^tg016XgAqO52XI*Y0`:J8)aCN>-T\EXan5@44r41LTaD"R/3[6\"U1U=",mL(X3m)jpll?dWfVW@;AMM&$e\ac
%T6Q&:_.JGVD$,I1iL\,8AFAloWV=]ieC5Z.?3KZ+O72C0_HL0f7]+Ir1!aDM3Cfu;L>i]=bE9%s)Qgk-6.P[?EM%cB5N<&H?D)35
%c4'a:Q-bb4"C&GoWqUN/X`N=EP5uKdoFKWU@.%pB!u*3Ujfj^/r]aVn.>6fh5Q%i@?er`hX5ilRKDO^#PLNVmM\e[Y.7,VDde/Ot
%+N;qp6Us*!p/8[(,.f,u]&a=PmIk$)-JPd+EmUtURWdHr,;&?g(8X%=:+d#@Ae#%"Z8)W*=I>e4f?q3UPm"!WS!^jRo?43XI#r+0
%greF>&uIQ$DE_T"/h3)XfkaUtOR!,`C^,:6!sMQB2_IeA\"_hC(*N,MHj-mL5]3>IilNQ*3tlf'`QI3K\Zh(pXEO6I%I)X!1=pr!
%+t!jT#CigAj:W&DmNBHnNq>j4*bR4tTr,9]Tn)ln_]8.TF45k)(i0"7r"lUJ.jnd9:14>R<%);GkI0E,YVbll1sO3R&\o0&Aldk@
%0q#FM^D4l+ZM.Wn%Z"7LoN3(&r:7BXeD@s&H1#5Xr,3Z,WCsQ"Bk0Srm^3MfEr\8/P+6$Sh&:CJ7LD_[P>E"`7XqMT;c'^b4^:t:
%=g;,;I/CI<-?f?Yk#L6e._\e>-?6@5_r?j.=A_WQ$Y4#PAhs-i_4U/AZ3!(R]^\1d$!8gLkH/iPP,?G%ef-.aET3[1<?&!#nLK)I
%5Ho:b?^>+cr+)"q8dNtJH;^B\9k7MH1/@%";+s?nZcWu,N8jP<<^9NPn\-@,^(tV!m,]J@!jM(Q#K(k2*_f'd?!hH@\'O$LiI:+M
%r_TMaTAFh_-[4kOdU^ti?k@b5c)u-rgg,Zt[nlb4*pi=;KI:3>58]T!9&2u#c!5,PT@7V$WSki5M7FI_@#F>847RO!j)-)!Q>7]T
%N"(X4DTe8E&DFRo(C#Q.Fo\[PV:W_YLsCY\s.etm,M7!ZA;DoVFYKLq4F788)7(U-":i5MelR_qep!goUkn$XRL#99e-@g"EC(J2
%g`+p[Oq)bW'6QGTY8(4D>:K[U0\HYj5V0h4k$>3!N\oc6Yk:_UCs8A(Ec8)M@b%/EOa7,:7.RmOp.l_8_JZU(8=ZXuB!_Q",)`:<
%8Kcdo*FWeEGGR90A.d!!3X:g!3]h4Z_1ft]@NUoHif/X)WtiLhD+j>:UZa5e2)#nAM:ko#=N+C;<R]p_X+gfr0e#\qC9J,OAnCrh
%Ag%]RMCKj'[c3`Gn9B,Jl;0mbY/(Z)\-KrYN2Br$65gTO]ppse$u;To7'npE%C<:kTPbJ=-5\$\d!4h!KSR%pKal8s;Fm.cF9flp
%ImQI;V$I.F5qri1LM05&h*fI&!]@:o9fNsEQT.K3<Du9Igk4j'77Sq/;Q/pi"s%F4Z8_%TSQ&j4XP=rts*/qIZu)b='+PabM4rQ4
%17'P9/IUEn7S!O9<_L[%HSG*BZR!3'jp4>X![p/?Coh](P'I!o;s.Bi3O/eDHFP2O:jlo!S:0_[2$ssADm1CGjBn+Q8/3k,HPjpJ
%fkn.NI:VNBXR\(*d]9*QfVNYq4d*bjkV4]/)2oA.j#:h=&padG2!Rc?hI,%@-8U4<D.BUW*$%6u3kCH>IgNCP,iC>\(BjZ9a[R'W
%>F28bcKs;-BMI.,]cPqA.+h&A$"oBnfmsq3+Y6)Ss1Sg@h1D\V4<Lr09Kr5Ui&'&FBm+u33.[_'J!\h"HR@$s1hXc0@Q6.E>-gcH
%FA%b'6c]7Io=cA#9PWd64<Nr/&F@&jg=rg+);gd8(4(.(S-&uus$<'H@kj?icZhLN*gGOZ]Mr`mlT@jD_T.>Ig17phK\W9crYa:b
%=Fr(aEYG7mT#kIRKc0VS(t:'YZ3rr%%F!0B_^Q*@AHq7<;'N\(\GRON(75Rp&!.+:_\N-("G_Q_&pS\*/$H#EmE0EMTUVOdXEs"I
%q0EYh21u#66pY%q!mqVR2FfDbaQNDWf"D%Q5F;E?TDn*D?@V]f^]0Yh^70_hria*6LYr-@J,.q#qu6JBq5aPb&-)L<s8Dgj^\apY
%Jo^hhTBH7?dm*cRn,N'1rQfuhrMP/Da8bu86%YU")uf];s3lJn5QC"5r;U31ERt~>
%AI9_PrivateDataEnd
